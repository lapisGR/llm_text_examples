--------------------------------------------------------------------------------
title: "docs.delphi.ai Documentation"
description: "This documentation serves as your comprehensive guide to Delphi, an innovative platform designed to empower creators, businesses, and individuals to build, deploy, and monetize intelligent AI agents. ..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai"
total_pages: 33
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# docs.delphi.ai Documentation

# Welcome to Delphi Documentation

This documentation serves as your comprehensive guide to Delphi, an innovative platform designed to empower creators, businesses, and individuals to build, deploy, and monetize intelligent AI agents. Whether you're looking to automate customer interactions, deliver personalized content, or foster engaging communities, Delphi provides the tools to bring your vision to life.

## Overview

Delphi is a cutting-edge platform that simplifies the creation and deployment of sophisticated AI-powered conversational agents, often referred to as "your Delphi." It addresses the complexities typically associated with developing and managing AI interactions by providing an intuitive environment that abstracts away technical hurdles. Our core mission is to enable seamless, multi-channel communication, allowing your AI to interact intelligently with users across various touchpoints.

The main value proposition of Delphi lies in its ability to transform complex AI development into an accessible and scalable process. We differentiate ourselves through a strong emphasis on user data security and ownership, flexible monetization options, and native support for diverse communication channels like voice, SMS, and popular messaging platforms. This empowers users to build highly interactive and personalized experiences without compromising on privacy or control.

Delphi is ideal for a wide range of users, including entrepreneurs, content creators, educators, customer support teams, and developers. Common use cases include automating customer service, providing interactive educational content, building engaging community bots, delivering personalized recommendations, and creating unique, monetizable AI services that can scale with your audience.

## Key Features

Delphi offers a robust set of features designed to provide a complete ecosystem for AI agent development and deployment:

### AI Creation & Customization
Build and tailor your AI agent ("your Delphi") with powerful tools that allow for deep customization of conversational flows, knowledge bases, and interaction logic.

### Multi-Channel Communication
Engage with your audience wherever they are. Delphi supports seamless interactions across:
*   **Voice:** Develop and deploy AI agents capable of natural, real-time voice conversations.
*   **Texting & Calling (SMS):** Integrate your AI into SMS workflows for direct, text-based communication and automated calling.
*   **Chat Platforms:** Connect your Delphi to popular messaging services, including direct integration with **Slack**, to extend its reach into team collaboration environments.

### Sharing & Deployment
Effortlessly share and deploy your created Delphi to your target audience. The platform provides streamlined methods to make your AI accessible and operational quickly.

### Monetization Capabilities
Unlock new revenue streams by offering your AI services through flexible monetization models. Delphi supports the creation and management of **memberships**, allowing you to gate access to premium AI interactions or content.

### Data Security & Ownership
We prioritize your privacy and control. Delphi is built with a strong focus on **data security and ownership**, ensuring that you retain full control over your data and interactions.

### Multi-Language Support
Reach a global audience with built-in support for multiple **languages**, enabling your Delphi to communicate effectively across diverse linguistic backgrounds.

## Documentation Structure

This documentation is organized to provide a clear and progressive learning path for all Delphi users, from beginners to advanced developers. It is structured into the following main sections:

*   **Getting Started:** Provides essential information for new users, including an introduction to Delphi, onboarding steps, how to share your Delphi, and details on data security and language support.
*   **Using Delphi:** Guides you through the day-to-day operations and general usage of the platform.
*   **Build:** Focuses on the technical aspects of creating your Delphi, with dedicated sections on building **Voice** interactions.
*   **Integrate:** Details how to connect Delphi with other services and platforms, including a specific guide for **Slack** integration.
*   **Monetize:** Explains how to leverage Delphi's **Memberships** feature to monetize your AI services.
*   **User Experience:** Offers insights and guides on optimizing the user experience, such as the **SMS Guide** for effective text-based interactions.
*   **Fast Fixes:** Provides quick solutions and troubleshooting tips for common issues, including **language-related** fixes.

We encourage you to explore the sections relevant to your needs and embark on your journey to building powerful AI experiences with Delphi.



--------------------------------------------------------------------------------
title: "Welcome to Delphi - Delphi"
description: "This document provides technical documentation for the 'Welcome to Delphi' page, serving as the entry point to the comprehensive Delphi documentation set. It outlines the purpose of the page, its navi..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/home"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Welcome to Delphi - Delphi

This document provides technical documentation for the "Welcome to Delphi" page, serving as the entry point to the comprehensive Delphi documentation set. It outlines the purpose of the page, its navigational structure, and the key resources it offers to help users understand, build, and integrate their digital Delphi clones.

The "Welcome to Delphi" page acts as a central hub, guiding users through the initial steps of creating a digital version of themselves. It provides an overview of the Delphi platform's core capabilities and directs users to various sections of the documentation, including guides for getting started, advanced usage, integration options, and troubleshooting. This page is designed to ensure a smooth onboarding experience and efficient access to all necessary information within the Delphi ecosystem.

---

## [Welcome to Delphi: An Overview](#welcome-to-delphi-an-overview)

The "Welcome to Delphi" page (URL: `https://docs.delphi.ai/home`) is the foundational page of the Delphi documentation portal. Its primary purpose is to introduce new and returning users to the Delphi platform and provide a structured pathway to the extensive documentation available.

**Key Features of the Page:**

*   **Platform Introduction:** A concise description of Delphi's core functionality – enabling users to create a digital version of themselves that thinks and interacts uniquely.
*   **Navigational Hub:** Serves as a central point to access all major documentation categories.
*   **Resource Links:** Provides direct links to essential guides, learning materials, and support channels.
*   **Important Announcements:** Displays critical updates, such as the ongoing transition of the documentation platform.

## [Navigating the Delphi Documentation](#navigating-the-delphi-documentation)

The "Welcome to Delphi" page features a persistent left-hand navigation sidebar, designed to provide quick access to all major sections of the documentation. This structure ensures users can easily locate relevant information regardless of their current page.

### [Getting Started](#getting-started)

This section is tailored for new users, providing fundamental information to begin their journey with Delphi.

*   **Home (`/home`):** The current page, serving as the main entry point.
*   **Introduction (`/what-is-delphi`):** Explains what Delphi is, its core concept, and how it captures a user's unique style and perspective. This is the recommended next step for new users.
*   **Onboarding (`/onboarding`):** Guides users through the initial setup process, likely covering account creation, initial data upload, and basic configuration.
*   **Sharing Your Delphi (`/sharing-your-delphi`):** Details methods and best practices for deploying and sharing the created Delphi clone with others.
*   **Data Security & Ownership (`/data-security-and-ownership`):** Provides crucial information regarding how user data is handled, secured, and the ownership rights associated with it. This section is vital for understanding privacy and compliance.
*   **Languages (`/fast-fixes/language-related/languages`):** Addresses language-related settings and capabilities within Delphi, potentially covering multi-language support or language model configurations.

### [Using Delphi](#using-delphi)

This section delves into the operational aspects of building, managing, and refining a Delphi clone.

*   **Getting Started (`/build/overview`):** A more in-depth guide to the build process, likely covering the technical steps involved in creating a Delphi.
*   **Mind:** This category likely contains documentation related to configuring the core intelligence and personality of the Delphi, including knowledge base management and response generation.
*   **Advanced:** Expected to cover sophisticated features, custom logic, and advanced configuration options for experienced users.
*   **Access:** Pertains to managing user access, permissions, and potentially API keys or integration credentials.
*   **Instances (`/build/instances`):** Details how to manage multiple Delphi instances, if applicable, or different versions of a single Delphi.
*   **Testing (`/build/testing`):** Provides guidelines and tools for testing the Delphi's performance, accuracy, and conversational flow before deployment.
*   **Settings (`/build/settings`):** Covers general platform settings, user preferences, and administrative configurations.

### [Integrate My Delphi](#integrate-my-delphi)

This section focuses on connecting the Delphi clone with external platforms and services.

*   **Website (`/integrate/website`):** Instructions and code snippets for embedding or integrating Delphi into a website, typically via a widget or API.
*   **Phone (`/integrate/phone`):** Guides on integrating Delphi with phone systems, potentially for call center automation or interactive voice response (IVR) systems.
*   **External:** This category likely covers integrations with other third-party applications or custom systems.
*   **Single Sign-On (SSO) (`/integrate/sso`):** Documentation on configuring SSO for secure and streamlined user authentication with Delphi.

### [User Experience](#user-experience)

This section addresses how the Delphi interacts with end-users and how to optimize that experience.

*   **Communication (`/user-experience/overview`):** General principles and settings for how Delphi communicates, including tone, style, and response mechanisms.
*   **Texting and Calling (`/user-experience/sms-guide`):** Specific guides for optimizing Delphi's interaction via SMS and voice calls.
*   **Improve clone (`/user-experience/improve-clone`):** Strategies and tools for continuously refining and enhancing the Delphi's performance and accuracy based on user interactions and feedback.

### [Quick Links](#quick-links)

At the bottom of the navigation, these links provide direct access to external Delphi properties:

*   **Back to Studio (`https://www.delphi.ai/studio`):** Directs users to the Delphi Studio application, where they can build and manage their Delphi clones.
*   **Create a Delphi (`https://www.delphi.ai/pricing`):** Links to the Delphi pricing page, allowing users to explore subscription options and start creating a Delphi.

## [Core Documentation Sections (Main Content)](#core-documentation-sections-main-content)

The main content area of the "Welcome to Delphi" page features prominent clickable tiles that serve as gateways to the primary documentation categories. These are designed for quick access to broad topics.

*   **[Getting Started](/what-is-delphi):** "Build your Delphi in as little as 10 minutes." This section is designed for rapid onboarding, focusing on the initial steps and quick setup. It directly links to the "What is Delphi" page, which is the logical next step after the welcome page.
*   **[Using Delphi](/using-delphi/section-overview):** "Your complete guide to every feature, setting, & capability." This is the comprehensive manual for operating and configuring Delphi, covering all aspects from basic to advanced features.
*   **[Tailored Guides](/tailored-guides/section-overview):** "Guides crafted specifically for your profession and goals." This section provides use-case specific documentation, offering tailored advice and best practices for different industries or user objectives.
*   **[Fast Fixes](/fast-fixes/section-overview):** "Quick answers to common questions and problems." This section functions as a troubleshooting guide or FAQ, providing immediate solutions to common issues.
*   **[Pro Tips](/pro-tips/section-overview):** "Best practices and expert strategies to perfect your Delphi." This section offers advanced advice, optimization techniques, and insights from experienced Delphi users to maximize performance and impact.
*   **[What's New](/whats-new/section-overview):** "The latest updates, improvements, and new features in Delphi." Users should regularly check this section for information on new releases, bug fixes, and platform enhancements.

## [Learning Resources and Support](#learning-resources-and-support)

The page also highlights various learning resources and direct support channels.

### [Video Resources](#video-resources)

*   **Delphi Academy:** "Learn through Delphi Academy (Coming soon…)" This indicates a future platform for structured video courses and tutorials.
*   **Delphi 101:** "Step-by-step video walkthroughs to help you set up and start using Delphi with confidence." These are introductory video guides for new users.
*   **Delphi Actions:** "Unlock your Delphi’s full potential. Craft a personalized user journey with Actions." This refers to video content specifically detailing the "Actions" feature, which allows for custom user flows and integrations within Delphi.

### [Inspiration](#inspiration)

*   **[Get inspired](https://www.delphi.ai/explore):** "see how others are using Delphi." This link directs users to a showcase or community page where they can view examples of Delphi implementations and use cases.

### [Direct Support Channels](#direct-support-channels)

*   **[Ask Dara's Delphi](https://www.delphi.ai/dara):** "Talk to our CEO’s Delphi for instant answers." This provides an AI-powered support channel, leveraging Delphi's own technology for immediate assistance.
*   **[Email Us](mailto:support@delphi.ai):** "For direct assistance, email `support@delphi.ai`." This offers a traditional support channel for more complex issues or direct communication with the Delphi support team.

## [Important Notice: Documentation Transition](#important-notice-documentation-transition)

A critical announcement on the page states: "Our documentation is moving to [this website](https://intercom.help/delphi-ai/en)! We will leave this website up until all our customers transition to our new studio :)"

**Technical Details & Best Practices:**

*   **User Awareness:** Users should be advised to note this transition and consider bookmarking the new documentation site once it becomes the primary source.
*   **Redundancy:** For a period, both documentation sites will be active. Users should be aware that information might eventually diverge or be updated exclusively on the new platform.
*   **Future-Proofing:** This indicates a strategic move towards a new documentation platform, potentially offering enhanced features, search capabilities, or integration with support systems (like Intercom).

## [Feedback and Social Media](#feedback-and-social-media)

*   **Page Feedback:** "Was this page helpful? Yes/No" This feature allows users to provide immediate feedback on the utility of the specific documentation page, aiding in continuous improvement.
*   **Social Media Links:** Links to Delphi's official LinkedIn, Instagram, and Twitter profiles are provided for community engagement, updates, and news.

## [Cross-Referencing and Navigation Best Practices](#cross-referencing-and-navigation-best-practices)

When navigating or contributing to the Delphi documentation, consider the following best practices:

*   **Utilize the Search Bar:** The `⌘K` shortcut activates the search functionality, which is often the quickest way to find specific information across the entire documentation set.
*   **Follow Sequential Guides:** For new users, it's recommended to follow the `Getting Started` section sequentially, starting with the [Introduction](/what-is-delphi) page, as indicated by the "Next" navigation at the bottom of the page.
*   **Leverage Anchor Links:** Within this documentation, main sections are structured with anchor links (e.g., `[Section Name](#section-name)`). This allows for direct linking to specific topics within a page, improving navigability for users.
*   **Contextual Navigation:** The left sidebar provides a consistent navigation structure. Users should familiarize themselves with the main categories (`Getting Started`, `Using Delphi`, `Integrate My Delphi`, `User Experience`) to quickly locate relevant sections.
*   **Stay Updated:** Regularly check the [What's New](/whats-new/section-overview) section and be mindful of the documentation transition announcement to ensure you are accessing the most current information.


--------------------------------------------------------------------------------
title: "Memberships - Delphi"
description: "This document provides comprehensive technical guidance on setting up and managing **Memberships** within the Delphi platform, enabling creators to monetize access to their AI Clones. This feature all..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/monetize/memberships"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Memberships - Delphi

This document provides comprehensive technical guidance on setting up and managing **Memberships** within the Delphi platform, enabling creators to monetize access to their AI Clones. This feature allows you to establish recurring subscription plans, granting users continuous access to your primary Delphi Clone and any associated instances.

Delphi Memberships are a powerful tool for building a sustainable revenue stream by offering exclusive or tiered access to your AI's capabilities. By leveraging this feature, you can define various subscription tiers, control usage limits, and effectively communicate the value proposition to your audience, fostering a loyal subscriber base.

---

## Table of Contents
*   [Setting Up Memberships](#setting-up-memberships)
    *   [Connecting Your Payment Provider](#connecting-your-payment-provider)
    *   [Creating a Membership Plan](#creating-a-membership-plan)
        *   [Defining Plan Details](#defining-plan-details)
        *   [Configuring Usage Allowances](#configuring-usage-allowances)
        *   [Crafting Effective Feature Descriptions](#crafting-effective-feature-descriptions)
*   [Best Practices for Membership Monetization](#best-practices-for-membership-monetization)
*   [Related Monetization Options](#related-monetization-options)

---

## Setting Up Memberships

To begin offering paid memberships for your Delphi Clone, you must first establish a connection to a payment processing service and then define your subscription plans.

### Connecting Your Payment Provider

Delphi currently supports **Stripe** as its exclusive payment gateway for processing membership subscriptions. Stripe is a robust and secure platform that handles payment collection, recurring billing, and payout management, simplifying the monetization process for creators.

**Steps to Connect Stripe:**
1.  Navigate to the Memberships section within your Delphi Studio.
2.  Locate and select the `Get Started with Stripe` button.
3.  You will be redirected to Stripe's secure onboarding flow. Follow the prompts to either connect an existing Stripe account or create a new one. This process typically involves providing business details, bank account information for payouts, and agreeing to Stripe's terms of service.
4.  Once the connection is successfully established, you will be redirected back to Delphi, and your account will be ready to receive payments.

**Technical Details & Best Practices:**
*   **Security:** Delphi integrates with Stripe using secure API connections, ensuring that sensitive payment information is handled directly by Stripe, minimizing your PCI DSS compliance burden.
*   **Account Verification:** Ensure your Stripe account is fully verified to avoid payout delays or service interruptions. This often involves submitting identity and business documentation.
*   **Currency & Payouts:** Configure your preferred currency and payout schedule within your Stripe dashboard. Delphi will process transactions in the currency you define for your plans.

### Creating a Membership Plan

Once your Stripe account is linked, you can proceed to define your membership tiers. Each plan represents a distinct subscription offering with its own pricing, usage limits, and features.

**Steps to Create a New Plan:**
1.  In the Memberships section, select the `Add new plan` button.
2.  A configuration interface will appear, allowing you to define the specifics of your new membership tier.

#### Defining Plan Details

This initial step involves setting the foundational information for your membership plan.

*   **Tier Name:** Provide a clear and concise name for your membership tier (e.g., "Basic Access," "Premium Subscriber," "Pro AI User"). This name will be visible to potential subscribers.
*   **Description:** Write a compelling description that highlights the core benefits and purpose of this specific membership tier. This helps users understand what they are subscribing to.
*   **Monthly Cost:** Specify the recurring price for monthly subscriptions. Enter the numerical value (e.g., `9.99` for $9.99).
*   **Annual Cost:** Specify the recurring price for annual subscriptions. Offering an annual option, often at a discounted rate compared to monthly, can encourage longer-term commitments.

**Example:**
*   **Tier Name:** "Delphi Explorer"
*   **Description:** "Unlock essential features and limited interactions with your Delphi Clone, perfect for casual users."
*   **Monthly Cost:** `4.99`
*   **Annual Cost:** `49.99` (effectively two months free)

#### Configuring Usage Allowances

A critical aspect of membership plans is defining the level of access and interaction subscribers receive. Delphi allows you to set specific usage allowances, which are tracked monthly.

*   **Unlimited Access:** Select this option if you wish to provide subscribers with unrestricted interactions with your Clone. This is often suitable for premium tiers or services where interaction volume is not a primary cost driver.
*   **Capped Monthly Interactions:** Choose this option to set a specific limit on the number of interactions a subscriber can have with your Clone within a monthly billing cycle.
    *   **Value:** Enter the maximum number of interactions allowed (e.g., `500`, `1000`, `5000`). Once this limit is reached, the subscriber will be prompted to upgrade their plan, wait for the next billing cycle, or potentially utilize a [Pay-As-You-Go](/monetize/payg) option if available.

**Technical Details & Best Practices:**
*   **Interaction Definition:** An "interaction" typically refers to a single query or response exchange with your Delphi Clone. Be clear in your feature descriptions about what constitutes an interaction.
*   **Monitoring:** Delphi automatically tracks and enforces these limits. Users will be notified as they approach their limit.
*   **Tiered Pricing Strategy:** Capped interactions are ideal for creating tiered pricing models (e.g., a "Basic" plan with 100 interactions, a "Standard" plan with 500, and a "Premium" plan with unlimited). This allows you to cater to different user needs and budgets.
*   **Cost Management:** Capping interactions helps manage your underlying operational costs (e.g., API calls, computational resources) associated with your Clone's usage.

#### Crafting Effective Feature Descriptions

The "Features communication" section is where you articulate the specific benefits and details of each membership tier. This content is crucial for converting potential customers into subscribers.

*   **Detailed Information:** Add comprehensive details that highlight the unique advantages of this membership.
*   **Benefits:** Focus on what the user gains (e.g., "Priority support," "Access to all instances," "Early access to new features").
*   **Usage Limits:** Clearly reiterate any usage caps set (e.g., "Includes 500 monthly interactions," "Unlimited access to your primary Clone").
*   **Other Relevant Features:** Include any other specific functionalities or perks associated with this tier.

**Best Practices for Feature Descriptions:**
*   **Clarity and Conciseness:** Use clear, easy-to-understand language. Avoid jargon.
*   **Value Proposition:** Emphasize the value users receive for their subscription fee.
*   **Bullet Points:** Use bullet points to make features easy to scan and digest.
*   **Manage Expectations:** Be transparent about any limitations or exclusions.
*   **Call to Action (Implied):** While not a direct CTA button, a well-written description encourages sign-ups.

## Best Practices for Membership Monetization

To maximize the effectiveness of your Delphi Memberships, consider the following best practices:

*   **Offer Tiered Pricing:** Create multiple membership plans (e.g., Free, Basic, Premium) to cater to different user segments and their willingness to pay. This allows users to upgrade as their needs grow.
*   **Clearly Define Value:** Ensure that the benefits of each membership tier are explicitly stated and compelling. Users should understand why they are paying for access.
*   **Monitor Performance:** Regularly review subscription numbers, churn rates, and user engagement. Use this data to refine your pricing and feature offerings.
*   **Promote Your Memberships:** Actively promote your membership options through your website, social media, and directly within your Delphi Clone's interactions. Consider using [Promote Products](/engage/promote) or [Alerts](/engage/alerts) to inform users.
*   **Customer Support:** Provide clear channels for subscribers to get support, especially regarding billing or access issues.

## Related Monetization Options

Delphi offers various ways to monetize your AI Clones beyond recurring memberships. You may wish to combine these strategies or offer them as alternatives:

*   **Pay-As-You-Go:** For users who prefer not to commit to a recurring subscription, Delphi supports a [Pay-As-You-Go](/monetize/payg) model, where users are charged per interaction or usage unit. This is ideal for infrequent users or those testing the waters.
*   **Free Usage:** You can also configure [Free Usage](/monetize/free) limits, allowing users a certain number of free interactions before requiring a subscription or pay-as-you-go payment. This acts as a powerful lead generation tool.
*   **Instances:** Remember that memberships can grant access not only to your primary Clone but also to [additional instances](/build/instances) you may have created, allowing for more flexible monetization models.


--------------------------------------------------------------------------------
title: "Slack - Delphi"
description: "This document provides comprehensive technical guidance for integrating your Delphi AI assistant with Slack, enabling seamless, real-time AI support directly within your communication channels. As par..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/slack"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Slack - Delphi

This document provides comprehensive technical guidance for integrating your Delphi AI assistant with Slack, enabling seamless, real-time AI support directly within your communication channels. As part of the larger Delphi documentation set, this page details the setup process, usage instructions, and best practices for leveraging your Delphi in a Slack environment.

Integrating your Delphi with Slack allows your AI assistant to join your team's channels, providing instant answers, automating information retrieval, and streamlining workflows on command. This powerful integration transforms your Delphi into an accessible, interactive team member, enhancing productivity and ensuring critical information is always at your fingertips.

---

## [How the Delphi Slack Integration Works](#how-the-delphi-slack-integration-works)

The Delphi Slack integration allows your configured Delphi instance to operate as a bot within your Slack workspace. Once integrated and approved, your Delphi can be invited to any public or private Slack channel, where it listens for direct mentions.

Users interact with the Delphi by typing `@` followed by your Delphi's name (e.g., `@MyDelphiBot`) and then their question or command. The Delphi processes the query using its trained knowledge base and capabilities, then responds directly in the channel or within a thread, providing relevant information or executing predefined actions. This on-demand interaction ensures that your team can quickly access the AI's intelligence without leaving their primary communication platform.

## [Setting Up Your Delphi Slack Bot](#setting-up-your-delphi-slack-bot)

Integrating your Delphi with Slack is a straightforward process initiated from the Delphi Studio, followed by a necessary review and approval phase.

### [Prerequisites](#prerequisites)

Before you begin, ensure you have:
*   An active Delphi account with at least one configured [Delphi instance](/build/instances).
*   Access to a Slack workspace where you have administrative permissions to install and authorize applications.

### [Step-by-Step Integration Guide](#step-by-step-integration-guide)

Follow these steps to connect your Delphi to Slack:

1.  **Log in to Delphi Studio:** Access your Delphi account at [https://www.delphi.ai/studio](https://www.delphi.ai/studio).
2.  **Navigate to Integrations:** In the left-hand navigation menu, expand the "Integrate My Delphi" section and select "External." From the list of external integrations, click on "Slack."
3.  **Select Your Delphi Instance:** On the Slack integration page, you will see a list of your available Delphi instances. Choose the specific instance you wish to connect to your Slack workspace. This ensures that the correct AI knowledge and capabilities are linked to your Slack bot.
    ![Create App](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-slack-1.png)
4.  **Initiate Connection:** Click the "Connect" button associated with your chosen Delphi instance.
5.  **Authorize Delphi in Slack:** You will be redirected to Slack's authorization page. This page will display the permissions that the Delphi app requires to function correctly within your workspace (e.g., `chat:write` to post messages, `channels:read` to see channel names, `commands` to respond to slash commands). Review these permissions carefully.
6.  **Grant Authorization:** If you agree with the requested permissions, click "Allow" or "Authorize" to grant Delphi access to your Slack workspace.

### [Delphi Review and Approval Process](#delphi-review-and-approval-process)

After authorizing the Delphi app in Slack, the integration enters a review phase. As stated on the page, "This integration requires Delphi’s review before becoming available."

*   **Purpose of Review:** The Delphi team reviews each Slack integration request to ensure proper configuration, adherence to best practices, and optimal performance. This step helps maintain the quality and reliability of your Delphi's interactions within Slack.
*   **Timeline:** The review process typically takes a short period, often within 24-48 business hours. You will be notified via email or within the Delphi Studio once your integration has been approved.
*   **Availability:** Once approved, your Delphi will become accessible in your Slack workspace, ready to be invited to channels and prompted by your team.

## [Using Your Delphi in Slack](#using-your-delphi-in-slack)

Once your Delphi Slack bot has been approved and is active, you can begin leveraging its capabilities within your Slack channels.

### [Adding Your Delphi to Channels](#adding-your-delphi-to-channels)

To make your Delphi available in a specific channel:

1.  **Open the Channel:** Navigate to the desired public or private channel in Slack.
2.  **Invite the Bot:** Type `/invite @YourDelphiName` (replace `YourDelphiName` with the actual name of your Delphi bot) and press Enter.
    *   *Note:* For private channels, you must be a member of the channel to invite the bot.

### [Interacting with Your Delphi](#interacting-with-your-delphi)

Your Delphi is designed to respond to direct mentions within Slack.

*   **Mentioning Your Delphi:** To ask your Delphi a question or issue a command, type `@` followed by your Delphi's name, and then your query.
    *   **Example:** `@DelphiSupportBot How do I reset my password for the internal tool?`
*   **Delphi's Response:** Your Delphi will process your query and respond directly in the channel where it was mentioned. Depending on the complexity of the query and your Delphi's configuration, it may respond with a direct answer, a link to more information, or a request for clarification. Responses are typically generated within seconds.
*   **Supported Interactions:** The types of interactions your Delphi can handle depend on its training and configuration. Common uses include:
    *   **Knowledge Retrieval:** Answering FAQs, providing product information, or summarizing internal documents.
    *   **Process Guidance:** Guiding users through workflows or troubleshooting steps.
    *   **Data Lookup:** If integrated with other systems, retrieving specific data points.

### [Best Practices for Interaction](#best-practices-for-interaction)

*   **Be Clear and Concise:** While Delphi is intelligent, clear and direct questions yield the best results.
*   **Provide Context:** If your question relates to a specific topic or previous conversation, provide enough context for Delphi to understand.
*   **Manage Expectations:** Remind users that responses are generated using AI and may occasionally contain mistakes. For critical information, always verify with human experts.
*   **Iterate and Improve:** Continuously monitor your Delphi's performance in Slack. If it struggles with certain types of questions, consider refining its knowledge base or training data through the [Improve clone](/user-experience/improve-clone) section in Delphi Studio.

## [Technical Considerations & Best Practices](#technical-considerations-best-practices)

To ensure a smooth and effective Slack integration, consider the following technical aspects and best practices.

### [Required Slack Permissions](#required-slack-permissions)

When authorizing the Delphi app, it requests specific permissions to operate within your Slack workspace. These typically include:
*   `chat:write`: Allows Delphi to post messages in channels and direct messages.
*   `channels:read`: Enables Delphi to see public channel names and IDs, necessary for being invited and responding.
*   `groups:read`: Allows Delphi to see private channel names and IDs.
*   `commands`: Enables Delphi to respond to slash commands (if configured for your Delphi).
*   `users:read`: Allows Delphi to see basic user information (e.g., display names) for mentions.

Reviewing these permissions is crucial to understand the scope of Delphi's access within your Slack environment.

### [Optimizing Delphi's Responses for Slack](#optimizing-delphis-responses-for-slack)

*   **Conciseness:** Slack is a chat-based platform. Train your Delphi to provide concise, direct answers that are easy to digest in a chat format. Avoid overly long paragraphs.
*   **Formatting:** Utilize Slack's markdown capabilities (if supported by Delphi's output) for better readability (e.g., bolding, bullet points).
*   **Context Management:** If your Delphi is designed for multi-turn conversations, ensure its conversational memory is optimized to maintain context across multiple messages within a Slack thread.
*   **Fallback Responses:** Configure clear fallback responses when Delphi cannot answer a question. This could be directing users to human support, a knowledge base article, or asking for more clarification.

### [Security and Data Privacy](#security-and-data-privacy)

Delphi is committed to data security and privacy. When integrating with Slack:
*   **Data Exchange:** Information exchanged between Slack and Delphi typically includes user queries and Delphi's responses. No sensitive Slack workspace data beyond what's necessary for bot operation is accessed or stored by Delphi.
*   **Compliance:** Delphi adheres to industry-standard security protocols and data handling practices. For detailed information on how Delphi manages your data, refer to the [Data Security & Ownership](/data-security-and-ownership) page.
*   **Slack's Security:** Slack itself provides robust security features, including encryption in transit and at rest.

### [Troubleshooting Common Issues](#troubleshooting-common-issues)

If your Delphi isn't behaving as expected in Slack, consider these common troubleshooting steps:

*   **Delphi Not Responding:**
    *   **Is it invited to the channel?** Ensure you've used `/invite @YourDelphiName` in the relevant channel.
    *   **Is the integration approved?** Check your Delphi Studio for the approval status.
    *   **Are you mentioning it correctly?** Ensure you're using `@YourDelphiName` at the beginning of your query.
    *   **Network Connectivity:** Verify there are no network issues preventing communication between Slack and Delphi.
*   **Incorrect or Irrelevant Responses:**
    *   **Delphi's Training Data:** Review the content and training data of your Delphi instance in Delphi Studio. The quality of its responses directly correlates with the quality of its training. Refer to [Improving Your Delphi's Performance](/user-experience/improve-clone).
    *   **Ambiguous Questions:** Encourage users to ask more specific questions.
*   **Permissions Errors:**
    *   If Delphi is unable to post messages or join channels, verify that the necessary permissions were granted during the Slack authorization step. You may need to re-authorize the app if permissions were revoked or changed.

---

## [Related Resources](#related-resources)

*   [Understanding Delphi Instances](/build/instances): Learn more about managing and configuring your Delphi instances.
*   [Testing Your Delphi](/build/testing): Best practices for testing your Delphi's responses and functionality.
*   [Improving Your Delphi's Performance](/user-experience/improve-clone): Guidance on refining your Delphi's knowledge and improving its accuracy.
*   [Delphi Data Security & Ownership](/data-security-and-ownership): Detailed information on Delphi's commitment to data privacy and security.
*   [Integrating with Telegram](/integrate/telegram): Explore another external integration option for your Delphi.


--------------------------------------------------------------------------------
title: "Texting and Calling - Delphi"
description: "This document provides comprehensive guidance on configuring and managing user interactions with your Delphi via SMS text messages and phone calls. It details how to control anonymous engagement limit..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/user-experience/sms-guide"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Texting and Calling - Delphi

This document provides comprehensive guidance on configuring and managing user interactions with your Delphi via SMS text messages and phone calls. It details how to control anonymous engagement limits, facilitate user account creation, and ensure conversation persistence for registered users. Optimizing these settings is crucial for effective user acquisition, lead generation, and delivering seamless customer support through your Delphi's telephony integration.

Understanding the distinction between anonymous and registered user experiences is key to leveraging Delphi's full potential for phone-based engagement. This guide will walk you through the necessary configurations and best practices to tailor the experience to your specific needs.

---

## SMS Texting Configuration {#sms-texting-configuration}

The SMS Texting feature allows users to interact with your Delphi asynchronously through text messages, providing a convenient and widely accessible communication channel. You have granular control over how many anonymous messages a user can send before being prompted to create an account.

### Configuration Steps

To configure the anonymous SMS message limit:

1.  Navigate to the **Mind** tab in your Delphi Studio.
2.  Select **Experience Settings**.
3.  Click on `Configure Message Limit`.
4.  Adjust the `Messaging` (SMS) limit according to your requirements:
    *   **Setting to `0`:** Users will be immediately prompted to create an account upon sending their first text message to your Delphi's designated phone number. This setting is ideal for scenarios requiring immediate lead capture or authentication for all interactions.
    *   **Setting to `N` (e.g., `5`):** Users can send up to `N` anonymous text messages before Delphi prompts them to create an account. This allows for initial exploration, quick queries, or a "free trial" period without immediate commitment, potentially improving initial engagement rates.

### User Experience Flow

**For Anonymous Users:**

1.  An unregistered user texts your Delphi's designated phone number.
2.  Delphi sends an initial response, often including a "contact card" (vCard) or a welcome message.
3.  The user can exchange messages with your Delphi up to the configured anonymous limit.
4.  Upon reaching the message limit, Delphi automatically sends a text message containing a unique link to create an account.
5.  Clicking this link directs the user to a secure account creation page within the Delphi platform.
6.  Once the account is successfully created and linked to their phone number, all future conversations from that number will be recognized and remembered by Delphi.

**For Registered Users:**

1.  A user who has already created an account and linked their phone number texts your Delphi.
2.  Delphi immediately recognizes the user based on their phone number.
3.  The conversation begins, with Delphi retaining context and history from all previous interactions with that user, providing a personalized experience.

### Best Practices for SMS Texting

*   **Balance Engagement and Capture:** Carefully consider your primary objective. For aggressive lead generation, a lower limit (e.g., 0-3 messages) ensures quicker account capture. For general information or customer support, a higher limit might reduce friction and encourage broader initial engagement.
*   **Clear Communication:** If you have a low anonymous limit, consider communicating this upfront on your website or in the initial welcome message to manage user expectations.
*   **Thorough Testing:** Always test the full user journey for both anonymous and registered users after making changes to the message limits to ensure a seamless experience.

---

## SMS Calling Configuration {#sms-calling-configuration}

The SMS Calling feature enables users to engage with your Delphi via voice calls, offering a real-time, synchronous communication channel. Similar to SMS texting, you can control the number of anonymous calling minutes a user can utilize before being prompted for account creation.

### Configuration Steps

To configure the anonymous SMS calling minute limit:

1.  Navigate to the **Build** tab in your Delphi Studio.
2.  Select **Experience Settings**.
3.  Click on `Configure Message Limit`.
4.  Adjust the `Phone Calling` (minutes) limit:
    *   **Setting to `0`:** If an unregistered user calls your Delphi, they will immediately hear an automated message instructing them to hang up and check their text messages for an account creation link. This forces immediate registration for any voice interaction.
    *   **Setting to `M` (e.g., `2`):** Users can engage in up to `M` anonymous minutes of phone conversation with your Delphi. Once this threshold is reached, Delphi will send a text message with an account creation link, and the user will need to register to continue or resume the call.

### User Experience Flow

**For Anonymous Users (Limit Set to `0`):**

1.  An unregistered user calls your Delphi's designated phone number.
2.  Delphi plays an automated voice prompt, instructing the user to hang up and check their phone for a text message.
3.  A text message is simultaneously sent to the user's phone, containing a link to create an account.
4.  The user must create an account to proceed with any voice interactions.

**For Anonymous Users (Limit Set to `M > 0`):**

1.  An unregistered user calls your Delphi's designated phone number.
2.  The call immediately connects, and the user can begin conversing with your Delphi.
3.  As the conversation progresses, if the configured minute threshold is reached, Delphi sends a text message with an account creation link.
4.  The user will need to create an account to continue or resume voice interactions beyond the anonymous limit.

**For Registered Users:**

1.  A user who has already created an account and linked their phone number calls your Delphi.
2.  Delphi immediately recognizes the user based on their Caller ID (phone number).
3.  The conversation begins, with Delphi retaining context and history from all previous interactions, providing a personalized and continuous experience.

### Technical Considerations for SMS Calling

*   **Voice Recognition (STT/TTS):** Delphi's voice integration leverages advanced Speech-to-Text (STT) to understand user input and Text-to-Speech (TTS) to generate natural-sounding responses during calls.
*   **Caller ID Recognition:** The system identifies users primarily by their Caller ID to determine if they are registered or anonymous, enabling the appropriate user flow.
*   **Call Handling:** For anonymous users reaching limits, Delphi manages the call flow by playing prompts and sending SMS messages, effectively redirecting users to the registration process.

### Best Practices for SMS Calling

*   **Clear Voice Prompts:** Ensure that any automated messages for anonymous users are concise, clear, and effectively guide them to the next step (account creation).
*   **Manage Expectations:** If anonymous minutes are limited, consider how to best inform users early in the call, or ensure the transition to account creation is as smooth as possible.
*   **Integrate with CRM:** For advanced scenarios, consider how data from registered user phone calls can be integrated with your Customer Relationship Management (CRM) system for a holistic view of user interactions.

---

## User Account Creation and Conversation Persistence {#user-account-creation-and-persistence}

User account creation is a cornerstone for enabling personalized, persistent, and valuable interactions with your Delphi. Without an associated account, all interactions are treated as anonymous and stateless, meaning Delphi cannot recall previous exchanges with that specific user.

### Mechanism of Account Creation

*   When an anonymous user reaches the configured SMS message or calling minute limit, Delphi automatically triggers a prompt for account creation.
*   This prompt is delivered via an SMS message containing a unique, secure link.
*   Clicking this link directs the user to a dedicated account registration page within the Delphi platform.
*   Upon successful registration, the user's phone number (and potentially other captured information) is securely associated with their new Delphi account.

### Benefits of Registered Users

*   **Conversation History:** Delphi remembers all past interactions with a registered user, allowing for seamless continuity across sessions and a more natural, context-aware dialogue.
*   **Personalization:** Future responses and interactions can be tailored based on previous preferences, information provided, or actions taken by the user, leading to a highly customized experience.
*   **Data Capture and Enrichment:** Essential user data (e.g., name, email, specific interests, interaction history) can be captured during registration and subsequent interactions, enriching your user profiles and providing valuable insights.
*   **Enhanced Features:** Registered users may gain access to additional features, deeper integrations, or exclusive content not available to anonymous users.

### Cross-Referencing for Further Information

*   For detailed instructions on how to set up and integrate a phone number with your Delphi, refer to the [Phone Integration Guide](/integrate/phone).
*   To understand the broader context of user experience settings and communication channels, consult the [Communication Overview](/user-experience/overview).
*   Information regarding the security, privacy, and ownership of user data collected during account creation and ongoing interactions can be found in the [Data Security & Ownership](/data-security-and-ownership) documentation.


--------------------------------------------------------------------------------
title: "Voice - Delphi"
description: "This document provides comprehensive guidance on configuring and optimizing your Delphi's voice, a crucial component for natural and effective user interactions. The quality of your Delphi's voice dir..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/build/voice"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Voice - Delphi

This document provides comprehensive guidance on configuring and optimizing your Delphi's voice, a crucial component for natural and effective user interactions. The quality of your Delphi's voice directly impacts its ability to engage users and accurately process audio-based content. By following the guidelines outlined here, you can ensure your Delphi communicates with clarity, authenticity, and the desired vocal characteristics.

A high-quality voice sample is paramount. It serves as the foundation for your Delphi's vocal identity, influencing everything from its conversational tone to its ability to accurately extract information from audio and video inputs. This page details the best practices for recording your voice sample and fine-tuning the voice settings to achieve optimal results.

---

## Voice Sample Requirements {#voice-sample-requirements}

Capturing a clear, high-fidelity voice sample is the most critical step in defining your Delphi's vocal persona. The goal is to provide the AI with the cleanest possible audio, free from any elements that could introduce artificiality or reduce clarity. Adhering to these requirements ensures your Delphi's voice is as natural and expressive as possible.

### Duration

*   **Minimum:** Record at least **90 seconds** of continuous audio. This provides sufficient data for the AI to learn your unique vocal patterns.
*   **Ideal:** Aim for **2-4 minutes** of audio. More data generally leads to a more robust and accurate voice model.
*   **Consistency is Key:** While a single, continuous sample is highly recommended, if you must use multiple samples, ensure they are recorded under identical conditions:
    *   **Same Microphone:** Using the same microphone across all samples prevents variations in audio fidelity.
    *   **Same Environment:** Record in the same room or acoustic space to maintain consistent reverberation and background noise profiles.
    *   **Identical Settings:** Ensure all recording software and hardware settings (e.g., sample rate, gain levels) are consistent. Inconsistent conditions can lead to a "robotic" or unnatural sounding voice.

### Microphone

*   **Professional Microphone:** For the clearest and most accurate results, a professional-grade microphone (e.g., a condenser microphone with an audio interface, or a high-quality USB microphone) is strongly recommended. These microphones are designed to capture a wide frequency range with minimal self-noise.
*   **Alternative (iPhone):** If a professional microphone is unavailable, an iPhone's built-in microphone can be used with the Voice Memo app. While not ideal, iPhones generally offer better audio quality than many other smartphone or laptop microphones. Ensure you record in a quiet environment and hold the phone at an appropriate distance (e.g., 6-12 inches) to avoid plosives and proximity effect.

### Noise-Free Environment

*   **Eliminate Background Noise:** Record in a space with absolutely no background noise. Even subtle sounds like air conditioning hum, distant traffic, computer fans, or room echo can significantly degrade the quality of your voice sample and negatively impact the AI's ability to accurately clone your voice.
*   **Acoustic Treatment:** Consider recording in a quiet room with soft furnishings (carpets, curtains, upholstered furniture) to absorb sound and reduce reverberation. A closet filled with clothes can also serve as a surprisingly effective makeshift recording booth.

### Speaking Style

*   **Natural Tone:** Speak naturally, in the tone, pace, and vocal inflection you want your Delphi to use. Avoid reading in a monotone or overly formal manner unless that is the desired outcome.
*   **Suggested Topics:** To facilitate natural speech, consider discussing topics you are passionate about or comfortable with. Examples include:
    *   Sharing your life story or significant experiences.
    *   Delivering a motivational speech or a personal philosophy.
    *   Reading aloud from a favorite book, article, or script.
*   **Exaggerate Emotion Slightly:** While speaking naturally, subtly exaggerate emotions (e.g., happiness, emphasis, curiosity) to help the AI better capture and mimic your vocal range and expressive qualities. This provides the model with a richer dataset for emotional nuance.

---

## Voice Settings Configuration {#voice-settings-configuration}

After uploading your voice sample, Delphi provides several settings to fine-tune the characteristics of your AI's voice. These sliders allow you to adjust the voice's expressiveness, clarity, and overall style.

![Voice Settings Interface](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/build-voice-1.png)

*   **Stability:**
    *   **Description:** This setting controls the fluctuation of pitch in your Delphi's voice. A lower stability setting allows for more variation, while a higher setting results in a more consistent pitch.
    *   **Effect:**
        *   **More Dynamic (Lower Stability):** Increases pitch variance, leading to a more expressive and natural-sounding voice with varied intonation. This is generally recommended for conversational AI.
        *   **More Stable (Higher Stability):** Reduces pitch variance, resulting in a flatter, more monotone voice. This might be suitable for specific applications requiring a very consistent vocal output, but can sound less natural for general conversation.
    *   **Best Practice:** For a natural and engaging conversational AI, move the slider towards 'More Dynamic' to allow for appropriate pitch fluctuations.

*   **Clarity:**
    *   **Description:** This setting determines how closely the generated voice adheres to the original voice sample(s) when replicating your speech.
    *   **Effect:**
        *   **High Clarity:** The AI will strive to match the sample's vocal characteristics (timbre, tone) as closely as possible.
        *   **Lower Clarity:** Allows for more deviation from the sample, which can sometimes introduce artifacts or make the voice sound less like the original.
    *   **Best Practice:** If you followed the voice sample instructions meticulously and provided a high-quality, noise-free sample, we highly recommend setting this to 'High' to ensure the most accurate and faithful replication of your voice.

*   **Style Exaggeration:**
    *   **Description:** This controls the cadence and rhythm of speech. It influences how much the AI emphasizes certain words or phrases and varies its speaking pace.
    *   **Effect:**
        *   **Exaggerated (Higher Style Exaggeration):** Increases variance in speech pace and emphasis, leading to a more dynamic and expressive delivery. This can make the AI sound more engaging and human-like.
        *   **Less Exaggerated (Lower Style Exaggeration):** Results in a more consistent and less varied speaking pace, which might sound more robotic or monotonous.
    *   **Best Practice:** For a lively and natural conversational flow, move the slider towards 'Exaggerated' to allow for more natural variations in cadence.

*   **Speaker Boost:**
    *   **Description:** This is a recommended option that enhances the similarity of the generated voice to your original sample. It applies additional processing to ensure the AI's voice closely matches your unique vocal fingerprint.
    *   **Best Practice:** We strongly recommend selecting this option. It helps to maximize the fidelity and authenticity of your cloned voice.

*   **Voice Description:**
    *   **Description:** This field allows you to add custom descriptive tags for your voice. These descriptions can help the AI further refine its vocal output based on desired characteristics.
    *   **Examples:** Deep, cheerful, raspy, calm, energetic, authoritative, warm, friendly, etc.
    *   **Usage:** While not a direct control, providing accurate descriptions can subtly guide the AI's synthesis process, especially in conjunction with the other settings.

**Tips for Adjusting Settings:**
*   **Iterate and Test:** After adjusting any setting, use the [Testing](/build/testing) feature to listen to your Delphi's voice in various conversational contexts.
*   **Listen Critically:** Pay attention to naturalness, clarity, and how well the voice conveys emotion or emphasis.
*   **Context Matters:** Consider the primary use case for your Delphi. A voice for a customer service bot might prioritize clarity and calmness, while a personal assistant might benefit from more expressiveness.

---

## Professional Voice Cloning Services {#professional-voice-cloning-services}

For users requiring the absolute highest fidelity and most extensive customization for their Delphi's voice, Delphi offers a professional voice cloning service. This service provides a bespoke voice model trained on a significantly larger dataset, resulting in an even more nuanced and indistinguishable replication of your voice.

*   **Service Overview:** Includes a customized voice model specifically trained on your unique vocal characteristics.
*   **Audio Content Requirement:** This service utilizes 2-3 hours of high-quality audio content from you to build a highly detailed and accurate voice model. This extended training data allows for capturing subtle vocal nuances that are not possible with shorter samples.
*   **Cost:** A one-time payment of $6,000.
*   **Benefits:**
    *   **Superior Fidelity:** Achieve an unparalleled level of accuracy and naturalness in your cloned voice.
    *   **Enhanced Nuance:** The larger training dataset allows the AI to capture and replicate a wider range of vocal inflections, emotions, and speaking styles.
    *   **Robustness:** A more extensively trained model is generally more robust and performs better across diverse conversational scenarios.
*   **Contact:** If you are interested in professional voice cloning, please email us at [support@delphi.ai](mailto:support@delphi.ai) to discuss your requirements and initiate the process.

---

**Next Steps:** Once your voice is configured, you might want to explore how it integrates with your Delphi's visual representation. Proceed to the [Delphi Video Avatar](/build/video) page to learn about creating a video persona for your AI. For general information on how your Delphi's personality and responses are shaped, refer to the [Your Delphi's Behavior](/using-delphi/mind/behavior) section.


--------------------------------------------------------------------------------
title: "Zapier - Delphi"
description: "This document provides comprehensive technical guidance for integrating your Delphi AI with Zapier, enabling powerful automations based on events occurring within your Delphi instance. As part of the ..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/zapier"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Zapier - Delphi

This document provides comprehensive technical guidance for integrating your Delphi AI with Zapier, enabling powerful automations based on events occurring within your Delphi instance. As part of the "Integrate My Delphi" section, this page details the setup process, potential applications, and supported event types, empowering you to connect Delphi with thousands of other applications.

The Zapier integration allows your Delphi to act as a trigger source, sending real-time event data to Zapier via webhooks. This capability unlocks a vast array of automation possibilities, from notifying your team about new user interactions to updating CRM records when a subscription changes. By leveraging Zapier's extensive ecosystem, you can extend Delphi's functionality and streamline your workflows without requiring custom code.

## Table of Contents
* [How to Set Up Zapier Webhook](#how-to-set-up-zapier-webhook)
* [What Can I Do with a Webhook Event in Zapier?](#what-can-i-do-with-a-webhook-event-in-zapier)
* [Supported Events](#supported-events)
* [Request an Unsupported Event](#request-an-unsupported-event)

## How to Set Up Zapier Webhook

Integrating Delphi with Zapier involves configuring a Zapier Webhook to "catch" events sent from your Delphi instance. This process establishes a connection that allows Delphi to publish event data to Zapier, which can then trigger subsequent actions in other applications.

For a general introduction to creating Zaps, refer to Zapier's official guide: [Create your first Zap](https://zapier.com/resources/guides/quick-start/create-zap).

Follow these steps to configure your Zapier Webhook:

1.  **Configure Zapier Trigger:**
    In your Zapier dashboard, when creating a new Zap, select **"Webhooks by Zapier"** as your Trigger application. For the Trigger Event, choose **"Catch Hook"**. This configuration instructs Zapier to listen for incoming data at a specific URL.

    ![Setup Webhook](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/setup-webhook.png)

2.  **Skip Trigger Customization:**
    You can safely skip the "Trigger" customization section in Zapier. This step is not necessary for Delphi's webhook integration, as Delphi will send the necessary event data directly.

3.  **Obtain Webhook URL:**
    Proceed to the "Test" section within your Zapier Trigger setup. Zapier will generate a unique **Webhook URL** for your Zap. This URL is the endpoint where Delphi will send its event data.

    ![Webhook Url](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/webhook-url.png)

    **Technical Detail:** This URL is a unique identifier for your Zapier webhook. Any data sent to this URL will be processed by this specific Zap. Treat this URL as sensitive information.

4.  **Paste URL in Delphi Studio:**
    Copy the generated Webhook URL from Zapier. Navigate to your Delphi Studio. Within the "Access" tab, locate the **"Zapier Connector"** section. Paste the copied Webhook URL into the designated field.

    ![Zapier Studio](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/zapier-clone-studio.png)

    **Cross-reference:** The "Access" tab is part of the broader "Using Delphi" configuration, where you manage various integration points for your Delphi instance.

5.  **Test Webhook Connection:**
    After pasting the URL, click the **"Test Webhook"** button in Delphi Studio. This action sends a test payload from Delphi to your Zapier webhook, allowing you to validate the connection.

    *   **Successful Test in Studio:** If configured correctly, you will see a success message in Delphi Studio, indicating that the test payload was sent.
        ![Studio Zapier Success](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/zap-tested-studio.png)
    *   **Successful Test in Zapier:** Simultaneously, in your Zapier dashboard, the "Test" section of your Webhook trigger should indicate that a successful test was received. This confirms Zapier is listening and has caught the test event.
        ![Zap Dashboard Success](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/zap-test-worked.png)

    **Best Practice:** Always perform this test to ensure the connection is active before relying on live events. If the test fails, double-check the Webhook URL for any typos or ensure your Zapier Zap is active and listening.

6.  **Save Configuration:**
    Finally, click **"Save"** in Delphi Studio to store your Zapier Webhook configuration. Ensure that the specific Webhook Events you wish Delphi to publish are toggled on in this section. Once saved, your Delphi instance will begin sending data to Zapier for the selected events.

## What Can I Do with a Webhook Event in Zapier?

Once a webhook event from Delphi is successfully captured by Zapier, the possibilities for automation are virtually limitless. Zapier acts as an intermediary, allowing you to connect Delphi's events to thousands of other applications supported by Zapier.

Each webhook event from Delphi will contain relevant data about the event (e.g., for `NEW_USER`, it might include user ID, timestamp, etc.). This data can then be used in subsequent "Action" steps within your Zap.

**Example Use Case: Sending a Slack Message on a New Event**

A common application is to send notifications to a team communication channel. The provided example demonstrates how to send a Slack message when Delphi catches a webhook event:

![Zap Slack Example](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/zap-slack-example.png)

In this Zap:
1.  **Trigger:** "Webhooks by Zapier" (Catch Hook) receives an event from Delphi.
2.  **Action:** "Slack" is chosen as the action app, and "Send Channel Message" is the action event.
3.  **Customization:** You can map data fields from the incoming Delphi webhook (e.g., `event_type`, `user_id`) directly into the Slack message content, making the notification dynamic and informative.

**Other Potential Applications:**

*   **CRM Updates:** Automatically create new leads in Salesforce, HubSpot, or Zoho CRM when a `NEW_USER` event occurs.
*   **Email Notifications:** Send personalized welcome emails via Mailchimp, SendGrid, or Gmail when `NEW_USER` or `NEW_SUBSCRIPTION` events are triggered.
*   **Database Logging:** Log all `CALL_END` or `SMS_CONVERSATION_STARTED` events to a Google Sheet or a custom database for analytics.
*   **Task Management:** Create a new task in Asana, Trello, or Monday.com when an `ALERT_TRIGGERED` event requires follow-up.
*   **Customer Support:** Open a new ticket in Zendesk or Freshdesk for `NO_ANSWER_MESSAGE` events.
*   **Marketing Automation:** Add users to specific segments in marketing platforms based on their interaction type.

**Best Practices for Zapier Actions:**

*   **Map Data Carefully:** Ensure you correctly map the data fields from the Delphi webhook payload to the fields required by your action application.
*   **Use Filters/Paths:** For more complex workflows, use Zapier's "Filter" or "Path" steps to conditionally run actions based on specific data within the webhook payload (e.g., only send a Slack message if the event type is `ALERT_TRIGGERED`).
*   **Error Handling:** Configure error notifications within Zapier to be alerted if a Zap fails to execute.
*   **Test Thoroughly:** Always test your entire Zap with real or simulated data to ensure all steps execute as expected.

## Supported Events

The Zapier integration currently supports the following webhook events, which can be configured in Delphi Studio to trigger your automations:

| Event                    | Description                                                               |
| :----------------------- | :------------------------------------------------------------------------ |
| `NEW_USER`               | Triggered when a user interacts with your Delphi for the first time.      |
| `NEW_SUBSCRIPTION`       | Triggered when a user subscribes to a membership within your Delphi.      |
| `CANCEL_SUBSCRIPTION`    | Triggered when a user cancels their membership within your Delphi.        |
| `ALERT_TRIGGERED`        | Triggered when an alert is activated within your Delphi.                  |
| `NO_ANSWER_MESSAGE`      | Triggered when a message sent by Delphi receives no response.             |
| `CALL_END`               | Triggered when a call initiated or handled by Delphi concludes.           |
| `USER_INFO_CREATED`      | Triggered when new user information (e.g., profile details) is created.   |
| `SMS_CONVERSATION_STARTED` | Triggered when a new SMS conversation begins with your Delphi.            |

**Technical Note:** Each event will send a JSON payload to your Zapier webhook containing details relevant to that specific event type. The exact structure of the payload will vary, but it will always include the `event_type` and other pertinent data points (e.g., user ID, timestamp, subscription details, call duration).

## Request an Unsupported Event

Delphi is continuously expanding its integration capabilities. If you require a specific event or interaction within Delphi to trigger a Zapier webhook, but do not see it listed in the "Supported Events" table or as an option in Studio, please reach out to the Delphi team.

Your feedback is valuable for prioritizing new features. You can request unsupported events by:

*   **Email:** Sending a detailed request to [support@delphi.ai](mailto:support@delphi.ai)
*   **Discord:** Sending a message in our official [Discord community](https://discord.gg/Kt4CGS6VsX)

Please provide a clear description of the event you need and the use case you are trying to achieve.


--------------------------------------------------------------------------------
title: "Settings - Delphi"
description: "This document provides comprehensive technical details and best practices for configuring the **Settings** within your Delphi Digital Mind. This page is crucial for optimizing your Delphi's operationa..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/build/settings"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Settings - Delphi

This document provides comprehensive technical details and best practices for configuring the **Settings** within your Delphi Digital Mind. This page is crucial for optimizing your Delphi's operational efficiency, monitoring its performance, and managing team access.

The Settings interface serves as a centralized control panel, enabling users to fine-tune notification preferences, schedule detailed activity reports, track resource consumption against subscription plans, and manage collaborator permissions. By effectively utilizing these settings, you can ensure your Digital Mind continuously learns, maintains service continuity, and provides valuable insights into its interactions.

---

## Unanswered Question Alerts {#unanswered-question-alerts}

This setting allows you to configure notifications for instances where your Digital Mind is unable to confidently answer a user's question. This feature is vital for identifying knowledge gaps and ensuring a seamless user experience.

**Purpose:**
When Delphi's confidence score for a generated response falls below a predefined threshold, an alert is triggered. This mechanism ensures that critical queries are not left unaddressed, providing an opportunity for human intervention.

**Configuration:**
Toggle on the alert option to receive notifications. While the specific notification channel (e.g., email, in-app notification) may vary, the primary goal is to bring these unanswerable questions to your immediate attention.

**Technical Details & Best Practices:**
*   **Prompt Intervention:** Upon receiving an alert, promptly review the unanswered question. Provide a direct, accurate response to the user.
*   **Knowledge Base Expansion:** Crucially, use each unanswered question as a direct input for training your Digital Mind. By adding the correct answer and relevant context to your Delphi's knowledge base, you prevent similar inquiries from going unanswered in the future. Refer to the [Improve clone](/user-experience/improve-clone) section for detailed guidance on training.
*   **Continuous Learning:** This iterative process of alert, human response, and training is fundamental to your Digital Mind's continuous learning and improvement.

**Example:**
If a user asks about a newly launched product feature that has not yet been integrated into your Delphi's training data, an unanswered question alert will notify you. You can then provide the answer manually and subsequently update your Delphi's knowledge base to handle future inquiries about that feature.

---

## Activity Reports {#activity-reports}

Activity Reports provide insightful, aggregated data about your Digital Mind's performance and user interactions. These reports are essential for monitoring engagement, identifying trends, and assessing the overall value generated by your Delphi.

**Configuration:**
You can toggle on daily or weekly activity reports. Once enabled, these reports are typically delivered to the account administrator's registered email address or accessible within the Delphi Studio dashboard.

**Report Contents:**
Activity reports typically include:
*   **Usage Details:** Total messages processed, minutes of voice interaction (if applicable), and training data consumption.
*   **Unanswered Questions:** A summary of questions that triggered alerts, providing a direct link to areas needing knowledge base expansion. This complements the [Unanswered Question Alerts](#unanswered-question-alerts) feature.
*   **Revenue Generated:** If your Delphi is integrated with sales or conversion tracking, this section provides insights into revenue directly attributed to Delphi interactions.
*   **Triggered Alerts:** A summary of all system alerts, including but not limited to unanswered questions.

**Technical Details & Best Practices:**
*   **Performance Monitoring:** Regularly review these reports to track key performance indicators (KPIs) such as user engagement, efficiency in answering queries, and the impact on business objectives.
*   **Strategic Planning:** Use the data to inform strategic decisions, such as allocating resources for further training, identifying popular topics, or optimizing user flows.
*   **Troubleshooting:** Spikes in unanswered questions or unusual usage patterns can indicate areas requiring immediate attention or further investigation.

**Example:**
A weekly activity report might show 750 messages processed, 15 hours of voice interactions, 20 unanswered questions, and $1,200 in revenue attributed to Delphi-assisted sales. This data helps you understand your Delphi's contribution and areas for improvement.

---

## Usage Monitoring & Overages {#usage-monitoring-overages}

This section allows you to monitor your Digital Mind's resource consumption and manage how your Delphi behaves when it approaches or exceeds your subscription plan limits.

**Monitoring Metrics:**
The platform tracks your monthly usage across key metrics:
*   **Messages:** The total number of text-based interactions.
*   **Minutes:** The total duration of voice-based interactions.
*   **Training Data:** The volume of data (e.g., documents, conversations) used to train and update your Digital Mind.

**Enable Overages Option:**
*   **Functionality:** Toggling on 'Enable Overages' ensures that your Digital Mind continues to operate and serve users even if your monthly usage exceeds the limits defined by your current subscription plan.
*   **Implication:** When overages are enabled and limits are surpassed, additional charges will apply for the excess usage. These charges are typically outlined in your specific Delphi pricing plan.
*   **Best Practice:**
    *   **Service Continuity:** Enable overages for mission-critical applications where uninterrupted service is paramount, such as customer support or sales bots.
    *   **Cost Management:** While enabling overages ensures continuity, it's crucial to regularly monitor your usage to manage potential additional costs. Refer to the [Delphi Pricing](https://www.delphi.ai/pricing) page for detailed information on overage rates.
    *   **Plan Review:** If you consistently exceed your plan limits, consider upgrading your subscription tier to a more suitable plan to optimize costs and ensure sufficient capacity.

**Example:**
If your plan includes 1,000 messages per month and you process 1,200 messages, enabling overages ensures the additional 200 messages are handled, but you will be billed for them according to your plan's overage rates. If overages were disabled, your Delphi might temporarily cease responding once the 1,000-message limit is reached.

---

## Managing Collaborators {#managing-collaborators}

The Collaborators section allows you to grant access to other team members or assistants, enabling them to contribute to the training and adjustment of your Digital Mind. This feature is essential for team-based development and maintenance of your Delphi.

**Availability:**
The collaborator feature is available on **Advanced tier and higher plans**. Users on lower tiers will not have access to this functionality.

**Collaborator Permissions:**
*   **Access to Train & Adjust:** Collaborators can access the Delphi Studio to modify the Digital Mind's knowledge base, refine responses, and adjust certain operational settings. This includes contributing to the [Mind](/build/mind) and [Advanced](/build/advanced) sections of your Delphi.
*   **No Billing Changes:** It is important to note that collaborators **cannot** make any changes related to billing, subscription plans, or payment methods. These permissions are reserved for the primary account administrator.

**Best Practices:**
*   **Role-Based Access:** Assign collaborator roles carefully based on team members' responsibilities and expertise. For instance, content creators might focus on knowledge base updates, while technical staff might fine-tune advanced settings.
*   **Onboarding Collaborators:** Ensure new collaborators are properly onboarded and understand Delphi's best practices for content creation and interaction management. Refer to the [Onboarding](/onboarding) and [Sharing Your Delphi](/sharing-your-delphi) guides for more information.
*   **Regular Review:** Periodically review your list of collaborators to ensure that access permissions are current and appropriate. Remove access for individuals who no longer require it.
*   **Version Control (Implicit):** While not explicit version control, consistent training practices among collaborators help maintain the quality and consistency of your Digital Mind's responses.

**Example:**
You can add a content specialist as a collaborator to continuously update your Delphi's product information, and a customer service manager to review and refine common responses, without giving them access to your billing information.

---

## Best Practices for Settings Management {#best-practices}

Effective management of your Delphi's settings is crucial for its optimal performance, cost efficiency, and team collaboration.

*   **Regular Review:** Periodically review all settings to ensure they align with your current operational needs and business objectives. As your Digital Mind evolves, its configuration requirements may change.
*   **Proactive Training:** Actively use the insights from [Unanswered Question Alerts](#unanswered-question-alerts) and [Activity Reports](#activity-reports) to identify knowledge gaps and prioritize training efforts. This proactive approach minimizes future unanswered queries and improves user satisfaction.
*   **Cost-Benefit Analysis for Overages:** While 'Enable Overages' provides service continuity, regularly monitor your [Usage Monitoring](#usage-monitoring-overages) to understand your consumption patterns. Balance the need for uninterrupted service with potential additional costs, and consider upgrading your plan if overages become a regular occurrence.
*   **Secure & Delegated Access:** Leverage the [Managing Collaborators](#managing-collaborators) feature to delegate tasks efficiently while maintaining strict control over billing and core account settings. Ensure collaborators are trained and adhere to best practices.
*   **Data-Driven Improvement:** Utilize the detailed information provided in [Activity Reports](#activity-reports) to make data-driven decisions about your Delphi's content, training, and overall strategy. Identify trends, popular queries, and areas for improvement to continuously enhance your Digital Mind's capabilities.


--------------------------------------------------------------------------------
title: "Audience and Conversations - Delphi"
description: "This document outlines the features and functionalities of the **Audience and Conversations** section within the Delphi platform, a critical component for managing user interactions and continuously i..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/engage/audience"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Audience and Conversations - Delphi

This document outlines the features and functionalities of the **Audience and Conversations** section within the Delphi platform, a critical component for managing user interactions and continuously improving your Delphi Clone's performance. This page serves as a central hub for understanding your audience, engaging with them directly, and refining the conversational AI to deliver optimal user experiences.

The Audience and Conversations module provides a comprehensive suite of tools designed to give you granular control over your user interactions. From viewing detailed user profiles and chat histories to exporting valuable data and integrating with your existing CRM, this section empowers you to personalize engagements, address user needs proactively, and ensure your Delphi Clone evolves effectively based on real-world interactions.

---

## Audience and Conversations

The **Audience and Conversations** tab, accessible via **Engage** > **Audience**, is your primary interface for monitoring, managing, and enhancing interactions between your Delphi Clone and its users. This section provides a holistic view of your audience, enabling data-driven decisions and continuous improvement of your AI.

### ## Managing Your Audience {#managing-your-audience}

The Audience tab allows you to view and manage all individuals who have interacted with your Delphi Clone. For each user, you can access detailed information, including their conversation history, and add custom data to enrich their profile. This capability is crucial for personalizing future interactions and understanding user segments.

**Key Features:**

*   **User Profiles:** View comprehensive profiles for each individual who has engaged with your clone. This includes their contact information (if collected) and a complete transcript of their conversations.
*   **Custom Data:** Add specific, relevant data points to user profiles. This custom data can be leveraged for more targeted follow-ups or to inform future clone responses.
*   **Data Export:**
    *   **User Data:** Export a list of all users who have interacted with your clone, including their contact details and any custom data you've added. This is invaluable for lead management and audience segmentation.
    *   **Chat Transcripts:** Export full conversation logs. These transcripts are essential for in-depth analysis, compliance, and training purposes.

**Best Practices:**

*   Regularly review user profiles to identify common queries or emerging trends.
*   Utilize custom data fields to categorize users (e.g., by interest, lead stage) for more effective engagement strategies.
*   Export data periodically for external analysis or backup, ensuring compliance with your data retention policies. For more information on data handling, refer to [Data Security & Ownership](/data-security-and-ownership).

### ## Integrating with Your CRM {#integrating-with-your-crm}

Delphi offers seamless integration with popular Customer Relationship Management (CRM) systems, allowing you to automatically sync user data collected by your clone directly into your existing sales and marketing workflows. This ensures that valuable lead information and interaction data are centralized and actionable.

**Supported CRMs:**

*   HubSpot
*   Salesforce
*   GoHighLevel

**Data Synced:**

User email addresses and phone numbers are directly fed into your configured CRM. This enables your sales and marketing teams to follow up with leads generated through your Delphi Clone, nurture relationships, and track the full customer journey.

**Setup Steps:**

1.  Navigate to **Engage** in your Delphi Studio.
2.  Select the **Audience** tab.
3.  In the top right corner of the screen, click on the **Export** button.
4.  Choose **Export Emails**.
5.  Select **Sync to your CRM** and follow the on-screen prompts to authenticate and configure your chosen CRM.

    ![CRM Sync Configuration](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/engage-audience-3.png)

**Technical Details & Best Practices:**

*   **API Integration:** The CRM sync utilizes secure API connections to transfer data. Ensure your CRM user account has the necessary permissions for data ingestion.
*   **Data Mapping:** Verify how Delphi fields map to your CRM fields during the setup process. This ensures data integrity and proper categorization within your CRM.
*   **Lead Nurturing:** Leverage the synced data to trigger automated email sequences, assign leads to sales representatives, or segment your audience for targeted marketing campaigns.
*   **Compliance:** Ensure your data collection and CRM integration practices comply with relevant data privacy regulations (e.g., GDPR, CCPA).

### ## Optimizing Clone Responses {#optimizing-clone-responses}

A key advantage of the Audience and Conversations module is its ability to facilitate continuous improvement of your Delphi Clone's conversational capabilities. By reviewing past interactions, you can directly refine the clone's responses, ensuring it delivers accurate, desired, and consistent answers going forward.

**Process for Improvement:**

1.  **Review User Interactions:** Access individual conversation transcripts within the Audience tab.
2.  **Identify Areas for Improvement:** Look for instances where the clone's response was inaccurate, incomplete, or not in line with your brand's tone.
3.  **Adjust Responses:** Directly edit or provide the desired response within the conversation interface. Once updated, your clone will learn from this correction and deliver the improved answer in future similar interactions.

    ![Improving Clone Responses](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/engage-audience-1.png)

**Leveraging the 'Unread' Tab:**

The 'Unread' tab within Conversations is a critical feature for proactive clone optimization. If your Delphi Clone is unable to fully answer a user's question, or if a response requires human intervention, the conversation will be automatically flagged and moved to the 'Unread' tab.

*   **Purpose:** This tab acts as a prioritized queue for conversations requiring your attention.
*   **Workflow:**
    1.  Access the 'Unread' tab to view flagged conversations.
    2.  Address each topic one by one.
    3.  Input the precise response you want the clone to provide for that specific query.
*   **Impact:** By addressing these 'Unread' items, you rapidly enhance the user experience by filling knowledge gaps and refining the clone's understanding of complex or novel queries.

**Best Practices:**

*   **Regular Review:** Dedicate time regularly to review conversations, especially those in the 'Unread' tab. This proactive approach ensures your clone is always learning and improving.
*   **Consistency:** When adjusting responses, ensure they align with your brand's messaging, tone, and overall knowledge base.
*   **Iterative Process:** Clone improvement is an ongoing process. The more you refine responses based on real interactions, the more intelligent and effective your Delphi Clone becomes.

### ## Engaging Directly with Users {#engaging-directly-with-users}

Beyond optimizing the clone's automated responses, the Conversations interface also allows for direct, one-on-one messaging with individual users. This feature is invaluable for personalized follow-ups, customer support, or building community engagement.

**Use Cases:**

*   **Personalized Follow-up:** Thank a user for positive feedback or provide additional information that the clone couldn't fully convey.
*   **Issue Resolution:** Directly address a specific user's query or concern that requires human intervention.
*   **Clarification:** Ask a user for more details if their initial query was ambiguous.
*   **Community Building:** Engage with active community members or offer exclusive insights.

**How to Send a Direct Message:**

1.  Navigate to the **Audience** tab.
2.  Select the specific user you wish to message from the list.
3.  Within their conversation transcript, locate the option to send a direct message.

    ![Direct Messaging](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/engage-audience-2.png)

**Best Practices:**

*   **Contextual Messaging:** Always ensure your direct messages are relevant to the user's interaction history.
*   **Professional Tone:** Maintain a professional and helpful tone in all direct communications.
*   **Complementary, Not Replacement:** Use direct messaging to complement, not replace, the clone's automated capabilities. It's for specific, high-value interactions.
*   For broader communication, consider using [SMS Broadcasts](/engage/smsbroadcasts) or [Email Broadcasts](/engage/emailbroadcasts).

---

By effectively utilizing the **Audience and Conversations** module, you can transform your Delphi Clone into a highly responsive, intelligent, and continuously improving asset that deeply understands and effectively engages with your audience.


--------------------------------------------------------------------------------
title: "Mighty Networks - Delphi"
description: "This page outlines the process of integrating your Delphi AI into a Mighty Networks community. By embedding your Delphi, you can provide your community members with direct, always-on access to your AI..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/mighty"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Mighty Networks - Delphi

This page outlines the process of integrating your Delphi AI into a Mighty Networks community. By embedding your Delphi, you can provide your community members with direct, always-on access to your AI, enhancing their experience, answering common questions, and providing instant support or information relevant to your community's focus. This integration allows you to seamlessly blend the power of Delphi's AI capabilities directly within your paid or free Mighty Networks spaces.

This guide will walk you through obtaining the necessary embed code from your Delphi Studio, embedding it correctly within a Mighty Networks Article, and configuring your Delphi instance to securely allow embedding within your community's domain.

---

## How to Embed Your Delphi in Mighty Networks {#how-to-embed-your-delphi-in-mighty-networks}

To begin the integration, you first need to retrieve the specific embed code for your Delphi instance from the Delphi Studio. This code snippet acts as the bridge, allowing your Delphi to be displayed and interact within your Mighty Networks community.

1.  **Navigate to Website Integrations:**
    *   Log in to your [Delphi Studio](https://www.delphi.ai/studio).
    *   From the main navigation, go to **Access** and then select **Website Integrations**. This section is dedicated to managing how your Delphi can be embedded on external websites.

2.  **Select Your Delphi Instance:**
    *   On the Website Integrations page, you will see a list of your available Delphi instances.
    *   Select the specific instance you wish to integrate into your Mighty Networks community. If you have multiple Delphis, ensure you choose the correct one. For more information on managing instances, refer to the [Instances](/build/instances) documentation.

3.  **Access the Mighty Networks Embed Guide:**
    *   Scroll to the bottom of the Website Integrations page.
    *   Locate and click on the **Mighty Networks Embed Guide**. This dedicated guide provides the optimized embed code and specific instructions for Mighty Networks.

4.  **Copy the Code Snippet:**
    *   A popup window will appear with instructions. Read the initial information carefully.
    *   Click `Next` to proceed. The next screen will display the unique code snippet required for embedding your Delphi.
    *   Copy this code snippet to your clipboard. You will paste this into your Mighty Networks community in the next step.

---

## Embedding Delphi into Your Mighty Networks Community {#embedding-delphi-into-your-mighty-networks-community}

Once you have copied the Delphi embed code, the next step is to integrate it into your Mighty Networks community. This is typically done by creating an "Article" within a specific Space where you want your Delphi to be accessible.

1.  **Open Your Mighty Networks Community:**
    *   Log in to your Mighty Networks account.
    *   Navigate to the specific **Space** within your community where you want to embed your Delphi. This could be a dedicated "AI Assistant" space, a "Resources" section, or integrated directly into a course module.

2.  **Create a New Article:**
    *   Within your chosen Space, look for the `Create` button (often located at the top or side of the content area).
    *   Click `Create` and then select `Article` from the dropdown options. Articles provide a flexible content format that supports embedding.
    *   ![Create App](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-mighty-1.png)
    *   ![Create App](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-mighty-2.png)

3.  **Name Your Article and Add Embed Block:**
    *   Give your Article a clear and descriptive name, such as "Your AI Assistant," "Delphi Support," or "Community AI."
    *   Within the Article editor, click the `+` icon on the left side of the content area. This icon allows you to add various content blocks.
    *   ![Create App](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-mighty-3.png)

4.  **Paste the Delphi Embed Code:**
    *   From the list of content blocks, select the **Embed icon** (`</>`). This block is specifically designed for embedding external content using HTML or JavaScript snippets.
    *   Paste the Delphi code snippet you copied earlier into the provided field.
    *   ![Create App](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-mighty-4.png)

5.  **Publish Your Article:**
    *   Once the code is pasted, save or publish your Mighty Networks Article. Your Delphi should now appear within the Article.

---

## Configuring Allowed Websites in Delphi {#configuring-allowed-websites-in-delphi}

For security and proper functionality, Delphi requires you to explicitly list the domains where your AI instance is permitted to be embedded. This prevents unauthorized use of your Delphi and ensures it only operates within your designated Mighty Networks community.

1.  **Return to Delphi Website Integrations:**
    *   Go back to your [Delphi Studio](https://www.delphi.ai/studio).
    *   Navigate to **Access** and then **Website Integrations** again. Ensure you have the correct Delphi instance selected.

2.  **Add Mighty Networks Domain to Allowed Websites:**
    *   At the top of the Website Integrations page, locate the **Allowed Websites** field.
    *   Enter the exact domain of your Mighty Networks community into this field. For example, if your Mighty Networks community URL is `https://yourcommunity.mn.co`, you would enter `yourcommunity.mn.co`.
    *   **Important:** Do not include `https://` or any trailing slashes. Only the base domain is required.
    *   ![Create App](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-mighty-5.png)

3.  **Save Changes:**
    *   Ensure you save any changes made on this page. This step is crucial for the embed to function correctly.

### Technical Details and Best Practices {#technical-details-and-best-practices}

*   **Security (CORS):** The "Allowed Websites" setting is a critical security measure. It implements Cross-Origin Resource Sharing (CORS) policies, ensuring that your Delphi instance only loads and interacts with authorized domains. Failing to add your Mighty Networks domain here will result in your Delphi not loading or displaying errors within your community.
*   **Domain Accuracy:** Double-check the spelling and format of your Mighty Networks domain. Even a small typo can prevent the integration from working.
*   **Subdomains:** If your Mighty Networks community uses a specific subdomain (e.g., `community.yourbrand.mn.co`), ensure you add that exact subdomain to the Allowed Websites list.
*   **Testing:** After completing all steps, thoroughly test the integration by visiting the Mighty Networks Article where you embedded your Delphi. Verify that it loads correctly and is fully interactive.
*   **User Experience:** Consider where in your Mighty Networks community your Delphi will be most useful. Placing it in a prominent "Resources" section, a dedicated "AI Help" space, or within specific course modules can maximize its utility for your members.
*   **Data Security:** Be mindful of the data your Delphi processes and ensure it aligns with your community's privacy policies and Delphi's [Data Security & Ownership](/data-security-and-ownership) guidelines.

By following these steps, your Delphi AI will be successfully integrated into your Mighty Networks community, providing an enhanced and interactive experience for your members.


--------------------------------------------------------------------------------
title: "Website - Delphi"
description: "This document provides comprehensive instructions for integrating your Delphi AI instance directly into your website. This integration allows your Delphi to serve as an interactive, AI-powered assista..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/website"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Website - Delphi

This document provides comprehensive instructions for integrating your Delphi AI instance directly into your website. This integration allows your Delphi to serve as an interactive, AI-powered assistant, enhancing user engagement and providing automated support directly on your web pages.

Delphi offers two primary methods for website integration: embedding your Delphi directly into a specific section of your page or deploying it as a floating chat bubble, typically positioned in the bottom right-hand corner. Both options are designed for ease of implementation, requiring only the insertion of provided code snippets into your website's HTML. This guide covers the setup process, customization options, and specific considerations for popular third-party website platforms.

---

## Integrating Your Delphi Instance on Your Website {#integrating-your-delphi-instance-on-your-website}

To begin integrating your Delphi instance with your website, you must first create a website integration within the Delphi platform. This process generates the necessary code snippets and configuration options for your chosen Delphi instance.

**Steps to Add a Website Integration:**

1.  Navigate to the **Integrate My Delphi** section in your Delphi dashboard.
2.  Select the **Website** tab.
3.  In the top right corner of the page, click **Add Website Embed**.
4.  From the dropdown menu, choose the specific Delphi **Instance** you wish to integrate.
    *   *For more information on managing your Delphi instances, refer to the [Instances](/build/instances) documentation.*

Once an integration is added, you can click on its entry to access the configuration details, including allowed domains, code snippets, and customization options.

## Managing Allowed Websites {#managing-allowed-websites}

For security and control, your Delphi integration will only function on domains explicitly listed in the **Allowed Websites** section. This prevents unauthorized embedding of your Delphi instance on external sites.

**How to Configure Allowed Websites:**

1.  Within the details page of your website integration, locate the **Allowed Websites** section.
2.  Enter each domain where your Delphi will be embedded or accessed.
3.  **Important Considerations:**
    *   Each domain must be entered separately (e.g., `https://www.yourdomain.com`, `https://blog.yourdomain.com`).
    *   Ensure you include the correct protocol (`http://` or `https://`). It is highly recommended to use `https://` for secure connections.
    *   If your website is accessible via multiple subdomains or aliases, list all of them.
    *   For testing purposes, you might need to add `localhost` or your local development server's address.

## Implementing Code Snippets {#implementing-code-snippets}

Delphi provides distinct code snippets for embedding your AI as a direct component on a page or as a floating chat bubble. These snippets are found on the integration's detail page under the **Code Snippets** section.

### Embedded Integration {#embedded-integration}

An embedded Delphi instance appears directly within the content flow of your webpage, similar to an `<iframe>`. Its placement on the page is determined by where you insert the snippet within your HTML code.

**Key Characteristics:**

*   **Direct Placement:** The Delphi interface will occupy a defined space on your page.
*   **Customizable Dimensions:** You can adjust the `width` and `height` attributes within the snippet to control its size. These can be set in pixels (e.g., `width="800px"`) or as a percentage (e.g., `width="100%"`). When using percentages, the Delphi will scale relative to its parent container.
*   **Co-existence:** Both an embedded Delphi and a chat bubble can be present on the same page simultaneously.

**Example Embed Snippet (Illustrative):**

```html
<iframe
  src="https://your-delphi-instance-url.delphi.ai/embed"
  width="100%"
  height="600px"
  frameborder="0"
  allow="microphone; camera; fullscreen"
></iframe>
```

**Technical Details & Best Practices:**

*   **`src` attribute:** This URL is unique to your Delphi instance and integration. Do not modify it.
*   **`width` and `height`:** Adjust these values to fit your website's layout. For responsive designs, using percentages (`width="100%"`) within a responsive container is often recommended.
*   **`frameborder="0"`:** Removes the default border around the iframe.
*   **`allow` attribute:** Grants necessary permissions (microphone, camera for video calls, fullscreen) to the embedded Delphi. Ensure these are included if you plan to use features like video calling.
*   **Placement:** Insert this snippet where you want the Delphi to appear in your page's `<body>`. Consider wrapping it in a `div` element for better styling and responsiveness.

### Chat Bubble Integration {#chat-bubble-integration}

A chat bubble integration provides a persistent, floating icon (typically in the bottom right corner) that, when clicked, expands to reveal the Delphi chat interface. This is ideal for providing accessible support across multiple pages of your site.

**Key Characteristics:**

*   **Fixed Position:** The chat bubble automatically positions itself in the bottom right-hand corner of the viewport, regardless of where the snippet is placed in your code.
*   **Global Accessibility:** Can be easily added to all pages of your site by placing the snippet in a common template or footer.
*   **Customizable Color:** The primary color of the chat bubble icon can be changed using a hex code within the snippet.

**Example Chat Bubble Snippet (Illustrative):**

```html
<script
  src="https://your-delphi-instance-url.delphi.ai/chat-bubble.js"
  data-instance-id="YOUR_INSTANCE_ID"
  data-color="#1A73E8"
></script>
```

**Technical Details & Best Practices:**

*   **`src` attribute:** Points to the Delphi chat bubble script. Do not modify this URL.
*   **`data-instance-id`:** This attribute contains a unique identifier for your specific Delphi instance. Ensure this matches the ID provided in your Delphi dashboard.
*   **`data-color`:** Modify the hex code (e.g., `#1A73E8` for blue) to match your brand's color scheme.
*   **Placement:** For optimal performance and to avoid render-blocking, it's a best practice to place this script tag just before the closing `</body>` tag of your HTML. This ensures the main content of your page loads before the chat widget script.

## Customizing Your Website Integration {#customizing-your-website-integration}

Beyond the basic snippet adjustments, Delphi offers additional customization options directly within the integration settings in your dashboard.

*   **Color Customization:** You can customize the primary color scheme of both the embedded and chat bubble experiences to align with your brand's aesthetics. This setting applies globally to the integration.
*   **Show Delphi Logo (White Labeling):** This option allows you to remove the Delphi logo from the integration interface, providing a fully white-labeled experience.
    *   **Availability:** This feature is typically available on **Prodigy** and **Advanced** subscription plans. Refer to the [Delphi Pricing page](https://www.delphi.ai/pricing) for details on plan features.

## Configuration Settings {#configuration-settings}

The **Settings** section of your website integration allows you to control key user interaction and data capture behaviors.

*   **Require User Email:**
    *   When enabled, the Delphi will prompt users to provide their email address at some point during the conversation. This is crucial for identifying users, maintaining conversation history, and enabling certain features.
    *   **Implications if Disabled:**
        *   **Anonymous Conversations:** Users will not be prompted to log in or provide an email, resulting in ongoing anonymous conversations.
        *   **Unlimited Calling Minutes:** Without user identification, there is no mechanism to track individual user usage against your allotted calling minutes quota. A single user could potentially consume a significant portion of your quota.
        *   **Video Calling Incompatibility:** Video calling features are not compatible when email capture is turned off, as they require user authentication.
    *   **Best Practice:** Enable this setting if you need to track user interactions, manage user-specific data, or offer features like video calls. Consider disabling it only for public-facing FAQs where anonymity is preferred and quota management is less critical.
    *   *For more details on data handling, refer to the [Data Security & Ownership](/data-security-and-ownership) documentation.*

*   **Show Questions:**
    *   When enabled, this setting displays a set of suggested questions above the response bar within the Delphi interface.
    *   **Benefit:** These pre-defined questions guide users, helping them initiate conversations and discover the Delphi's capabilities more easily. This can significantly improve initial user engagement.

## White Labeling and Custom Domains {#white-labeling-and-custom-domains}

For a fully branded experience, you can configure a custom domain for your Delphi instance, making it appear as if the Delphi is hosted directly on your own infrastructure. This feature is part of the white-labeling capabilities.

**Steps to Configure a Custom Domain:**

1.  **Access Integrations:**
    *   From your Delphi dashboard, navigate to **Access**.
    *   Select **Integrations** > **Website**.
2.  **Edit Website Integration:**
    *   Locate the specific website integration for your desired instance and click on it to open its settings.
3.  **Add a Custom Domain:**
    *   Scroll down to the **Custom Domain** section.
    *   Enter your desired custom domain name (e.g., `ai.yourcompany.com`).
4.  **Verify Your Domain (DNS Configuration):**
    *   After entering the domain, Delphi will provide specific DNS verification details (typically CNAME or A records).
    *   You will need to log in to your domain provider's (e.g., GoDaddy, Cloudflare, Namecheap) DNS management interface.
    *   Add the provided DNS records as instructed by Delphi.
    *   **DNS Propagation:** Be aware that DNS changes can take anywhere from a few minutes to 48 hours to propagate across the internet. Your custom domain will become active only after successful DNS verification.

Once the DNS records are verified, your Delphi instance will be accessible via your custom domain, enhancing your brand's presence.

## Third-Party Website Platform Integrations {#third-party-website-platform-integrations}

Integrating Delphi into certain third-party website builders may require specific steps due to their platform-specific limitations or methods for embedding external content.

### Kajabi Integration {#kajabi-integration}

Kajabi is a popular platform for online courses and digital products. Integrating Delphi requires adding specific domains to your allowed list and then embedding the code snippets.

1.  **Allowed Websites:**
    *   Before embedding, ensure you add the following domains to your Delphi's **Allowed Websites** list:
        *   `https://app.kajabi.com`
        *   The actual domain of your Kajabi course (e.g., `https://yourcourse.mykajabi.com` or your custom domain).
2.  **Embedding Delphi (Iframe):**
    *   To embed your Delphi directly into a Kajabi module (e.g., a lesson page), locate the "Source Code" or "HTML" text area within the module editor.
    *   Paste the Delphi iframe embed code snippet (from the **Embedded Integration** section above) into this source code area.
3.  **Adding a Chat Widget (Site-wide):**
    *   To add the Delphi chat bubble widget to the bottom right of your entire Kajabi course site, navigate to **Site Details** in your Kajabi dashboard.
    *   Locate the **Page Scripts** section.
    *   Paste the Delphi chat bubble script snippet (from the **Chat Bubble Integration** section above) into this area. This will ensure the chat bubble appears on all pages of your course.

### Wix Integration {#wix-integration}

Wix has specific requirements for embedding custom elements, particularly for non-premium users.

1.  **Wix Premium Subscription:**
    *   Due to limitations imposed by Wix, you **must have a Wix premium subscription** to embed custom elements like Delphi onto your Wix site.
2.  **Enable Dev Mode:**
    *   Navigate to your Wix Studio editor.
    *   Enable **Dev Mode**. This is crucial for accessing the necessary developer tools.
3.  **Add a Custom Element:**
    *   In the Wix editor, click the **Add Element** button.
    *   Select **Custom Element** and drag it onto your Wix site where you want the Delphi to appear.
4.  **Choose Source and Velo File:**
    *   Select the Custom Element you just placed.
    *   Click on **Choose Source** and select **Velo File**.
    *   Wix should generate a new file, typically named `wix-default-custom-element.js`.
5.  **Set Tag Name:**
    *   Ensure the **Tag name** for your custom element is set to `delphi-element`.
6.  **Replace Code:**
    *   The previous step should open the `wix-default-custom-element.js` file in a text editor at the bottom of your screen.
    *   **Remove all existing code** inside this file.
    *   **Replace it with the specific custom element code provided by Delphi** for Wix integration. (This code is typically a JavaScript snippet that handles the rendering of the Delphi iframe or chat bubble within the Wix custom element.)
7.  **Expected Error Message:**
    *   After pasting the code, you might see an error message in your Wix Editor. This is often expected because the Delphi instance is not yet fully loaded or connected.
    *   **You can safely ignore this error message** if you have correctly added your Wix domain(s) to your Delphi's **Allowed Websites** list.
8.  **Publish Your Site:**
    *   Once the code is in place and your domain is allowed, publish your Wix site. Your Delphi integration should now be live.


--------------------------------------------------------------------------------
title: "What Languages Does Delphi Support? - Delphi"
description: "This document provides a comprehensive overview of the language capabilities supported by Delphi, detailing how your AI assistant interacts with users and processes information in various languages. D..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/fast-fixes/language-related/languages"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# What Languages Does Delphi Support? - Delphi

This document provides a comprehensive overview of the language capabilities supported by Delphi, detailing how your AI assistant interacts with users and processes information in various languages. Delphi's multilingual support is categorized based on two primary factors: the format of the content (text or audio) and the functionality being performed (user conversations or AI training/content understanding).

Understanding these distinctions is crucial for effectively deploying a Delphi instance that can communicate globally and learn from diverse linguistic data. This page outlines the specific languages available for each scenario, along with best practices for optimizing your Delphi's performance in a multilingual environment.

---

## <a id="overview-of-language-support"></a>Overview of Language Support

Delphi's language handling is designed to be flexible and robust, adapting to the specific context of interaction or data processing. The system differentiates language support based on two key factors:

*   **Content Format:** Whether the interaction or data is primarily text-based (e.g., documents, chat messages) or audio-based (e.g., voice recordings, phone calls).
*   **Functionality:** Whether Delphi is engaging in real-time conversations with users or processing uploaded content for training and knowledge acquisition.

These factors define four distinct categories of language support, each with its own set of supported languages:

1.  **Text-Based Conversations:** Languages users can type to chat with your Delphi.
2.  **Audio-Based Conversations:** Languages users can speak when having voice calls with your Delphi.
3.  **Text-Based Training:** Languages Delphi can understand when analyzing written documents you upload for training.
4.  **Audio-Based Training:** Languages Delphi can process when learning from voice recordings or audio files.

Each category leverages different underlying technologies, such as Natural Language Processing (NLP), Natural Language Understanding (NLU), Automatic Speech Recognition (ASR), and Text-to-Speech (TTS), which contribute to the varying language sets.

## <a id="conversational-language-support"></a>Conversational Language Support

These are the languages in which users can interact directly with your Delphi instance. The range of supported languages varies depending on the communication method, ensuring an optimal user experience whether through text or voice.

### <a id="text-conversations"></a>Text-Based Conversations

For text-based interactions, such as chat interfaces on your website or messaging platforms, Delphi supports a broad array of languages. This allows your users to communicate naturally in their preferred written language.

**Supported Languages:**

*   🇺🇸 English
*   🇿🇦 Afrikaans
*   🇸🇦 Arabic
*   🇦🇲 Armenian
*   🇦🇿 Azerbaijani
*   🇧🇾 Belarusian
*   🇧🇦 Bosnian
*   🇧🇬 Bulgarian
*   🇪🇸 Catalan
*   🇨🇳 Chinese
*   🇭🇷 Croatian
*   🇨🇿 Czech
*   🇩🇰 Danish
*   🇳🇱 Dutch
*   🇪🇪 Estonian
*   🇫🇮 Finnish
*   🇫🇷 French
*   🇪🇸 Galician
*   🇩🇪 German
*   🇬🇷 Greek
*   🇮🇱 Hebrew
*   🇮🇳 Hindi
*   🇭🇺 Hungarian
*   🇮🇸 Icelandic
*   🇮🇩 Indonesian
*   🇮🇹 Italian
*   🇯🇵 Japanese
*   🇮🇳 Kannada
*   🇰🇿 Kazakh
*   🇰🇷 Korean
*   🇱🇻 Latvian
*   🇱🇹 Lithuanian
*   🇲🇰 Macedonian
*   🇲🇾 Malay
*   🇮🇳 Marathi
*   🇳🇿 Maori
*   🇳🇵 Nepali
*   🇳🇴 Norwegian
*   🇮🇷 Persian
*   🇵🇱 Polish
*   🇵🇹 Portuguese
*   🇷🇴 Romanian
*   🇷🇺 Russian
*   🇷🇸 Serbian
*   🇸🇰 Slovak
*   🇸🇮 Slovenian
*   🇪🇸 Spanish
*   🇹🇿 Swahili
*   🇸🇪 Swedish
*   🇵🇭 Tagalog
*   🇮🇳 Tamil
*   🇹🇭 Thai
*   🇹🇷 Turkish
*   🇺🇦 Ukrainian
*   🇵🇰 Urdu
*   🇺🇿 Uzbek
*   🇻🇳 Vietnamese
*   🏴 Welsh

**Best Practices for Text Conversations:**
*   **Clear Language Detection:** While Delphi often auto-detects the user's language, ensure your integration (e.g., website widget) provides a way for users to explicitly select their language if needed, especially in multilingual regions.
*   **Consistent Responses:** Ensure your Delphi's responses are consistently in the detected or selected language to avoid confusion.
*   **Testing:** Thoroughly test conversational flows in all target languages to ensure accuracy and naturalness. Refer to the [Testing](/build/testing) guide for more details.

### <a id="voice-calls"></a>Audio-Based Conversations (Voice Calls)

For voice interactions, such as phone calls or voice assistants, Delphi leverages advanced Automatic Speech Recognition (ASR) and Text-to-Speech (TTS) technologies. The complexity of real-time speech processing means that the list of supported languages for voice calls is more focused compared to text.

**Supported Languages:**

*   🇺🇸 English
*   🇯🇵 Japanese
*   🇨🇳 Chinese
*   🇩🇪 German
*   🇮🇳 Hindi
*   🇫🇷 French
*   🇰🇷 Korean
*   🇵🇹 Portuguese
*   🇮🇹 Italian
*   🇪🇸 Spanish
*   🇮🇩 Indonesian
*   🇳🇱 Dutch
*   🇹🇷 Turkish
*   🇵🇭 Filipino
*   🇵🇱 Polish
*   🇸🇪 Swedish
*   🇧🇬 Bulgarian
*   🇷🇴 Romanian
*   🇸🇦 Arabic
*   🇨🇿 Czech
*   🇬🇷 Greek
*   🇫🇮 Finnish
*   🇭🇷 Croatian
*   🇲🇾 Malay
*   🇸🇰 Slovak
*   🇩🇰 Danish
*   🇮🇳 Tamil
*   🇺🇦 Ukrainian
*   🇷🇺 Russian
*   🇭🇺 Hungarian
*   🇳🇴 Norwegian
*   🇻🇳 Vietnamese

**Best Practices for Voice Calls:**
*   **Audio Quality:** Advise users on optimal audio quality (e.g., speaking clearly, minimizing background noise) for better speech recognition accuracy, especially for less common languages or accents.
*   **Accent and Dialect:** While Delphi strives to understand various accents, very strong or regional dialects might require more specific training data for optimal performance.
*   **User Experience:** Design voice prompts and responses to be clear and concise, considering the nuances of spoken language. For general communication best practices, see the [Communication](/user-experience/overview) section.

## <a id="content-understanding-languages"></a>Content Understanding Language Support

These are the languages your Delphi can process and learn from when you upload training materials, such as documents, FAQs, or audio recordings. This capability is fundamental to building your Delphi's knowledge base and enabling it to provide informed responses.

### <a id="text-content"></a>Text Format Content

When you upload documents, articles, or other text-based content to train your Delphi, it uses Natural Language Understanding (NLU) models to extract information, identify entities, and build its knowledge graph. The range of languages supported for text content understanding is extensive.

**Supported Languages:**

*   🇺🇸 English
*   🇿🇦 Afrikaans
*   🇸🇦 Arabic
*   🇦🇲 Armenian
*   🇦🇿 Azerbaijani
*   🇧🇾 Belarusian
*   🇧🇦 Bosnian
*   🇧🇬 Bulgarian
*   🇪🇸 Catalan
*   🇨🇳 Chinese
*   🇭🇷 Croatian
*   🇨🇿 Czech
*   🇩🇰 Danish
*   🇳🇱 Dutch
*   🇪🇪 Estonian
*   🇫🇮 Finnish
*   🇫🇷 French
*   🇪🇸 Galician
*   🇩🇪 German
*   🇬🇷 Greek
*   🇮🇳 Hindi
*   🇭🇺 Hungarian
*   🇮🇸 Icelandic
*   🇮🇩 Indonesian
*   🇮🇹 Italian
*   🇯🇵 Japanese
*   🇮🇳 Kannada
*   🇰🇿 Kazakh
*   🇰🇷 Korean
*   🇱🇻 Latvian
*   🇱🇹 Lithuanian
*   🇲🇰 Macedonian
*   🇲🇾 Malay
*   🇮🇳 Marathi
*   🇳🇿 Maori
*   🇳🇵 Nepali
*   🇳🇴 Norwegian
*   🇮🇷 Persian
*   🇵🇱 Polish
*   🇵🇹 Portuguese
*   🇷🇴 Romanian
*   🇷🇺 Russian
*   🇷🇸 Serbian
*   🇸🇰 Slovak
*   🇸🇮 Slovenian
*   🇪🇸 Spanish
*   🇹🇿 Swahili
*   🇸🇪 Swedish
*   🇵🇭 Tagalog
*   🇮🇳 Tamil
*   🇹🇭 Thai
*   🇹🇷 Turkish
*   🇺🇦 Ukrainian
*   🇵🇰 Urdu
*   🇺🇿 Uzbek
*   🇻🇳 Vietnamese
*   🏴 Welsh

**Best Practices for Text Content:**
*   **High-Quality Data:** Provide clean, well-structured, and accurate text data. The quality of your training data directly impacts Delphi's understanding and response accuracy.
*   **Language Consistency:** While Delphi can handle some mixed-language content, it performs best when training data for a specific knowledge domain is predominantly in one language.
*   **Contextual Relevance:** Ensure the content is relevant to the types of questions your Delphi will answer. For strategies on improving your Delphi's understanding, refer to [Improve clone](/user-experience/improve-clone).

### <a id="audio-content"></a>Audio Format Content

Delphi can also learn from audio files, such as call recordings, podcasts, or voice notes. This involves transcribing the audio into text using ASR and then applying NLU to extract knowledge. The comprehensive list of languages for audio content understanding reflects Delphi's advanced speech processing capabilities.

**Supported Languages:**

*   🇺🇸 English
*   🇿🇦 Afrikaans
*   🇦🇱 Albanian
*   🇪🇹 Amharic
*   🇸🇦 Arabic
*   🇦🇲 Armenian
*   🇮🇳 Assamese
*   🇦🇿 Azerbaijani
*   🇷🇺 Bashkir
*   🇪🇸 Basque
*   🇧🇾 Belarusian
*   🇧🇩 Bengali
*   🇧🇦 Bosnian
*   🇫🇷 Breton
*   🇧🇬 Bulgarian
*   🇪🇸 Catalan
*   🇨🇳 Chinese
*   🇭🇷 Croatian
*   🇨🇿 Czech
*   🇩🇰 Danish
*   🇳🇱 Dutch
*   🇪🇪 Estonian
*   🇩🇰 Faroese
*   🇫🇮 Finnish
*   🇫🇷 French
*   🇪🇸 Galician
*   🇬🇪 Georgian
*   🇩🇪 German
*   🇬🇷 Greek
*   🇮🇳 Gujarati
*   🇭🇹 Haitian
*   🇳🇬🇳🇪 Hausa
*   🇺🇸 Hawaiian
*   🇮🇱 Hebrew
*   🇮🇳 Hindi
*   🇭🇺 Hungarian
*   🇮🇸 Icelandic
*   🇮🇩 Indonesian
*   🇮🇹 Italian
*   🇯🇵 Japanese
*   🇮🇳 Kannada
*   🇰🇿 Kazakh
*   🇰🇭 Khmer
*   🇰🇷 Korean
*   🇱🇦 Lao
*   🇮🇹 Latin
*   🇱🇻 Latvian
*   🇱🇹 Lithuanian
*   🇱🇺 Luxembourgish
*   🇲🇰 Macedonian
*   🇲🇬 Malagasy
*   🇲🇾 Malay
*   🇮🇳 Malayalam
*   🇲🇹 Maltese
*   🇳🇿 Maori
*   🇮🇳 Marathi
*   🇲🇳 Mongolian
*   🇳🇵 Nepali
*   🇳🇴 Norwegian
*   🇳🇴 Norwegian Nynorsk
*   🇫🇷 Occitan
*   🇮🇳 Panjabi
*   🇦🇫🇵🇰 Pashto
*   🇮🇷 Persian
*   🇵🇱 Polish
*   🇵🇹 Portuguese
*   🇷🇴 Romanian
*   🇷🇺 Russian
*   🇮🇳 Sanskrit
*   🇷🇸 Serbian
*   🇿🇼 Shona
*   🇵🇰 Sindhi
*   🇱🇰 Sinhala
*   🇸🇰 Slovak
*   🇸🇮 Slovenian
*   🇪🇸 Spanish
*   🇮🇩 Sundanese
*   🇹🇿 Swahili
*   🇸🇪 Swedish
*   🇵🇭 Tagalog
*   🇹🇯 Tajik
*   🇮🇳 Tamil
*   🇷🇺 Tatar
*   🇮🇳 Telugu
*   🇹🇭 Thai
*   🇨🇳 Tibetan
*   🇹🇷 Turkish
*   🇹🇲 Turkmen
*   🇺🇦 Ukrainian
*   🇵🇰 Urdu
*   🇺🇿 Uzbek
*   🇻🇳 Vietnamese
*   🏴 Welsh
*   🇮🇱 Yiddish
*   🇳🇬 Yoruba

**Best Practices for Audio Content:**
*   **Clear Recordings:** Ensure audio recordings are as clear as possible, with minimal background noise and clear speech, to maximize transcription accuracy.
*   **Speaker Separation:** If multiple speakers are present, consider tools or methods to separate speakers for clearer transcription and understanding.
*   **Metadata:** Provide relevant metadata with audio files (e.g., speaker names, topics) to aid Delphi in contextual understanding.

## <a id="best-practices"></a>Best Practices for Multilingual Delphi

Deploying a multilingual Delphi requires careful planning and execution to ensure optimal performance and user satisfaction.

*   **Define Target Languages:** Clearly identify the primary languages your Delphi needs to support for both conversations and content understanding. This will guide your content creation and training efforts.
*   **Consistent Language Configuration:** While Delphi intelligently handles language detection, ensure any explicit language settings within your Delphi instance (e.g., in [Settings](/build/settings)) align with your target languages.
*   **Localized Training Data:** For each target language, provide high-quality, localized training data. Do not rely solely on translated content, as cultural nuances and idiomatic expressions are crucial for accurate understanding.
*   **Multilingual Testing Strategy:** Implement a robust testing strategy that includes native speakers for each target language. Test all conversational flows, common queries, and edge cases. Refer to the [Testing](/build/testing) documentation for guidance.
*   **User Onboarding:** If your Delphi supports multiple languages, ensure your user onboarding process (see [Onboarding](/onboarding)) clearly communicates this and allows users to select their preferred language from the outset.
*   **Performance Monitoring:** Continuously monitor your Delphi's performance in different languages. Pay attention to metrics like response accuracy, latency, and user satisfaction.
*   **Fallback Mechanisms:** Consider a fallback language (e.g., English) for scenarios where a user's language cannot be detected or is not fully supported, and communicate this gracefully to the user.

## <a id="troubleshooting"></a>Troubleshooting Language Issues

If you encounter issues with language support, consider the following:

*   **Incorrect Language Detection:**
    *   **User Input:** Is the user's input clear and consistently in one language? Mixed-language input can confuse detection.
    *   **Audio Quality:** For voice, ensure audio quality is high and free from excessive noise or overlapping speech.
    *   **Training Data:** Verify that your training data for the specific language is sufficient and representative.
*   **Poor Understanding/Responses:**
    *   **Data Relevance:** Is the training content relevant to the user's query in that specific language?
    *   **Localization:** Has the content been properly localized, not just translated? Cultural context is vital.
    *   **Model Retraining:** If you've added significant new content, consider retraining your Delphi to incorporate the new knowledge.
*   **Unsupported Language:**
    *   Refer to the lists above to confirm if the language is supported for the specific functionality (conversation type or content format). If not, consider alternative communication methods or providing content in a supported language.

## <a id="future-language-support"></a>Future Language Support

Delphi is continuously expanding its language capabilities to serve a global user base. New languages and improved models are regularly integrated to enhance both conversational fluency and content understanding. For updates on newly supported languages or features, please refer to the latest release notes or contact Delphi support.


--------------------------------------------------------------------------------
title: "Your Delphi's Behavior - Delphi"
description: "This document provides comprehensive technical guidance on configuring your Delphi's behavior, a critical aspect of shaping its personality, communication style, and reasoning capabilities. This page ..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/using-delphi/mind/behavior"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Your Delphi's Behavior - Delphi

This document provides comprehensive technical guidance on configuring your Delphi's behavior, a critical aspect of shaping its personality, communication style, and reasoning capabilities. This page serves as the central hub for fine-tuning how your Delphi interacts, ensuring it not only provides accurate information but also truly reflects your unique tone and style.

Mastering the settings on this page is essential for creating a Delphi that feels authentic and deeply connected to your persona. By adjusting parameters such as response length, creativity, and underlying objectives, you gain precise control over its conversational dynamics, making your Delphi an effective and engaging digital representation.

---

## Understanding Delphi's Behavior Configuration {#understanding-delphis-behavior-configuration}

The "Your Delphi's Behavior" section is arguably the most crucial area for customizing your Delphi. While uploading content provides the knowledge base, these settings dictate *how* your Delphi processes that knowledge, *how* it communicates, and *how* it adapts to different conversational contexts. This is where the "magic" of making your Delphi feel like you truly happens. Every adjustment here directly influences its personality, depth of reasoning, and adaptability.

The goal is to move beyond a simple knowledge retrieval system to an AI that embodies your unique communication style and objectives.

## Quick Start Guide: Shaping Your Delphi's Core {#quick-start-guide-shaping-your-delphis-core}

This quick start guide outlines the essential steps to rapidly configure your Delphi's fundamental behavior. These steps are designed to get your Delphi to approximately 90% of its desired behavior quickly, with the remaining 10% requiring iterative fine-tuning.

### Step 1: Set the Foundation (Response Settings) {#step-1-set-the-foundation-response-settings}

Navigate to **Mind → [Response Settings](https://www.delphi.ai/studio/*/build/response-settings)**. These settings establish the basic communication parameters for your Delphi.

*   **Default Language:**
    *   **Purpose:** Defines the primary language your Delphi will use for communication. While Delphi can often recognize and respond in other languages, this sets the default.
    *   **Best Practice:** Select the language that aligns with your primary audience and your natural communication style.
*   **Response Length:**
    *   **Purpose:** Controls the verbosity of Delphi's replies.
    *   **Options:**
        *   **Intelligent:** Attempts to dynamically adjust length based on query complexity (often leans towards more detailed responses).
        *   **Concise (Recommended):** Prioritizes brevity and directness, ideal for quick, engaging interactions.
        *   **Explanatory:** Provides thorough, in-depth responses with extensive context, suitable for educational or analytical purposes.
        *   **Custom:** Allows setting a specific word limit for strict control, useful for content generation or constrained environments.
    *   **Best Practice:** Start with **Concise** for a generally better user experience, as shorter responses typically maintain engagement more effectively.
*   **Creativity (Adherence to Training Data):**
    *   **Purpose:** Determines how strictly Delphi adheres to its training data versus generating more novel or speculative responses.
    *   **Options:**
        *   **Strict:** Limits responses exclusively to exact matches within training data. High accuracy, but very restrictive, often leading to refusals if input isn't precise.
        *   **Adaptive (Recommended):** Allows reasoning and rephrasing based on training data, even without exact keyword matches. It **cannot hallucinate** but intelligently applies knowledge. This is the most common and balanced setting.
        *   **Creative:** Enables Delphi to pull information from the internet and underlying Large Language Models (LLMs) beyond its training data. It **can and will hallucinate**, prioritizing probable answers over strict factual adherence.
    *   **Best Practice:** For most applications, **Adaptive** offers the optimal balance between accuracy and flexibility. Use **Strict** only when absolute, verifiable accuracy from your data is paramount, and **Creative** when broader, more dynamic (and potentially speculative) responses are desired.

### Step 2: Define its Objective (Purpose & Instructions) {#step-2-define-its-objective-purpose-instructions}

Navigate to **Mind → [Purpose & Instructions](https://www.delphi.ai/studio/*/build/purpose)**. This section allows you to define the overarching goal and specific guidelines for your Delphi.

*   **Purpose:**
    *   Delphi auto-generates an initial purpose, which can be refined.
    *   **Regenerate:** Choose from nine predefined objectives (e.g., Be Me, Expert, Coaching, Customer Support, Lead Capture) and add context before regenerating.
    *   **Edit Manually:** Write or modify the purpose from scratch to precisely fit your needs.
*   **Custom Instructions:**
    *   Add brief, specific guidelines that your Delphi should consistently follow, such as "Always ask for the user's email before providing a solution" or "Maintain a friendly and encouraging tone."
    *   **Best Practice:** Clearly define the primary role of your Delphi. A well-defined purpose guides its responses and decision-making process. Custom instructions are powerful for enforcing specific behaviors or conversational flows.

### Step 3: Shape its Speaking Style {#step-3-shape-its-speaking-style}

Navigate to **Mind → [Speaking Style](https://www.delphi.ai/studio/*/build/style)**. This is where you imbue your Delphi with your unique tone and mannerisms.

*   Delphi automatically generates an initial style setting.
*   **Choose Style Samples:** Select up to 10 examples from your [uploaded documents](/using-delphi/mind/content) that best represent your desired communication style. Delphi will learn from these examples.
*   **Edit Manually:** Write a detailed description of the tone, vocabulary, and overall manner of speaking you want your Delphi to adopt.
*   **Best Practice:** Provide diverse and representative samples of your writing or speaking. If editing manually, be specific with adjectives (e.g., "concise and professional," "warm and empathetic," "humorous and informal").

### Step 4: Fine-Tune & Test {#step-4-fine-tune-and-test}

After configuring the initial settings, the most crucial step is continuous testing and iteration.

*   **Process:** Engage with your Delphi by asking a variety of questions, simulating real-world interactions. Pay close attention to its responses, tone, and adherence to instructions.
*   **Refinement:** Based on testing, return to the [Response Settings](https://www.delphi.ai/studio/*/build/response-settings), [Purpose & Instructions](https://www.delphi.ai/studio/*/build/purpose), and [Speaking Style](https://www.delphi.ai/studio/*/build/style) sections to make adjustments.
*   **Goal:** The aim is to achieve that final 10% of authenticity, ensuring your Delphi not only provides correct answers but *sounds* like you. This iterative process is key to unlocking the full potential of your Delphi.

## General Behavior Settings {#general-behavior-settings}

This section provides an in-depth look at the individual settings available under **Mind → [Response Settings](https://www.delphi.ai/studio/*/build/response-settings)**, offering technical details and advanced considerations.

### Default Language {#default-language}

*   **Configuration:** Select your desired language from a dropdown menu.
*   **Technical Detail:** This setting primarily influences the underlying language model's default output and internal processing biases. While modern LLMs are often multilingual, setting a default optimizes performance and consistency for the chosen language.
*   **Impact:** Ensures that your Delphi's responses are consistently in the specified language, improving user experience for your target audience. It also helps in maintaining linguistic accuracy and cultural relevance.
*   **Example:** If your primary audience is English-speaking, setting "English" ensures responses are always in English, even if a user's query contains a few foreign words.

### Response Length {#response-length}

*   **Configuration:** Choose from "Intelligent," "Concise," "Explanatory," or "Custom" (with a word limit).
*   **Technical Detail:** This parameter directly influences the token generation process of the underlying language model.
    *   **Intelligent:** Uses heuristic algorithms to estimate optimal length based on query complexity, but can be unpredictable.
    *   **Concise:** Applies a strict token limit, forcing brevity.
    *   **Explanatory:** Encourages the model to generate more tokens, expanding on details and context.
    *   **Custom:** Imposes a hard token limit, providing precise control over output size.
*   **Impact:**
    *   **Concise:** Ideal for quick FAQs, chatbot interactions, or mobile interfaces where brevity is valued. Reduces cognitive load for users.
    *   **Explanatory:** Best for educational content, detailed explanations, or when users require comprehensive understanding. Can increase interaction time.
    *   **Custom:** Useful for specific applications like generating social media posts (character limits), email drafts, or structured summaries.
*   **Best Practice:** For most interactive user experiences, **Concise** is recommended to keep conversations flowing and prevent information overload. Monitor user feedback to determine if more detail is consistently needed, then consider **Explanatory** or **Custom**.

### Adherence to Training Data (Creativity) {#adherence-to-training-data-creativity}

*   **Configuration:** Select "Strict," "Adaptive," or "Creative."
*   **Technical Detail:** This setting directly controls the "temperature" or "top-p" sampling parameters of the underlying LLM, which dictate the randomness and diversity of generated responses.
    *   **Strict:** Mimics a very low temperature/top-p, prioritizing high-probability tokens directly from training data. Reduces "hallucination" but limits flexibility.
    *   **Adaptive:** Balances temperature/top-p, allowing for some variability and reasoning while staying grounded in the provided data. This is a "sweet spot" for most applications.
    *   **Creative:** Uses higher temperature/top-p values, encouraging the model to explore less probable, more diverse, and potentially novel responses, even if they are not explicitly present in the training data. This increases the risk of "hallucination" (generating factually incorrect or unverified information).
*   **Impact:**
    *   **Strict:** Ensures maximum factual accuracy based *only* on your provided content. Suitable for highly regulated industries or applications where any deviation is unacceptable.
    *   **Adaptive:** Provides a good balance, allowing Delphi to answer questions that are semantically related but not exact matches, without inventing information. This is the most versatile setting.
    *   **Creative:** Enables broader conversational capabilities and the ability to answer questions outside its direct training, but at the cost of potential inaccuracies. Useful for brainstorming, creative writing, or general knowledge chatbots where strict factual adherence isn't the primary concern.
*   **Best Practice:** For most business and informational Delphis, **Adaptive** is the recommended setting. It provides intelligent reasoning without introducing unverified information. Only use **Strict** for highly sensitive, fact-critical applications, and **Creative** when the benefits of broader responses outweigh the risks of hallucination.

### Follow-Up Questions (Dynamic Questions) {#follow-up-questions-dynamic-questions}

*   **Configuration:** (Details on how to enable/configure this feature are not fully provided in the source content, indicating it may be an upcoming or partially documented feature.)
*   **Technical Detail:** This feature typically leverages the LLM's ability to identify gaps in user queries or anticipate next steps in a conversation. It involves generating contextually relevant questions to clarify user intent, gather more information, or guide the user towards a solution.
*   **Impact:** Improves user experience by making the conversation more interactive and efficient. It helps Delphi provide more accurate and tailored responses by proactively seeking necessary information.
*   **Example:** If a user asks "How do I reset my password?", Delphi might respond, "Are you trying to reset your password for your Delphi account or a different service?" to clarify.
*   **Best Practice:** When fully available, enabling this feature can significantly enhance the conversational flow and utility of your Delphi, especially for complex inquiries or support scenarios.


--------------------------------------------------------------------------------
title: "Kajabi - Delphi"
description: "This document provides comprehensive instructions for integrating your Delphi AI assistant into Kajabi, a popular online course platform. By following these steps, you can embed your Delphi directly i..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/kajabi"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Kajabi - Delphi

This document provides comprehensive instructions for integrating your Delphi AI assistant into Kajabi, a popular online course platform. By following these steps, you can embed your Delphi directly into your Kajabi courses, allowing students to interact with it for support, answers, and enhanced learning experiences. This integration can be implemented in two primary ways: as an embedded component within a specific lesson or as a persistent chat widget accessible across your entire Kajabi course site.

Integrating Delphi with Kajabi empowers you to offer instant, AI-powered assistance to your students, reducing support queries and improving the overall learning journey. Whether you want to provide a dedicated Q&A section or a readily available help bubble, this guide will walk you through the necessary configurations in both your Delphi Studio and Kajabi accounts.

---

## Integrating Delphi as a Course Companion {#integrating-delphi-as-a-course-companion}

This section details how to embed your Delphi AI assistant directly into a Kajabi course lesson, making it an integral part of your course content.

### Prerequisites {#prerequisites}

Before you begin, ensure you have:
*   An active Delphi AI account and access to your Delphi Studio.
*   An active Kajabi account with an existing course where you wish to embed your Delphi.
*   Administrative access to both platforms.

### Step 1: Accessing the Kajabi Embed Guide in Delphi Studio {#accessing-kajabi-embed-guide}

The first step involves retrieving the necessary embed codes from your Delphi Studio.

1.  Log in to your **Delphi Studio** account.
2.  From the left-hand navigation menu, navigate to **Access** and then select **Website Integrations**.
3.  Choose the specific Delphi instance you wish to integrate with your Kajabi course.
4.  Scroll to the bottom of the page. You will find a section or button labeled **Kajabi Embed Guide**. Click on this to open the dedicated guide, which contains the specific embed codes required for Kajabi. Keep this guide open as you will need to copy codes from it.

### Step 2: Configuring Allowed Websites in Delphi {#configuring-allowed-websites}

For security and proper functionality, you must inform Delphi which domains are permitted to host your embedded assistant.

1.  While still in the **Website Integrations** section of your Delphi Studio (from Step 1), locate the **Allowed Websites** field at the top of the page.
2.  Enter your Kajabi course domain into this field. For example, if your Kajabi course URL is `https://your-school.mykajabi.com/products/your-course`, you would enter `your-school.mykajabi.com`.
    *   **Best Practice:** Ensure you enter the root domain or subdomain where your Kajabi content is hosted. This step is crucial for preventing unauthorized embedding and ensuring your Delphi functions correctly within your Kajabi environment.
    *   *(Refer to: [Data Security & Ownership](/data-security-and-ownership) for more information on domain restrictions and security.)*
3.  Save any changes made in your Delphi Studio.

### Step 3: Embedding Delphi within a Kajabi Lesson {#embedding-delphi-within-kajabi-lesson}

Now, you will integrate the Delphi embed code into a specific lesson within your Kajabi course.

#### Creating a Dedicated Lesson {#creating-dedicated-lesson}

We recommend creating a specific lesson within your Kajabi course to house your Delphi, making it easily discoverable for students.

1.  Log in to your **Kajabi** admin dashboard.
2.  Navigate to your desired course.
3.  Within the course outline, create a new lesson. A suggested title is "Questions? Ask my Delphi!" or "AI Assistant Support."
    *   *(The provided image shows a lesson titled "Questions? Ask my Delphi!" within a module.)*

#### Inserting the Embed Code {#inserting-embed-code}

1.  Select the newly created (or existing) lesson where you want to embed your Delphi.
2.  Within the lesson editor, locate and click the **source code `</>` icon**. This icon allows you to insert HTML code directly into the lesson content.
    *   *(The provided image highlights this `</>` icon in the Kajabi lesson editor.)*
3.  Go back to the **Kajabi Embed Guide** you opened in Delphi Studio (Step 1).
4.  Locate and copy the **Kajabi Embed Code**. This code is typically an `<iframe>` tag designed to display your Delphi within a webpage.
5.  Paste the copied code into the source code popup window in Kajabi.
6.  Click **OK** to close the source code editor.
7.  Save the lesson in Kajabi.

Your Delphi AI assistant should now be visible and interactive within that specific Kajabi lesson.

---

## Adding Delphi as a Site-Wide Help Widget {#adding-delphi-as-a-site-wide-help-widget}

Beyond embedding Delphi within a lesson, you can also add it as a floating chat bubble (help widget) that appears on the bottom right corner of all pages within your Kajabi course site. This provides continuous access to your AI assistant.

### Step 1: Locating Kajabi Page Scripts {#locating-kajabi-page-scripts}

Kajabi allows you to insert custom scripts into the header or footer of your site, which is where the Delphi chat bubble code will go.

1.  Log in to your **Kajabi** admin dashboard.
2.  From the main dashboard, navigate to **Settings** (usually found in the bottom left corner).
3.  Under Settings, select **Site Details**.
4.  Scroll down the **Site Details** page until you find the **Page Scripts** section. This section typically has fields for "Header Page Scripts" and "Footer Page Scripts."

### Step 2: Inserting the Chat Bubble Embed Code {#inserting-chat-bubble-embed-code}

1.  Go back to the **Kajabi Embed Guide** you opened in Delphi Studio (from Step 1 of the previous section).
2.  Navigate to the third page or section of the guide to find the **Chat Bubble** embed code. This code is typically a JavaScript snippet.
3.  Copy the **Chat Bubble** embed code.
4.  Paste the copied code into the **Header Page Scripts** field in Kajabi.
    *   **Technical Detail:** Placing the script in the header ensures it loads early, making the chat bubble available as soon as the page renders.
    *   *(The provided image shows the "Header Page Scripts" field with code pasted into it.)*
5.  Scroll to the very bottom of the **Site Details** page and click **Save**.

Your Delphi AI assistant should now appear as a persistent chat bubble on the bottom right of your Kajabi course pages, providing continuous support to your students.

---

## Best Practices and Troubleshooting {#best-practices-and-troubleshooting}

*   **Test Thoroughly:** After embedding or adding the widget, always test the integration by logging in as a student or viewing the course in an incognito window. Ensure Delphi loads correctly and is fully interactive.
*   **Allowed Websites:** Double-check that your Kajabi domain is accurately entered in the "Allowed Websites" field in Delphi Studio. Incorrect entries are a common cause of embedding issues.
*   **Cache Clearing:** If you make changes and don't see them reflected immediately, try clearing your browser's cache or viewing the page in an incognito window. Kajabi's caching might delay updates.
*   **Source Code Integrity:** When pasting embed codes into Kajabi's source code editor, ensure no extra characters or formatting are introduced. Paste the code exactly as provided by Delphi.
*   **One Embed Per Page:** While you can embed Delphi in multiple lessons, avoid embedding the full Delphi instance multiple times on the *same* page, as this can lead to conflicts. The chat bubble widget is designed for site-wide presence.
*   **Kajabi's `</>` Icon:** Always use the source code `</>` icon in Kajabi's editor when embedding custom HTML or JavaScript. Pasting directly into the visual editor can strip out necessary code.

---

## Related Resources {#related-resources}

*   [**Website Integration Overview**](/integrate/website): Learn more about general principles for embedding your Delphi on any website.
*   [**Data Security & Ownership**](/data-security-and-ownership): Understand how Delphi handles data and the importance of configuring allowed websites.
*   [**Improve Your Delphi**](/user-experience/improve-clone): Tips and strategies for enhancing your Delphi's knowledge and response quality.
*   [**Integrate with Thinkific**](/integrate/thinkific): Instructions for integrating Delphi with another popular course platform.


--------------------------------------------------------------------------------
title: "Free Usage - Delphi"
description: "This documentation provides a comprehensive guide to configuring 'Free Usage' for your Delphi AI instances, a crucial feature for user acquisition and engagement. By offering a free trial or a limited..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/monetize/free"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Free Usage - Delphi

This documentation provides a comprehensive guide to configuring "Free Usage" for your Delphi AI instances, a crucial feature for user acquisition and engagement. By offering a free trial or a limited free tier, you can allow potential users to experience the value and capabilities of your Delphi AI without an immediate financial commitment, thereby encouraging adoption and conversion to paid plans.

This page details the steps to set up free allowances for various communication mediums, explains the different options available (Disabled, Metered, Unlimited), and offers best practices for integrating free usage into your overall monetization strategy. It is designed to help you effectively balance user accessibility with sustainable revenue generation within the larger Delphi ecosystem.

---

## Free Usage Overview {#free-usage-overview}

The "Free Usage" feature in Delphi enables you to offer a trial period or a limited free tier for your Delphi AI instances. This strategy is crucial for user acquisition, allowing potential users to experience the value of a Delphi AI without an immediate financial commitment. By providing a sample of the AI's capabilities, businesses can demonstrate its utility and encourage conversion to paid plans.

This documentation outlines the process of configuring free usage allowances, detailing the available options for various communication mediums and offering best practices to optimize your monetization strategy. It integrates seamlessly with Delphi's existing monetization models, including [Pay-As-You-Go](/monetize/payg) and [Memberships](/monetize/memberships), providing a flexible approach to user engagement and revenue generation.

## Prerequisites {#prerequisites}

Before you can configure free usage allowances for your Delphi instance, you must first establish a monetization strategy. This involves setting up either a [Pay-As-You-Go](/monetize/payg) model or a [Membership](/monetize/memberships) plan. Additionally, a payment account must be linked through Stripe to enable the processing of transactions once the free allowance is exhausted or a paid plan is activated.

*   **Monetization Model:** Choose between usage-based (Pay-As-You-Go) or subscription-based (Memberships) pricing.
*   **Stripe Integration:** Ensure your Stripe account is properly connected to your Delphi instance to manage payments. This integration is typically part of the initial setup for either Pay-As-You-Go or Memberships.

## Configuring Free Usage Allowances {#configuring-free-usage-allowances}

Configuring free usage allowances is performed within the **Advanced** settings of your Delphi instance. This section allows you to define the extent to which users can interact with your Delphi AI without incurring charges.

To access and modify these settings:

1.  Navigate to your Delphi Studio.
2.  From the left-hand navigation menu, select **Using Delphi**, then **Advanced**.
3.  Within the **Advanced** tab, locate the **Usage Limits** section.
4.  Click the `Edit` button next to **Usage Limits** to open the configuration panel.
5.  Scroll down to the **Free Allowance** section.

### Understanding Free Allowance Options {#understanding-allowance-options}

For each communication medium supported by your Delphi instance, you can select one of three allowance options:

*   **Disabled:** This option completely prevents the specified communication medium from being available for free. Users will be prompted for payment immediately if they attempt to use this medium. This is suitable for premium features or channels you wish to monetize exclusively.
    *   *Example:* If "Call" is disabled, users cannot make free calls to your Delphi AI; they must subscribe or pay per call.
*   **Metered:** This option allows for a capped amount of free usage for a specific communication medium. Once the predefined limit is reached, users will be required to pay for further access, based on your configured [Pay-As-You-Go](/monetize/payg) or [Membership](/monetize/memberships) plans. You will need to specify the exact limit (e.g., number of messages, minutes, or interactions).
    *   *Example:* Setting "SMS" to "Metered" with a limit of 10 messages means users can send 10 free SMS messages. After the 10th message, they will be prompted to pay.
*   **Unlimited:** This option allows users to engage with your Delphi AI via the specified communication medium without any paywall. This is ideal for core functionalities you want to offer freely to maximize engagement, or for promotional periods.
    *   *Example:* Setting "Chat" to "Unlimited" means users can have endless chat conversations with your Delphi AI without ever being charged for chat interactions.

### Communication Mediums {#communication-mediums}

The specific communication mediums available for configuration typically include:

*   **SMS:** Text message interactions.
*   **Call:** Voice interactions.
*   **Chat:** Web-based or in-app chat interactions.

The exact list may vary based on your Delphi instance's setup and integrated channels.

## Best Practices and Considerations {#best-practices-and-considerations}

Implementing a free usage strategy requires careful consideration to balance user acquisition with sustainable monetization.

### Balancing Free Access with Monetization {#balancing-free-access-with-monetization}

*   **Define Clear Value:** Ensure the free tier provides enough value to demonstrate the Delphi AI's capabilities and entice users to upgrade, without giving away so much that there's no incentive to pay.
*   **Strategic Metering:** For "Metered" options, set limits that allow for a meaningful trial experience but are low enough to encourage conversion. Analyze typical user engagement patterns to determine appropriate thresholds.
*   **Premium Features:** Consider disabling free access for advanced or high-cost features, reserving them exclusively for paid tiers.

### User Experience Implications {#user-experience-implications}

*   **Transparency:** Clearly communicate the free usage limits to users upfront. This can be done through in-app notifications, welcome messages, or a dedicated pricing page.
*   **Graceful Transitions:** When a user approaches or reaches their free limit, provide clear and timely notifications. Guide them smoothly towards payment options or upgrades, explaining the benefits of continued access.
*   **Feedback Loops:** Monitor user feedback regarding free usage limits. Are users finding the free tier too restrictive or too generous? Adjust allowances based on user behavior and feedback.

### Monitoring and Analytics {#monitoring-and-analytics}

While not directly configured on this page, it's crucial to monitor the performance of your free usage strategy.
*   **Conversion Rates:** Track how many free users convert to paid users.
*   **Usage Patterns:** Analyze which communication mediums are most heavily used in the free tier and how quickly users hit their limits.
*   **Churn Rates:** Understand if users are abandoning your Delphi after exhausting their free allowance.
Leverage Delphi's analytics tools (if available, or integrate with external analytics) to gain insights into user behavior.

### Testing Your Free Usage Configuration {#testing-your-free-usage-configuration}

Before launching your free usage model to a wider audience, thoroughly test the configuration.
*   **Simulate User Journeys:** Create test accounts and simulate different user interactions to ensure limits are enforced correctly and payment prompts appear as expected.
*   **Verify Notifications:** Confirm that users receive appropriate notifications when approaching or exceeding limits.
*   **Payment Flow:** Test the transition from free to paid usage, ensuring the payment process (via Stripe) is seamless and error-free. Refer to the [Testing](/build/testing) documentation for general testing best practices.


--------------------------------------------------------------------------------
title: "Promote Products - Delphi"
description: "This documentation outlines how to leverage Delphi's 'Promote Products' feature to seamlessly integrate product, service, or event promotions into your Delphi Clone's conversations. This powerful capa..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/engage/promote"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Promote Products - Delphi

This documentation outlines how to leverage Delphi's "Promote Products" feature to seamlessly integrate product, service, or event promotions into your Delphi Clone's conversations. This powerful capability allows your Clone to intelligently identify opportunities to introduce relevant offerings to users, acting as an automated upsell and engagement tool.

By configuring specific products with descriptions, links, keywords, and frequency settings, you empower your Delphi Clone to proactively promote your offerings without requiring constant manual intervention. This not only enhances user engagement by providing timely and relevant information but also significantly reduces the time and effort traditionally associated with sales and marketing efforts, allowing your Clone to work for you 24/7.

---

## Table of Contents
*   [Introduction to Product Promotion](#introduction-to-product-promotion)
*   [Adding a New Product](#adding-a-new-product)
    *   [Product Details](#product-details)
    *   [Keywords and Frequency](#keywords-and-frequency)
*   [Best Practices for Effective Promotion](#best-practices-for-effective-promotion)
*   [Related Features and Further Reading](#related-features-and-further-reading)

---

## Introduction to Product Promotion {#introduction-to-product-promotion}

The "Promote Products" feature within Delphi enables your AI Clone to intelligently weave promotional messages into its natural conversations with users. This extends beyond physical goods to encompass a wide array of offerings, including services, events, digital programs, affiliations, or any other relevant offerings you wish to highlight. The core benefit is the ability for your Clone to continuously upsell and inform users about your offerings, operating efficiently without incurring additional time costs.

This functionality is designed to be highly customizable, allowing you to define exactly what is promoted, how it's described, when it's introduced, and how frequently it appears in user interactions.

## Adding a New Product {#adding-a-new-product}

To begin promoting your offerings, you must first define them within the Delphi platform.

1.  **Navigate to Promote Products:** From your Delphi Studio, go to the **Advanced** section in the left-hand navigation and select **Promote Products**.
2.  **Initiate Product Creation:** Click the **'Add Product'** button located at the top right of the page. This will open a form where you can define your new product.

### Product Details {#product-details}

When adding a product, you will be prompted to provide several key pieces of information that help your Clone understand and present the offering effectively.

*   **Image:** Upload a relevant image for your product. This image will be displayed alongside the promotional message, providing a visual cue for the user.
    *   **Technical Detail:** Ensure images are clear and representative. Recommended aspect ratios and file sizes are typically optimized for web display to ensure fast loading times.
*   **Title:** Provide a concise and engaging title for your product. This is the primary name your Clone will use when referring to the offering.
    *   **Example:** "Delphi AI Pro Subscription", "Upcoming Webinar: AI for Business Growth", "Exclusive E-book: Mastering Your Delphi Clone"
*   **Link:** Include a direct URL to the intended product page, service landing page, event registration, or any other relevant destination. This link will be embedded in the conversation, allowing users to easily click through for more information or to make a purchase.
    *   **Best Practice:** Always use a full, valid URL (e.g., `https://www.yourwebsite.com/product-page`). Consider using UTM parameters in your links to track the effectiveness of promotions originating from your Delphi Clone.
*   **Description:** Provide a comprehensive description of the goods, services, or event. This text is crucial as it gives your Delphi Clone the necessary context and details to accurately and compellingly describe the product in conversation. The more detailed and informative the description, the better your Clone can articulate its value.
    *   **Example:** "The Delphi AI Pro Subscription unlocks advanced features including unlimited custom actions, priority support, and access to exclusive beta features. Designed for businesses looking to scale their AI capabilities and integrate deeply with their existing workflows. Subscribe today to elevate your AI experience."
    *   **Technical Detail:** The AI processes this description to generate natural language responses. Focus on benefits, key features, and unique selling points. Avoid jargon where possible, or explain it clearly.

### Keywords and Frequency {#keywords-and-frequency}

These settings dictate when and how often your product is promoted.

*   **Keywords:** Set a list of keywords or phrases that, when detected in a user's conversation, will trigger the introduction of your product.
    *   **Technical Detail:** The Delphi Clone's natural language processing (NLP) engine monitors user input for these keywords. The more relevant and varied your keywords, the more opportunities your Clone will have to promote the product naturally.
    *   **Example:** For a "Delphi AI Pro Subscription": `["upgrade", "premium features", "advanced AI", "more capabilities", "subscription", "pricing", "scale business"]`
    *   **Best Practice:**
        *   **Specificity:** Use keywords directly related to the product.
        *   **Variety:** Include synonyms and related concepts.
        *   **User Intent:** Think about what a user might ask or say if they were interested in this type of offering.
        *   **Avoid Overlap:** Be mindful of keywords that might trigger multiple products or conflict with other AI responses.
*   **Frequency:** You have granular control over how often the product is mentioned in conversations. Select the option that best aligns with your promotional strategy and user experience goals. Common frequency options might include:
    *   **Always:** Promote the product every time a keyword is detected. (Use with caution to avoid spamming users.)
    *   **Often:** Promote frequently, but with some internal logic to prevent immediate repetition.
    *   **Sometimes:** Promote occasionally when keywords are detected, balancing promotion with general conversation.
    *   **Rarely:** Promote only on specific, infrequent occasions, even if keywords are present.
    *   **Once per conversation:** Promote only once per unique user session, regardless of how many times keywords are mentioned.
    *   **Best Practice:** Balance visibility with user experience. Over-promotion can lead to user frustration, while under-promotion might miss opportunities. Start with a moderate frequency and adjust based on user feedback and engagement metrics.

## Best Practices for Effective Promotion {#best-practices-for-effective-promotion}

To maximize the effectiveness of your product promotions through Delphi, consider the following best practices:

*   **Contextual Relevance:** Ensure your keywords and product descriptions align perfectly with the product's value proposition. The more relevant the promotion is to the user's current conversation, the higher the likelihood of engagement.
*   **Clear Value Proposition:** Your product title and description should immediately convey the benefit to the user. Why should they care? What problem does it solve?
*   **Concise and Actionable:** While descriptions should be comprehensive for the AI, the actual conversational output should be concise. The link should be clear and lead directly to the next step.
*   **Monitor and Iterate:** Regularly review the performance of your promoted products. While Delphi doesn't explicitly show analytics on this page, you can infer success by monitoring traffic to your product links (e.g., via Google Analytics or UTM parameters). Adjust keywords, descriptions, and frequency based on what resonates best with your audience.
*   **Complementary to Other Features:** Promotions work best when integrated into a holistic user experience. Consider how they complement your [Actions](/using-delphi/advanced/actions) or [Alerts](/engage/alerts).

## Related Features and Further Reading {#related-features-and-further-reading}

The "Promote Products" feature is a key component of Delphi's advanced capabilities for engaging users and driving specific outcomes. Explore these related sections for a more comprehensive understanding:

*   **Actions:** Learn how to define specific tasks or integrations your Delphi Clone can perform, which can be linked to product promotions. See [Actions](/using-delphi/advanced/actions).
*   **Alerts:** Understand how to configure your Clone to send proactive notifications or alerts, which can also be used to announce new products or special promotions. See [Alerts](/engage/alerts).
*   **Monetization Features:** For a broader understanding of how Delphi can help you generate revenue, explore the dedicated monetization sections:
    *   [Memberships](/monetize/memberships)
    *   [Pay-As-You-Go](/monetize/payg)
    *   [Free Usage](/monetize/free)
*   **Using Delphi Overview:** For a general guide on leveraging your Delphi Clone's capabilities, refer to the [Using Delphi Overview](/build/overview).


--------------------------------------------------------------------------------
title: "Pay-As-You-Go - Delphi"
description: "This documentation outlines the process of setting up and managing Pay-As-You-Go (PAYG) pricing for your Delphi AI. The PAYG model offers a flexible monetization strategy, allowing your users to pay o..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/monetize/payg"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Pay-As-You-Go - Delphi

This documentation outlines the process of setting up and managing Pay-As-You-Go (PAYG) pricing for your Delphi AI. The PAYG model offers a flexible monetization strategy, allowing your users to pay only for the specific services they consume, such as text messages, voice calls, or video interactions, without the commitment of a recurring subscription. This approach is ideal for attracting users who prefer a non-committal payment option or have variable usage patterns.

By implementing Pay-As-You-Go, you can ensure that every interaction with your Delphi contributes to your revenue, providing a direct correlation between the value delivered and your earnings. This guide will walk you through connecting your payment provider, configuring your usage rates, and understanding how billing is processed for your users.

---

## [Overview of Pay-As-You-Go](#overview-of-pay-as-you-go)
The Pay-As-You-Go (PAYG) pricing model in Delphi provides a flexible monetization option that allows your users to pay only for the specific services they consume, without requiring a recurring subscription. This model is particularly beneficial for users with variable usage patterns or those who prefer to avoid long-term commitments. For you, the Delphi creator, PAYG ensures that every interaction, whether a text message, voice call, or video session, contributes to your revenue, offering a direct correlation between usage and earnings.

Key benefits of the PAYG model include:
*   **Flexibility for Users:** No subscriptions, users pay only for what's used.
*   **Accessibility:** A lower barrier to entry can attract a wider user base.
*   **Direct Monetization:** Earn revenue for every message and minute of interaction.
*   **Transparent Billing:** Users are clearly invoiced based on their consumption.

## [Prerequisites: Connecting Your Payment Account](#prerequisites-connecting-your-payment-account)
Before you can enable Pay-As-You-Go pricing for your Delphi, you must establish a secure connection to a payment processing platform. Delphi currently supports **Stripe** as the sole payment provider for receiving payments from your users. Stripe is a robust and widely-used platform known for its secure payment processing and comprehensive financial tools.

To connect your Stripe account:
1.  Navigate to the **Monetization** section within your Delphi Studio.
2.  Locate the **Pay-As-You-Go Pricing** option.
3.  Select the `Get Started with Stripe` button.
4.  You will be redirected to Stripe's secure portal to either log in to an existing account or create a new one. Follow the on-screen prompts to complete the connection process, which typically involves verifying your business details and linking a bank account for payouts.

**Technical Details:**
Delphi leverages Stripe Connect to facilitate these transactions, ensuring that your users' payment information is handled securely by Stripe, not directly by Delphi. This architecture minimizes your compliance burden while providing a reliable payment gateway. Once connected, Stripe will manage the collection of payments from your users and facilitate payouts to your designated bank account, subject to Stripe's terms and processing fees.

## [Configuring Pay-As-You-Go Pricing](#configuring-pay-as-you-go-pricing)
Once your Stripe account is successfully linked, you can proceed to activate and configure your Pay-As-You-Go pricing model within Delphi. This involves setting specific rates for different types of interactions.

### [Accessing Monetization Settings](#accessing-monetization-settings)
1.  From your Delphi Studio dashboard, navigate to the **Access** tab.
2.  Under the **Monetization** section, find **Pay-As-You-Go Pricing**.
3.  Click the `Add` button next to **Pay-As-You-Go Pricing** to initiate the setup.

### [Setting Usage Rates](#setting-usage-rates)
On the configuration screen, you will be presented with options to activate usage-based pricing and define your rates:

1.  **Activate Usage-Based Pricing:** Toggle this option to `On` to enable the Pay-As-You-Go model for your Delphi.
2.  **Set Costs:** Define the pricing for each interaction type:
    *   **Messages:** Enter the cost per text message. This applies to all text-based interactions with your Delphi.
        *   *Example:* If you set this to `$0.05`, a user sending 10 messages will be charged `$0.50`.
    *   **Voice Minutes:** Enter the cost per minute for voice calls. This rate applies to the duration of voice interactions.
        *   *Example:* Setting this to `$0.20` means a 5-minute voice call will cost the user `$1.00`.
    *   **Video Minutes:** Enter the cost per minute for video calls. This rate applies to the duration of video interactions.
        *   *Example:* Setting this to `$0.30` means a 10-minute video call will cost the user `$3.00`.

    *Refer to the screenshot below for a visual representation of these settings:*
    ![Analytics](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/monetize-payg-1.png)

3.  **Save Changes:** After setting your desired rates, ensure you save your configuration to apply the new pricing model.

## [Understanding Billing and Invoicing](#understanding-billing-and-invoicing)
With Pay-As-You-Go pricing enabled, users will be charged based on their consumption of your Delphi's services.

*   **Text Messages:** Charges for text messages are typically accumulated and charged periodically (e.g., at the end of a session or day), depending on Delphi's internal billing cycles.
*   **Voice and Video Calls:** For voice and video interactions, users will be invoiced *after their conversations conclude*. This ensures that the total duration of the call can be accurately calculated and charged. The accumulated cost will be presented to the user, and their linked payment method (via Stripe) will be charged accordingly.

Users will typically see their accumulated usage and costs within their Delphi user interface, providing transparency regarding their spending.

## [Best Practices for Pay-As-You-Go](#best-practices-for-pay-as-you-go)
To maximize the effectiveness of your Pay-As-You-Go model and ensure a positive user experience:

*   **Transparent Pricing:** Clearly communicate your per-message and per-minute rates to your users. Transparency builds trust and helps users manage their expectations regarding costs.
*   **Competitive Rates:** Research similar services or AI interactions to set competitive prices. Overpricing can deter users, while underpricing might undervalue your Delphi.
*   **Monitor Usage Patterns:** Regularly review user engagement and usage data. This can help you identify peak usage times, popular interaction types, and inform potential adjustments to your pricing strategy.
*   **Consider Free Tiers/Promotions:** While PAYG is flexible, consider offering a small amount of [Free Usage](/monetize/free) or promotional credits to new users to encourage initial engagement without immediate cost.
*   **User Notifications:** If possible, implement mechanisms to notify users when they are approaching certain spending thresholds, especially for longer voice or video calls, to prevent bill shock.

## [Integrating with Other Monetization Models](#integrating-with-other-monetization-models)
The Pay-As-You-Go model can be used independently or in conjunction with other monetization strategies offered by Delphi.

*   **Memberships:** If you wish to offer a subscription-based model with unlimited usage or premium features, refer to our comprehensive guide on [Memberships](/monetize/memberships). You might offer PAYG as an alternative for casual users, while memberships cater to power users.
*   **Free Usage:** You can also configure a [Free Usage](/monetize/free) tier alongside PAYG, allowing users a certain number of free messages or minutes before PAYG rates apply. This is an excellent way to onboard new users and demonstrate the value of your Delphi.

By strategically combining these models, you can create a flexible and appealing monetization ecosystem that caters to a diverse user base.


--------------------------------------------------------------------------------
title: "Bringing Your Delphi to the World - Delphi"
description: "This document provides comprehensive guidance on making your Delphi AI accessible to your target audience, integrating it into various platforms, and leveraging its capabilities to achieve diverse obj..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/sharing-your-delphi"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Bringing Your Delphi to the World - Delphi

This document provides comprehensive guidance on making your Delphi AI accessible to your target audience, integrating it into various platforms, and leveraging its capabilities to achieve diverse objectives. It covers methods for publishing your Delphi, embedding it into your existing web properties, and connecting it with popular communication and collaboration tools.

Whether you aim to provide personalized coaching, automate customer support, or streamline internal team knowledge, this guide offers the technical details and best practices necessary to deploy your Delphi effectively and maximize its impact across different digital environments.

---

## <a id="share-your-delphi"></a>Share Your Delphi

Making your Delphi accessible is the first step to leveraging its power. Delphi offers flexible options to share your AI, catering to different privacy and integration needs.

### Publish on Delphi

This option makes your Delphi publicly available on the Delphi platform, allowing anyone to discover and interact with it. It's ideal for creators and businesses looking to maximize visibility and reach a broad audience directly through the Delphi ecosystem.

*   **Public Accessibility:** Your Delphi will have a dedicated URL on `delphi.ai`, making it searchable and shareable.
*   **Custom Handle:** You can choose a unique, memorable handle (e.g., `delphi.ai/your-handle`) to represent your AI, enhancing brand recognition.
*   **Best Practices:**
    *   Ensure your Delphi's knowledge base is comprehensive and accurate, as it will be exposed to a wide audience.
    *   Regularly monitor interactions and refine your Delphi's responses to improve user experience.
    *   Consider the public nature of the content your Delphi will provide.

### Embed on Your Website

Integrating your Delphi directly into your existing website provides a seamless user experience, keeping your audience on your platform while benefiting from Delphi's capabilities. This method is highly recommended for businesses, educators, and content creators who want to enhance their web presence with AI-powered interactions.

Delphi offers dedicated support for popular website builders, simplifying the embedding process:
*   **Supported Platforms:** Kajabi, Mighty Networks, Thinkific, Wix.
*   **Integration Options:**
    *   **Built-in Experience (Full Functionality):** Embeds the Delphi interface directly into a page, providing a comprehensive, interactive experience. This is typically achieved via an `<iframe>` or a dedicated JavaScript snippet that renders the full chat interface.
    *   **Chat Bubble (Bottom Right Corner):** A more subtle integration, appearing as a small icon or bubble in the corner of your website. Clicking it expands the chat interface. This is usually implemented with a JavaScript widget that loads asynchronously, minimizing impact on page load times.
*   **Technical Details:**
    *   Embedding typically involves copying a provided HTML snippet (usually a `<script>` tag or `<iframe>`) and pasting it into the HTML of your website where you want the Delphi to appear.
    *   For chat bubbles, the script is often placed just before the closing `</body>` tag to ensure it loads after the main content.
    *   **Customization:** Depending on the embedding method, you may have options to customize the appearance (colors, branding) of the embedded Delphi to match your website's design.
*   **Best Practices:**
    *   Test the embedded Delphi across different devices and screen sizes to ensure responsiveness.
    *   Monitor website performance after embedding to ensure it doesn't negatively impact load times.
    *   Clearly communicate to your users that they are interacting with an AI.
*   **Cross-reference:** For detailed instructions on website integration, refer to the [Website Integration Guide](/integrate/website).

### Invite-Only Access

For exclusive content, private groups, or controlled beta testing, invite-only access allows you to grant access to specific individuals via email without making your Delphi publicly available.

*   **Exclusivity:** Only users who receive and accept an invitation can interact with your Delphi.
*   **Controlled Distribution:** Ideal for premium content, internal team knowledge bases, or pilot programs where user access needs to be managed precisely.
*   **Technical Details:**
    *   Invitations are typically managed through the Delphi Studio's user management interface, where you can enter email addresses and send unique access links.
    *   Users may be required to create a Delphi account or log in to access the invited Delphi.
*   **Best Practices:**
    *   Clearly define the purpose and scope of the invite-only Delphi to your invited users.
    *   Regularly review your invited user list to ensure only authorized individuals have access.
    *   Consider setting up different [Instances](/build/instances) of your Delphi for various invite-only groups if content needs to be segmented.

---

## <a id="use-your-delphi"></a>Use Your Delphi

Your Delphi is a versatile tool capable of fulfilling multiple roles, adapting to your specific needs and objectives. Its core strength lies in its ability to deliver personalized, scalable interactions.

*   **Coach and Mentor:** Deliver personalized, interactive guidance, mirroring the experience of one-on-one coaching. This can include answering questions, providing advice, and guiding users through learning paths.
*   **Earn You Money:** Implement membership tiers or pay-per-access models, allowing you to monetize exclusive access to your Delphi's expertise or content. This typically involves integration with payment gateways and user authentication systems.
*   **Handle Customer Support:** Automate responses to frequently asked questions (FAQs), guide users through purchase processes, and provide 24/7 assistance, significantly reducing the load on human support teams.
*   **Align Your Team:** Act as a central knowledge hub for internal teams, ensuring everyone has access to consistent, up-to-date information, policies, and procedures. This fosters better internal communication and reduces information silos.
*   **And More:** The applications of Delphi are vast and scale with your imagination. From interactive storytelling to personal assistants, your Delphi can be tailored to almost any interactive need.

**Inspiration:** To see how other creators and businesses are leveraging Delphi, explore the [Delphi AI Showcase](https://www.delphi.ai/explore).

---

## <a id="work-your-delphi"></a>Work Your Delphi

Extend the reach and utility of your Delphi by integrating it with popular messaging platforms and live meeting tools, making it an active participant in your daily workflows.

### <a id="telegram-integration"></a>Telegram Integration

Integrate your Delphi with Telegram to enable it to respond to questions and interact with users directly within Telegram chats. This is ideal for community management, automated support, or delivering content to a Telegram audience.

*   **Functionality:** Your Delphi can act as a Telegram bot, responding to direct messages or participating in group chats.
*   **Technical Details:**
    *   Requires setting up a Telegram Bot via BotFather and obtaining an API token.
    *   This token is then configured within your Delphi settings to establish the connection.
    *   Delphi will listen for messages directed at its bot and process them using its knowledge base.
*   **Best Practices:**
    *   Clearly define the bot's purpose and capabilities to users.
    *   Consider setting up specific commands for your Delphi to respond to (e.g., `/help`, `/faq`).
    *   Monitor bot interactions to refine its responses and ensure it's providing accurate information.
*   **Cross-reference:** For general information on connecting Delphi to external services, see [External Integrations](/integrate/external).

### <a id="slack-integration"></a>Slack Integration

Bring your Delphi into your team's Slack workspace to provide instant answers, facilitate knowledge sharing, and streamline internal communication.

*   **Functionality:** Your Delphi can act as a Slack app, responding to questions in channels or direct messages, acting as a central knowledge base for your team.
*   **Technical Details:**
    *   Involves creating a Slack App in your workspace and configuring permissions (e.g., `chat:write`, `channels:read`).
    *   You'll obtain a Bot User OAuth Token and a Signing Secret, which are then configured in your Delphi settings.
    *   Delphi can be configured to listen for mentions (`@YourDelphi`) or specific keywords in designated channels.
*   **Best Practices:**
    *   Use Delphi to answer common internal FAQs, onboarding questions, or provide quick access to company policies.
    *   Ensure your Delphi's knowledge base is kept up-to-date with relevant internal information.
    *   Educate your team on how to best interact with the Delphi bot.
*   **Cross-reference:** For general information on connecting Delphi to external services, see [External Integrations](/integrate/external).

### <a id="zoom-integration"></a>Zoom Integration

Have your Delphi participate in live meetings and events on Zoom, enhancing discussions and automating post-meeting tasks.

*   **Functionality:** Your Delphi can join Zoom meetings as a chat participant (responding to questions in the chat) or even as a video avatar representing you, providing a virtual presence. It can also summarize meeting notes.
*   **Technical Details:**
    *   Requires integrating Delphi as a Zoom App, which involves OAuth authentication and granting necessary permissions (e.g., `meeting:read`, `chat_message:read`, `recording:read`).
    *   For video avatar functionality, advanced configurations and potentially a dedicated virtual camera setup might be required.
    *   Meeting summaries are typically generated by processing the meeting transcript or chat logs.
*   **Best Practices:**
    *   Use Delphi to answer live questions during webinars or presentations, freeing up the human presenter.
    *   Leverage its summarization capabilities to quickly disseminate key takeaways after meetings.
    *   Inform meeting participants that an AI is present to manage expectations.
*   **Cross-reference:** For general information on connecting Delphi to external services, see [External Integrations](/integrate/external).

---
[Previous: Onboarding](/onboarding) | [Next: Data Security & Ownership](/data-security-and-ownership)


--------------------------------------------------------------------------------
title: "Phone - Delphi"
description: "This document provides comprehensive technical details for integrating a phone number with your Delphi AI, enabling communication via SMS, WhatsApp, and traditional voice calls. It covers the setup pr..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/phone"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Phone - Delphi

This document provides comprehensive technical details for integrating a phone number with your Delphi AI, enabling communication via SMS, WhatsApp, and traditional voice calls. It covers the setup process, configuration options, and an in-depth explanation of the credit system for both texting and calling.

By giving your Delphi a phone number, you empower your audience to interact with it in a native and accessible way, extending its reach beyond web interfaces. This integration transforms your Delphi into a versatile communication channel, capable of providing instant support, delivering information, or engaging in conversational interactions directly through familiar mobile communication tools.

---

## Integrate Your Delphi with a Phone Number {#integrate-phone-number}

Integrating a phone number with your Delphi allows your audience to interact with it natively through SMS, WhatsApp, and traditional phone calls. This capability significantly broadens your Delphi's accessibility and utility.

## Setting Up Your Phone Number {#setting-up-phone-number}

The process of acquiring and setting up a dedicated phone number for your Delphi is initiated within your Delphi Studio. This involves a registration process to ensure compliance and proper service delivery.

**Steps to Register a Phone Number:**

1.  **Navigate to Phone Integration:** In your Delphi Studio, access the `Integrate My Delphi` section from the left-hand navigation menu, then select `Phone`.
2.  **Initiate Setup:** Click on the `Get Started` button to begin the phone number registration process.
3.  **Configure Location and Entity Type:**
    *   **Set your country location:** This selection is crucial as it determines the available phone number types and the specific regulatory requirements for your region.
    *   **Designate yourself as a Business or Individual/Sole Proprietor:** This classification is required for compliance with telecommunication regulations and may affect the documentation needed for your application.
4.  **Select Phone Number Type:** Choose the type of phone number that best suits your use case. Options may include local numbers, toll-free numbers, or mobile numbers, each with different characteristics and pricing.
5.  **Complete the Application:** Provide all necessary information as prompted by the application form. This may include business details, personal identification, and proof of address, depending on your country and the chosen entity type. Ensure all information is accurate and complete to avoid delays.

**Application Timeline and Approval:**

The approval process for a new phone number can vary significantly depending on the country, the type of number requested, and the completeness of your application. Typically, this process can take anywhere from **3 to 30 days**. Delphi will notify you directly once your phone number has been approved and is ready for activation.

**Important Note on Broadcasting Capabilities:**

It is crucial to understand that obtaining a phone number for your Delphi **does not automatically grant broadcasting capabilities**. If your intention is to send mass messages or initiate outbound campaigns to a contact list, you must purchase the **Broadcast Add-On**. For more comprehensive details on managing outbound communication and user interactions via SMS, please refer to the [Texting and Calling](/user-experience/sms-guide) guide.

## Phone Settings Configuration {#phone-settings-configuration}

Once your dedicated phone number has been successfully set up and approved, you gain access to a suite of settings that allow you to customize your Delphi's communication behavior and user experience. These settings control how your Delphi interacts via SMS, WhatsApp, and voice calls.

To access these settings, navigate to `Integrate My Delphi` > `Phone` in your Delphi Studio.

**Available Phone Settings:**

*   **Enable / Disable SMS communication:** This toggle controls whether your Delphi can send and receive text messages. Disabling this will prevent any SMS interactions.
*   **Enable / Disable WhatsApp:** Activate or deactivate the integration with WhatsApp. When enabled, users can interact with your Delphi via WhatsApp messages using the assigned phone number.
*   **Enable / Disable phone calling:** This setting dictates whether your Delphi can engage in traditional voice calls.
    *   **Requirement:** For voice calling to be enabled and functional, you **must have a voice sample uploaded** for your Delphi. This sample is essential for generating your Delphi's unique voice during calls. For detailed instructions on uploading and improving your Delphi's voice and overall clone quality, please consult the [Improve Clone](/user-experience/improve-clone) documentation.
*   **Pause responses:** When this option is enabled, your Delphi will temporarily cease to automatically respond to incoming messages (e.g., SMS broadcasts). Users can still send messages, but your Delphi will not generate an automated reply until this setting is disabled. This feature is particularly useful for managing specific campaigns, during maintenance periods, or when you need manual oversight of interactions.

**Best Practices for Settings Configuration:**

*   **Test Thoroughly:** After making any adjustments to your phone settings, always perform comprehensive testing to ensure your Delphi behaves as expected across all enabled communication channels.
*   **Align with User Experience:** Configure your settings to align with the intended user experience. If voice calls are a primary interaction method, ensure a high-quality voice sample is uploaded and the voice model is optimized.
*   **Communicate Clearly:** Inform your users about which communication channels are active for your Delphi to manage their expectations and guide them to the appropriate interaction methods.

## Understanding SMS and Call Credits {#understanding-credits}

Interactions with your Delphi via its dedicated phone number consume specific credits, which are tracked and reset on a monthly basis according to your Delphi plan. A clear understanding of how these credits are calculated is crucial for managing your usage effectively and optimizing your Delphi's performance.

### SMS Texting Credits {#sms-texting-credits}

SMS texting usage is primarily calculated based on "segments." Both SMS Text credits and standard messaging credits are consumed during these interactions.

*   **What is a Segment?** One SMS credit is equivalent to **1 segment**. A single segment typically contains up to **150 characters** for standard GSM encoding. Messages exceeding this character limit will be automatically split into multiple segments, with each segment consuming one SMS credit.
*   **Credit Calculation:** The total SMS credits used for a single interaction are calculated by summing the segments of the inbound message from the user and the outbound response from your Delphi.
*   **Example:**
    *   A user sends a question that is 1 segment long.
    *   Your Delphi provides a response that is 3 segments long.
    *   **Total SMS Credits Used:** 1 (inbound user message) + 3 (outbound Delphi response) = **4 SMS Credits**.
    *   **Total Message Credits Used:** 1 (standard message for a complete response interaction).

**Monthly SMS Texting Credits by Plan:**

| Plan     | Credits (per month) |
| :------- | :------------------ |
| Starter  | 1,500               |
| Advanced | 6,000               |
| Prodigy  | 30,000              |

### SMS Calling Credits {#sms-calling-credits}

SMS Calling credits are consumed based on the total duration of a phone call, measured in minutes.

*   **Credit Calculation:** If a user engages in a 5-minute phone call with your Delphi, this interaction will count as **5 SMS Minutes credits**. Simultaneously, it will also count as 5 standard voice minutes toward your overall monthly voice minute total.
*   **Usage Reset:** Similar to SMS texting credits, SMS Calling credit usage resets on a monthly basis, aligning with your billing cycle.

**Monthly SMS Minutes Credits by Plan:**

| Plan     | Credits (per month) |
| :------- | :------------------ |
| Starter  | 100                 |
| Advanced | 100                 |
| Prodigy  | 1,000               |

### Best Practices for Credit Management {#credit-management-best-practices}

Effective credit management ensures uninterrupted service and optimizes your operational costs.

*   **Monitor Usage Regularly:** Periodically check your credit usage within your Delphi Studio dashboard. This allows you to track consumption patterns and anticipate potential overages before they occur.
*   **Optimize Response Conciseness:** For SMS interactions, encourage your Delphi to provide concise and direct responses to minimize segment usage. Review your Delphi's knowledge base and conversational flows to ensure efficiency in information delivery.
*   **Educate Users (If Applicable):** If your users are also charged for messages, consider informing them about potential message length impacts on their own mobile plans.
*   **Consider Plan Upgrades:** If your usage consistently approaches or exceeds your current plan's limits, evaluate upgrading to a higher-tier plan. This proactive step can accommodate your growing needs and prevent service interruptions due to credit exhaustion.
*   **Streamline Call Flows:** For voice calls, design your Delphi's conversational flows to resolve user queries efficiently. Shorter, more direct call durations will help conserve SMS Calling credits.


--------------------------------------------------------------------------------
title: "Email Broadcasts - Delphi"
description: "This document provides technical guidance on utilizing Delphi's Email Broadcasts feature, a powerful tool for engaging your audience directly through email. It covers the process of creating, configur..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/engage/emailbroadcasts"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Email Broadcasts - Delphi

This document provides technical guidance on utilizing Delphi's Email Broadcasts feature, a powerful tool for engaging your audience directly through email. It covers the process of creating, configuring, and scheduling email campaigns, detailing how Delphi's AI-powered Clone can seamlessly continue conversations initiated by these broadcasts.

Email Broadcasts enable users to send targeted or mass email communications to their Delphi audience. This functionality is designed to facilitate proactive outreach, announcements, and engagement, with the unique advantage of leveraging your Delphi Clone to intelligently respond to recipient replies, ensuring continuous and personalized interaction.

---

## [Overview](#overview)

The Email Broadcasts feature within Delphi allows you to send one-time or scheduled email campaigns to your defined audience segments. Unlike traditional email marketing platforms, Delphi integrates its AI capabilities directly into the broadcast workflow, enabling your Delphi Clone to automatically understand and respond to recipient replies, fostering dynamic and ongoing conversations. This capability transforms static email blasts into interactive engagement opportunities.

## [Creating an Email Broadcast](#creating-an-email-broadcast)

To initiate a new email broadcast, follow these steps within the Delphi platform:

### [Accessing the Broadcast Interface](#accessing-the-broadcast-interface)

1.  Navigate to the **Engage** tab in the main navigation menu.
2.  From the left-hand sidebar, select **Broadcasts**.
3.  In the top right corner of the Broadcasts page, click the `Create New` button.

You will be presented with a template to configure your new broadcast.

### [Initiating a New Broadcast](#initiating-a-new-broadcast)

Upon clicking `Create New`, you'll need to define the fundamental parameters of your broadcast:

1.  **Medium Selection:** Choose `Email` as the broadcast medium. This ensures the system configures the appropriate fields for email delivery.
2.  **Broadcast Name:** Assign a descriptive name to your email broadcast. This name is for internal identification purposes only and will help you easily locate and manage the broadcast later within your Delphi dashboard.
    *   **Example:** "Q3 Newsletter - August 2024", "Product Update - New Feature X", "Welcome Series - Email 1"

### [Defining Your Audience](#defining-your-audience)

Accurately defining your target audience is crucial for effective communication. The Email Broadcasts interface provides flexible options for audience selection:

*   **To:** This field specifies the primary recipients of your email. You can select one of the following options:
    *   **Entire Distribution:** Sends the email to all users currently within your Delphi audience. Use this for broad announcements or general newsletters.
    *   **Users with Specific Tags:** Targets users who have been assigned one or more specific tags. This is ideal for segmented campaigns based on user interests, demographics, or engagement levels.
        *   **Example:** To send an email to users interested in "Product A" and "Beta Testers", you would select both tags.
        *   **Cross-reference:** For more information on managing and applying tags to your audience, refer to the [Audience/Conversations](/engage/audience) documentation.
    *   **List of Individuals:** Allows you to manually enter or paste a list of specific email addresses. This is useful for highly targeted communications or testing.
        *   **Format:** Enter email addresses separated by commas or new lines.
        *   **Example:** `user1@example.com, user2@example.com, user3@example.com`

*   **Exclude:** This field allows you to explicitly prevent certain users or groups from receiving the email, even if they are included in the "To:" field.
    *   **Specific Tags:** Select tags whose associated users should *not* receive the email.
        *   **Example:** If your "To:" field is "Entire Distribution" but you want to exclude users tagged "Opted Out", you would add the "Opted Out" tag here.
    *   **Individuals:** Enter specific email addresses of individuals to exclude.
    *   **Important Note:** An email will only be sent to a recipient if they are included in the "To:" field *and* not listed in the "Exclude:" field. If a group or individual is not included in the "To:" field, an email will not be sent to them regardless of the "Exclude:" field.

**Best Practice: Audience Segmentation**
Leverage Delphi's tagging system to create highly targeted email campaigns. Segmenting your audience based on their interactions, preferences, or demographic data can significantly improve engagement rates and the relevance of your communications. Regularly review and update your tags for optimal audience management.

### [Configuring Reply-to and Personalization](#configuring-reply-to-and-personalization)

These settings enhance the professionalism and effectiveness of your email broadcasts:

*   **Reply to:**
    *   **Purpose:** Specify an email address where replies to your broadcast should be directed. If left blank, replies will typically go to the default sender address configured for your Delphi instance.
    *   **Technical Detail:** This setting configures the `Reply-To` header in the email, ensuring that when a recipient clicks "Reply," their email client addresses the response to the specified address.
    *   **Best Practice:** Use an email address that is actively monitored, especially if you anticipate direct human follow-up for certain types of replies. For AI-driven conversations, ensure the Clone is configured to handle incoming replies effectively.

*   **Personalization Tag `{ }`:**
    *   **Functionality:** Selecting the `{ }` icon at the bottom of the email composition area allows you to insert a personalization tag (e.g., `{first_name}`). When the email is sent, this tag will be dynamically replaced with the recipient's first name, if available in their Delphi profile.
    *   **Benefits:** Personalization significantly increases engagement and makes emails feel more tailored to the individual.
    *   **Technical Detail:** If a recipient's first name data is not available, the tag will typically be replaced with a fallback (e.g., "Hi there," or simply omitted, depending on Delphi's default behavior). Ensure your audience data is as complete as possible for maximum personalization impact.

### [Composing Your Email Content](#composing-your-email-content)

The email composition area allows you to craft the subject line and body of your message. While the provided content doesn't detail the editor itself, assume a standard rich-text editor is available.

*   **Subject Line:** Craft a clear, concise, and engaging subject line to encourage opens.
*   **Email Body:** Write your message. Utilize formatting options (bold, italics, lists) and consider including calls to action (CTAs) relevant to your broadcast's goal.

### [Scheduling Your Broadcast](#scheduling-your-broadcast)

Delphi allows you to schedule your email broadcasts for future delivery:

*   **Date and Time Selection:** Use the provided calendar and time picker to select your preferred send date and time.
*   **Benefits of Scheduling:**
    *   **Strategic Planning:** Plan campaigns in advance, aligning with marketing calendars or specific events.
    *   **Optimal Send Times:** Deliver emails when your audience is most likely to engage, even if that's outside of your working hours.
    *   **Workflow Automation:** Set up recurring or sequential emails (though the page implies single broadcasts, a series could be managed by scheduling multiple).

**Best Practice: Time Zone Considerations**
Be mindful of time zones when scheduling. Delphi typically operates on a specific time zone (e.g., UTC or your account's configured time zone). If your audience is geographically dispersed, consider sending at times that are convenient for the majority, or segmenting your audience by time zone for more precise delivery.

## [Delphi's Role in Email Conversations](#delphis-role-in-email-conversations)

A key differentiator of Delphi's Email Broadcasts is the seamless integration with your Delphi Clone. After an email is sent, if a recipient replies, your Clone is designed to:

*   **Understand Context:** Analyze the content of the reply to understand the user's intent, questions, or statements.
*   **Generate Relevant Responses:** Provide an intelligent, contextually appropriate response, continuing the conversation naturally.
*   **Escalate if Necessary:** If the conversation requires human intervention or reaches a point beyond the Clone's capabilities, it can be configured to escalate to a human agent.

This capability ensures that your outreach efforts are not one-way, but rather initiate dynamic, AI-powered dialogues that can lead to deeper engagement and better outcomes.

**Cross-reference:** To monitor and manage these ongoing conversations, refer to the [Audience/Conversations](/engage/audience) section of the documentation, where you can view chat logs and intervene if needed.

## [Best Practices and Considerations](#best-practices-and-considerations)

*   **Email Deliverability:**
    *   **Sender Reputation:** Ensure your sender domain is properly authenticated (e.g., SPF, DKIM records) to improve deliverability and avoid emails being marked as spam. Consult your IT team or Delphi support for specific setup requirements.
    *   **Content Quality:** Avoid spammy keywords, excessive use of capitalization, or broken links. Maintain a good text-to-image ratio.
    *   **List Hygiene:** Regularly clean your audience list to remove invalid or inactive email addresses, which can negatively impact your sender reputation.
*   **Compliance:** Adhere to relevant email marketing regulations such as GDPR (General Data Protection Regulation) for European users and CAN-SPAM Act for US users. This includes obtaining proper consent for sending emails and providing clear opt-out mechanisms.
*   **Testing:** Always send a test email to yourself or a small internal group before sending a broadcast to your entire audience. This helps verify formatting, links, and personalization.
*   **Monitoring Performance:** While not explicitly detailed on this page, a robust email broadcast strategy includes monitoring key metrics such as open rates, click-through rates, and reply rates. Use these insights to refine future campaigns.


--------------------------------------------------------------------------------
title: "Testing - Delphi"
description: "This document outlines the essential process of testing your Delphi AI, a critical step to ensure its performance aligns with your specific requirements and intended persona. Effective testing allows ..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/build/testing"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Testing - Delphi

This document outlines the essential process of testing your Delphi AI, a critical step to ensure its performance aligns with your specific requirements and intended persona. Effective testing allows for iterative refinement, leading to a more accurate, helpful, and on-brand AI experience for your users.

The Delphi Studio provides built-in tools and recommended methodologies to facilitate comprehensive beta testing. By systematically evaluating your Delphi's knowledge retrieval, response style, and overall accuracy, you can identify areas for improvement and apply targeted adjustments, ensuring your AI clone delivers a consistent and high-quality user experience.

---

## The Importance of Testing Your Delphi {#the-importance-of-testing-your-delphi}

Testing is a fundamental phase in the development and deployment of any AI system, and your Delphi AI is no exception. Beta testing your Delphi ensures that its outputs, knowledge retrieval, and communication style accurately reflect your brand, expertise, and desired interactions. Without thorough testing, there's a risk of the AI providing inaccurate, off-brand, or unhelpful responses, which can negatively impact user experience and trust.

The primary goals of testing your Delphi include:
*   **Alignment:** Verifying that the AI's responses align with your intended direction, tone, and persona.
*   **Accuracy:** Confirming the precision and correctness of the information retrieved and presented by the AI.
*   **Consistency:** Ensuring a uniform response style and quality across a wide range of inquiries.
*   **Robustness:** Identifying and addressing edge cases or unexpected queries where the AI might falter.

## Recommended Testing Methodology {#recommended-testing-methodology}

Delphi recommends a structured approach to beta testing, primarily through conversational engagement. This method simulates real-world user interactions, providing direct insights into your Delphi's performance.

### Initial Engagement: Text-Based Conversations {#initial-engagement-text-based-conversations}

Begin your testing by engaging in natural language conversations with your Delphi via messaging (text). This allows you to directly experience how the AI processes queries and formulates responses.

**Steps:**
1.  Navigate to your Delphi's Studio interface.
2.  Access the designated chat or messaging interface for testing (often found within the "Conversations" section).
3.  Initiate a conversation as if you were a typical user.

### Key Areas to Evaluate {#key-areas-to-evaluate}

During your testing conversations, focus on evaluating the following critical aspects of your Delphi's performance:

#### Knowledge Retrieval & Accuracy {#knowledge-retrieval-accuracy}
*   **Core Knowledge:** Ask questions directly related to the data you've provided or the expertise your Delphi is designed to embody. Verify that the responses are factually correct and comprehensive.
*   **Specific Details:** Query for specific names, dates, figures, or procedures. Ensure the AI can recall and present these details accurately.
*   **Misinformation/Hallucinations:** Actively try to prompt the AI into providing incorrect information or "making things up." This helps identify gaps or biases in its training.
*   **Contextual Understanding:** Test its ability to understand nuanced questions, follow up on previous turns in a conversation, and maintain context.

#### Response Style & Tone {#response-style-tone}
*   **Persona Consistency:** Does the AI's tone, vocabulary, and overall communication style consistently match the persona you've defined (e.g., formal, friendly, authoritative, empathetic)?
*   **Clarity & Conciseness:** Are the responses easy to understand? Are they unnecessarily verbose or too brief?
*   **Grammar & Spelling:** Check for any linguistic errors that could detract from professionalism.
*   **Flow & Coherence:** Does the conversation flow naturally? Are the responses coherent and logically structured?

#### Breadth & Edge Cases {#breadth-edge-cases}
*   **Wide Range of Questions:** Test your Delphi with a diverse set of questions, including common inquiries, complex scenarios, and less frequent but important topics.
*   **Ambiguous Queries:** How does your Delphi handle vague or ambiguous questions? Does it ask for clarification, or does it make assumptions?
*   **Out-of-Scope Questions:** Ask questions that are outside the intended scope of your Delphi's knowledge. Observe how it gracefully declines to answer or redirects the conversation.
*   **Stress Testing:** Rapid-fire questions, very long questions, or questions with unusual phrasing can reveal robustness issues.

## Refining Delphi Responses {#refining-delphi-responses}

Based on your testing observations, Delphi provides mechanisms for both granular and broad adjustments to your AI's behavior.

### Micro-Adjustments: Improving Individual Responses {#micro-adjustments-improving-individual-responses}

For specific instances where your Delphi's response was not ideal, you can provide direct feedback to guide its future behavior.

**How to use "Improve Response":**
1.  During your testing conversations, navigate to the **Conversations** section within the Delphi Studio.
2.  Locate the specific chat bubble containing the response you wish to improve.
3.  At the bottom of that chat bubble, you will find an **Improve Response** option.
4.  Clicking this option allows you to provide feedback or directly edit the response. This feedback is then used to train your Delphi, helping it to provide more desirable answers in similar situations in the future.

This feature is crucial for fine-tuning your Delphi's understanding of specific phrases, nuances, or preferred phrasing for particular topics. It acts as a powerful form of supervised learning, directly influencing the AI's learning model.

*For more details on managing conversations and providing feedback, refer to the [Conversations](/build/conversations) documentation (if available).*

### Macro-Adjustments: Global Refinements {#macro-adjustments-global-refinements}

For more significant, overarching adjustments to your Delphi's behavior or persona, you should modify its global settings.

#### Modifying Style Settings {#modifying-style-settings}
The **Style settings** control the overall tone, personality, and communication style of your Delphi. Adjusting these settings can dramatically alter how your AI interacts with users across all conversations.

**Impact:** Changes here affect the AI's verbosity, formality, empathy, and other stylistic attributes.
**Access:** These settings are typically found within the **Settings** section of your Delphi Studio.

*For a comprehensive guide on configuring your Delphi's persona, see the [Settings: Style Settings](/build/settings#style-settings) documentation.*

#### Adding Custom Instructions {#adding-custom-instructions}
**Custom Instructions** provide a powerful way to inject specific rules, constraints, or additional context that your Delphi should always adhere to. These instructions act as an overarching directive, guiding the AI's behavior in ways that might not be covered by its core training data or style settings.

**Impact:** Custom instructions can enforce specific safety guidelines, define how the AI should handle certain types of queries (e.g., "always refer to our support page for pricing questions"), or provide specific knowledge that should always be prioritized.
**Access:** Custom Instructions are also located within the **Settings** section of your Delphi Studio.

*To learn how to leverage custom instructions for advanced control over your Delphi's behavior, consult the [Settings: Custom Instructions](/build/settings#custom-instructions) documentation.*

## Best Practices for Effective Delphi Testing {#best-practices-for-effective-delphi-testing}

To maximize the effectiveness of your testing efforts and ensure a high-quality Delphi, consider the following best practices:

*   **Iterative Testing:** Testing is not a one-time event. Continuously test, refine, and re-test as you make adjustments or as new information becomes relevant.
*   **Diverse Scenarios:** Don't just test with "happy path" scenarios. Actively try to break your Delphi by asking unusual, challenging, or out-of-scope questions.
*   **Involve Multiple Testers:** If possible, engage a small group of beta testers who represent your target audience. Different perspectives can uncover issues you might miss.
*   **Document Findings:** Keep a log of your test cases, the Delphi's responses, and your observations. This helps track progress and identify recurring patterns.
*   **Focus on User Experience:** Beyond just accuracy, evaluate the overall user experience. Is the Delphi helpful, engaging, and easy to interact with?
*   **Monitor Performance Post-Deployment:** Even after initial deployment, continue to monitor your Delphi's performance in live interactions. User feedback and analytics can provide valuable insights for ongoing improvements.

## Related Resources {#related-resources}

*   **[Instances](/build/instances):** Learn how to manage different versions or environments of your Delphi, which can be useful for A/B testing or staging environments.
*   **[Settings](/build/settings):** Explore the full range of configuration options for your Delphi, including Style Settings and Custom Instructions, which are crucial for global refinements.
*   **[Conversations](/build/conversations):** Understand how to navigate and utilize the Conversations section for reviewing interactions and applying individual response improvements.


--------------------------------------------------------------------------------
title: "Delphi Video Avatar - Delphi"
description: "The Delphi Video Avatar feature allows you to create a lifelike visual representation of your Delphi, providing a more personal and engaging interaction experience for users. This comprehensive guide ..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/build/video"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Delphi Video Avatar - Delphi

# Delphi Video Avatar

The Delphi Video Avatar feature allows you to create a lifelike visual representation of your Delphi, providing a more personal and engaging interaction experience for users. This comprehensive guide outlines the critical steps and best practices for recording the necessary video footage to generate a high-quality video avatar that complements your Delphi's [Voice](/build/voice) and [Behavior](/using-delphi/mind/behavior).

The primary objective of this process is to capture clear, consistent, and high-fidelity data related to your lip movements and facial expressions. Adhering strictly to the guidelines regarding lighting, positioning, and recording techniques is crucial, as every detail impacts the AI's ability to accurately track your movements and produce the most realistic and effective avatar.

![Analytics](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/build-avatar-1.png)

## Overview {#overview}

Creating your Delphi Video Avatar is a precise process designed to ensure the highest quality output. The entire recording process typically takes **around 15 minutes**. It is imperative to follow all instructions meticulously, as even minor deviations can significantly impact the final avatar's quality and realism. Use this guide as a comprehensive checklist to prepare for, execute, and review your recording session.

## 1. Pre-Recording Preparation {#pre-recording-preparation}

Before you begin recording, ensure your environment and equipment are optimally set up to capture the best possible footage.

### Background Considerations

*   **Setting:** Choose a natural, static environment such as an office, studio, or a quiet area in your home.
*   **Avoid Distractions:** Crucially, avoid busy or moving backgrounds (e.g., cars, people walking by, flickering lights).
*   **No Green Screens:** Do not use green screens or chroma key backdrops. The AI requires a natural background for accurate processing.
*   **Contrast:** Ensure your background provides sufficient contrast with your clothing to prevent blending.

### Clothing and Appearance

*   **Neck Visibility:** Wear clothing that leaves your neck fully visible. Avoid turtlenecks, high collars, or scarves that might obscure your neck or jawline.
*   **Face Unobscured:** Refrain from wearing glasses, hats, large earrings, or any accessories that could obscure your face, especially your eyes, nose, or mouth.
*   **Hair:** Ensure your hair is styled in a way that does not fall over your face or obscure your features.

### Equipment Setup

*   **Camera Quality:** Use a device capable of recording in **4K or 1080p resolution**. Suitable options include modern smartphones, high-quality webcams, or professional cameras (e.g., SONY FX6, Red KOMODO).
    *   **Avoid:** Do not use video call applications (e.g., Zoom, Google Meet, Microsoft Teams) for recording, as they often compress video quality.
*   **Camera Stability:** The camera must remain perfectly steady throughout the recording. Utilize a tripod or a stable surface to maintain a consistent frame.
*   **Camera Level:** Position the camera at eye level to ensure a natural perspective.
*   **Audio Quality:** Use an external microphone for clear audio capture.
    *   **Avoid:** Do not use Bluetooth headphones (e.g., AirPods) as they can introduce audio latency or inconsistent quality.
*   **Lighting:** A well-lit space is essential.
    *   **Best Practice:** If possible, use a three-point lighting setup (key light, fill light, back light) to illuminate your face evenly and minimize shadows. Ensure no harsh shadows fall across your face, especially around the mouth and eyes.

### Speech Topic Preparation

*   **Impromptu Speech:** Prepare a topic for a short, impromptu speech lasting approximately **1 minute**.
*   **Content:** Avoid repetitive phrases, numbers, or highly technical jargon that might hinder natural speech flow.
*   **Pacing:** Practice speaking at a natural, conversational pace, incorporating natural pauses. The goal is to capture diverse lip movements.

## 2. Immediate Pre-Recording Checklist {#immediate-pre-recording-checklist}

Just before you hit record, perform a final check of these critical elements to ensure optimal capture conditions.

*   **Positioning:**
    *   **Stability & Orientation:** Confirm the camera is stable, at eye level, and recording in **landscape orientation**.
    *   **Framing:** Center your face clearly within the frame.
    *   **Proximity:** Sit close enough to the camera so that your face fills at least **25% of the screen**. This ensures sufficient detail for lip tracking.
*   **Lighting:** Verify that your face is evenly lit from all angles, with no harsh shadows or overexposed areas.
*   **Audio Environment:** Double-check that there is absolutely no background noise, echoes, or other voices that could interfere with your audio.
*   **Background:** Confirm the background remains still, uncluttered, and free of any potential distractions.
*   **Clothing Check:** Ensure your clothing does not blend into the background.
*   **Mindset & Expression:** Relax and adopt a slightly pleasant, neutral expression. A friendly, approachable demeanor will result in a more engaging avatar. Avoid overly stiff or exaggerated expressions.

## 3. During Recording Guidelines {#during-recording-guidelines}

The recording phase is critical. All instructions must be followed precisely and the entire session must be captured in a single, continuous take.

*   **Single Take Requirement:** The entire recording (consent, speech, and silence) must be filmed in **one continuous take**. Do not stop and restart, or attempt to splice multiple recordings together, as this can cause jarring jumps and negatively impact the final avatar quality.

*   **Recording Sequence:**

    1.  **Consent Statement (Mandatory):** Begin the recording by clearly stating: **“I give Delphi consent to use this video to create my avatar.”** This statement is legally required, and your avatar cannot be processed without it.
    2.  **Speech Segment:** Immediately after the consent statement, speak for approximately **1 minute** on your prepared topic.
        *   **Clarity & Pace:** Speak clearly and at a natural, conversational pace – neither too fast nor too slow.
        *   **Natural Pauses:** After every couple of sentences, pause naturally for 1-2 seconds and **close your mouth completely**. These pauses are crucial for the AI to learn your natural lip movements.
        *   **Imperfections are Fine:** Do not worry about minor mistakes or mispronunciations during your speech. The primary goal is to capture a wide range of natural lip movements, not a perfect monologue.
    3.  **Silence Segment:** After completing your 1-minute speech, remain seated in silence for approximately **1 minute**. Maintain your pleasant expression and minimize movement during this period.

*   **Movement & Posture (During all parts of the recording):**

    *   **Minimize Movement:** Restrict all unnecessary movement as much as possible.
    *   **Head Stability:** Keep your head perfectly stable. Do not shake your head, nod, tilt, or make any other significant head movements.
    *   **Hands Out of Frame:** Ensure your hands remain completely out of the camera frame. Hand gestures or movements can distort your avatar's appearance.
    *   **Seated Position:** Film while seated for the most natural and consistent results.
    *   **Maintain Gaze:** Never turn away from the camera. Maintain direct eye contact with the lens throughout the entire recording.

*   **Facial Expression:**
    *   **Consistent Smile:** Maintain a slightly pleasant, natural smile or neutral expression throughout the entire recording.
    *   **Avoid Exaggeration:** Do not yawn, burst into laughter, or display other exaggerated emotions, as these can negatively impact the avatar's ability to convey subtle expressions accurately.

## 4. Post-Recording Review {#post-recording-review}

After completing your recording, meticulously review the footage against these criteria before submission. This final check is crucial for ensuring your video meets all technical and content requirements.

*   **Video Quality & Format:**
    *   **Resolution:** Confirm the video is in **4K or 1080p quality**.
    *   **Orientation:** Ensure it is in **landscape orientation**.
    *   **File Type:** The file format must be **.mp4 or .webm**.
    *   **File Size:** The total file size must be **under 750MB**.
*   **Consent Statement Verification:** Play back the beginning of the video to confirm that the mandatory consent statement, "I give Delphi consent to use this video to create my avatar," is clearly present and audible.
*   **Content & Visual Integrity:**
    *   **Framing & Lighting:** Verify that your face remains consistently centered, fully visible, and well-lit throughout the entire duration of the video.
    *   **Lip Visibility:** Crucially, ensure your lips are consistently visible and unobstructed by hair, hands, or accessories at all times.
    *   **No Disruptions:** Check for any disruptions such as background noise, interruptions, sudden camera movements, or frame misalignment.

By following these detailed guidelines, you will provide the optimal source material for Delphi to create a high-quality, lifelike video avatar that accurately represents you and enhances your Delphi's interactive capabilities.


--------------------------------------------------------------------------------
title: "Your Delphi Page - Delphi"
description: "This document provides comprehensive technical guidance for customizing your Delphi page, a crucial component of your Delphi instance. It details how to manage your Delphi's public appearance, user in..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/using-delphi/mind/interface"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Your Delphi Page - Delphi

This document provides comprehensive technical guidance for customizing your Delphi page, a crucial component of your Delphi instance. It details how to manage your Delphi's public appearance, user interaction settings, and branding elements, ensuring your AI assistant reflects your identity and provides an optimal user experience. By leveraging the settings outlined here, you can control everything from your Delphi's profile image and name to its initial greeting, message limits, and communication capabilities.

This guide is designed to help you configure your Delphi page to align with your specific needs, whether for personal branding, customer support, or information dissemination. It covers essential customization options available within the Delphi Studio, offering step-by-step instructions, best practices, and insights into how each setting impacts the user's interaction with your Delphi.

---

## Quick Start Guide {#quick-start-guide}

If you're setting up your Delphi for the first time or making key changes, here's a quick overview of what you can do. Each of these settings can be updated in **Delphi Studio** by navigating to the appropriate section under the [**Mind**](https://www.delphi.ai/studio/*/build/content) tab.

1.  **[Profile](#profile)** – Set your Delphi’s image, name, and handle.
2.  **[Biography](#biography)** – Add a headline and description to shape how your Delphi is introduced.
3.  **Social Links** – Connect your Delphi to your Instagram, Twitter (X), LinkedIn, Facebook, YouTube, TikTok, website, or any custom link. *Note: for all platforms except Twitter, adding your handle or URL will not train your Delphi on that content.*
4.  **Suggested Questions** – Choose which questions appear as prompts for users.
5.  **Experience** – Customize:
    *   **Initial Message** – The first message users receive.
    *   **No Answer Message** – The response when no training data is available.
    *   **Message Limit Before Email Capture** – How many messages users can send before email is required.
    *   **Citations** – Show or hide citation sources.
    *   **File Uploads** – Allow or block users from sending files.
    *   **Voice Calls** – Enable or disable voice calls. *Note: this is separate from enabling or disabling phone calls and SMS, which needs to be done through the [Access tab](/using-delphi/access/phone-number).*
    *   **Video Calls** – Enable or disable video calls.
    *   **Disclaimer** – Add a short notice at the top of your page.
    *   **Disable Talk Page** – Turn off all interactions while keeping the page visible.
    *   **Delete Instance** – Permanently remove your Delphi instance.

---

## Full Feature Guide {#full-feature-guide}

### Navigating Settings by Studio Tab {#navigating-settings-by-studio-tab}

Below, you'll find a **detailed walkthrough** of each customization option, including where to find it, how to customize it, and best practices for getting the most out of your Delphi Page. You'll also see how each change affects the way your Delphi appears to users.

While you likely configured many of these settings during onboarding, the instructions below will guide you on how to **edit and update** them anytime after onboarding.

### Profile {#profile}

The Profile section allows you to define the core visual and textual identity of your Delphi, including its image, display name, and unique handle.

#### Profile Image {#profile-image}

The profile image is the primary visual representation of your Delphi, appearing prominently on its page and within conversations.

*   **How to Access:**
    *   Go to Mind → [Profile](https://www.delphi.ai/studio/*/build/profile)
*   **How to Customize:**
    1.  Click "Upload new image."
    2.  Select an image from your computer by clicking on it.
    3.  Click "Open" to upload it.
    4.  Wait for the upload to complete. A green check mark at the top of your screen will confirm the change.
*   **Best Practices:**
    *   Use a clear, professional, and high-resolution image.
    *   Choose an image that aligns with your brand or personal identity.
    *   Avoid text-heavy images, as they may not be clearly visible in smaller formats.
*   **How this Appears:** Your Profile Image is prominently displayed at the top of your Delphi page and serves as the visual representation of your Delphi. The image appears as a circular avatar next to your Delphi’s name and headline, ensuring instant recognition. It also remains visible in smaller sizes within conversations, making it a key element of your Delphi’s identity. A high-quality, clear image helps establish trust and professionalism while aligning with your personal brand or organization.

#### Delphi Name {#delphi-name}

The Delphi Name is the primary textual identifier for your AI, visible to all users interacting with your page.

*   **How to Access:**
    *   Go to Mind → [Profile](https://www.delphi.ai/studio/*/build/profile)
*   **How to Customize:**
    1.  Edit the box under "Clone Name."
    2.  Click "Request Name Change." *Note: Name changes are manually approved to prevent impersonation.*
    3.  After your name change has been requested, a green check will appear at the top of your screen.
*   **Best Practices:**
    *   Keep your name short for better readability, especially on mobile devices.
    *   Keep your name consistent with your online presence.
    *   Ensure it’s easy to read and recognize.
    *   Avoid unnecessary symbols or excessive capitalization.
*   **How this Appears:** Your Delphi Name is displayed prominently at the top of your Delphi page, directly next to the profile image. It is shown in bold, large text to ensure visibility and instant recognition. This name is how users identify and refer to your Delphi, making it one of the most important elements of your page. It also appears in search results and conversation headers, reinforcing your Delphi’s branding and identity across the platform. A clear and recognizable name helps users quickly understand who or what your Delphi represents.

#### Delphi Handle {#delphi-handle}

The Delphi Handle creates a unique, shareable URL for your Delphi instance, facilitating easy access and distribution.

*   **How to Access:**
    *   Go to Mind → [Profile](https://www.delphi.ai/studio/*/build/profile)
*   **How to Customize:**
    1.  Edit the box under "Handle" to claim your URL (e.g., `www.delphi.ai/yourhandle`).
    2.  Click "Save Changes."
*   **Best Practices:**
    *   Match your Delphi handle with your social media or personal brand for consistency.
    *   Keep it simple, easy to remember, and professional.
    *   Avoid unnecessary numbers or special characters.
*   **How this Appears:** The Delphi Handle is not visibly displayed on your Delphi page but is embedded in your custom URL (e.g., `delphi.ai/yourhandle`). It serves as a unique identifier, making it easy for users to access and share your Delphi.

### Biography {#biography}

The Biography section allows you to provide a concise introduction to your Delphi, setting expectations and conveying its purpose.

#### Headline {#headline}

The Headline is a short, impactful statement displayed prominently on your Delphi page, serving as an immediate introduction.

*   **How to Access:**
    *   Go to Mind → [Biography](https://www.delphi.ai/studio/*/build/biography)
*   **How to Customize:**
    1.  Enter a short, engaging headline in the text box underneath "Headline" (max 120 characters).
    2.  Wait for your changes to save. Once updated, a green check will appear at the top of your screen.
*   **Best Practices:**
    *   Write a concise and informative headline that clearly communicates your Delphi's purpose or your identity.
    *   Use keywords that describe your Delphi's function or area of expertise.
    *   Keep it engaging to capture user interest immediately.

*(Note: The provided source content for this page ends abruptly after the "Headline" section. Further documentation would include details on the "Description" within the Biography section, "Social Links," "Suggested Questions," and "Experience" settings as outlined in the Quick Start Guide.)*


--------------------------------------------------------------------------------
title: "Single Sign-On (SSO) - Delphi"
description: "This document provides comprehensive technical details and guidance for integrating Single Sign-On (SSO) with your Delphi embed. SSO allows your users to seamlessly access and interact with your Delph..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/sso"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Single Sign-On (SSO) - Delphi

This document provides comprehensive technical details and guidance for integrating Single Sign-On (SSO) with your Delphi embed. SSO allows your users to seamlessly access and interact with your Delphi AI without needing to create separate accounts or manage additional passwords, leveraging your existing authentication system.

By implementing SSO, you enhance user experience by providing a frictionless login process and streamline user management within your Delphi Audience. This feature is exclusively available to customers on the **Prodigy Yearly plan**.

---

**On this page**

*   [Getting Started](#getting-started)
*   [How Delphi SSO Works](#how-delphi-sso-works)
*   [User Management and Provisioning](#user-management-and-provisioning)
*   [Supported Features and Limitations](#supported-features-and-limitations)
*   [Security Requirements and Best Practices](#security-requirements-and-best-practices)
*   [Frequently Asked Questions (FAQ)](#frequently-asked-questions-faq)
*   [Next Steps](#next-steps)

---

## Getting Started {#getting-started}

Integrating Single Sign-On (SSO) with your Delphi embed is a structured process designed to ensure security and proper functionality. Before you begin, ensure your organization is on the **Prodigy Yearly plan**, as this feature is exclusive to this tier.

Follow these steps to initiate your SSO setup:

1.  **Submit an SSO Request:** Navigate to your Delphi Studio's [SSO settings page](https://www.delphi.ai/studio/*/settings/sso) and submit an official request for SSO enablement. This form collects initial information about your integration needs.
2.  **Review and Approval:** Our dedicated team will review your application. This review process ensures that your proposed integration aligns with Delphi's security and operational standards. You will receive a follow-up via email regarding the status of your request.
3.  **Access Implementation Details:** Once your SSO request is approved, you will be granted access to the necessary technical implementation details and credentials required to configure SSO on your end. This typically includes API keys or shared secrets.
4.  **Follow Technical Implementation Guide:** Proceed with the technical setup by following our comprehensive [technical implementation guide](https://github.com/delphi-ai/embed-sso-example). This guide provides code examples and detailed instructions for integrating SSO into your application.

## How Delphi SSO Works {#how-delphi-sso-works}

When Single Sign-On is enabled for your Delphi embed, the authentication flow shifts from Delphi managing user credentials to your application handling it. This process ensures that users are securely authenticated against your system before accessing Delphi.

Here's a breakdown of the typical flow:

1.  **User Accesses Your Application:** A user interacts with your application, which hosts the Delphi embed.
2.  **Authentication by Your System:** Your application authenticates the user using its existing authentication system (e.g., username/password, OAuth, SAML).
3.  **Secure Token Generation:** Upon successful authentication, your application generates a secure, cryptographically signed token. This token contains the user's unique identifier, which, for Delphi SSO, is their **email address**. This token is typically a JSON Web Token (JWT) or a similar secure format, signed with a secret key shared between your application and Delphi.
4.  **Token Passed to Delphi Embed:** Your application passes this secure token to the Delphi embed initialization script. The embed then uses this token to authenticate the user with Delphi's backend.
5.  **Delphi Verification:** Delphi receives the token, verifies its signature using the pre-shared secret key, and extracts the user's email address.
6.  **Automatic Authentication:** If the token is valid and the signature matches, Delphi automatically authenticates the user. The user can then seamlessly interact with the Delphi embed as an authenticated user.

This process ensures that user credentials never leave your system, maintaining your security standards while providing a smooth user experience within the Delphi environment.

## User Management and Provisioning {#user-management-and-provisioning}

Delphi's SSO integration simplifies user management by automating the provisioning process within your Delphi Audience.

*   **Automatic User Provisioning:** The first time a user successfully authenticates via SSO, they are automatically added to your Delphi Audience. This eliminates the need for manual user creation, invitation, or synchronization.
*   **Email as Unique Identifier:** The user's email address serves as their unique identifier within Delphi. It is crucial that the email address passed in the SSO token is unique and consistently represents the user.
*   **No Manual Creation:** You do not need to manually create user accounts or send invitations for users who will access Delphi via SSO.
*   **Subaddressed Email Restriction:** Please note that subaddressed emails (e.g., `support+1@delphi.ai`, `user+alias@example.com`) will **not** be accepted as unique identifiers for SSO. Ensure that the email address provided is the primary, canonical email for the user.

**Best Practice:** Ensure your system consistently provides a stable and unique primary email address for each user to prevent issues with user identification and data consistency within Delphi's Audience.

## Supported Features and Limitations {#supported-features-and-limitations}

Delphi's current SSO implementation focuses on core authentication and user provisioning.

**Currently Supported Features:**

*   **Email-based Authentication:** Securely authenticates users based on their unique email address provided by your system.
*   **Automatic User Provisioning:** Automatically adds users to your Delphi Audience upon their first successful SSO login.

**Current Limitations:**

*   **Email-Only User Data:** At this time, SSO only supports passing the user's email address. Additional user fields such as first name, last name, or custom attributes are **not** supported through the SSO token.
*   **No Role/Permission Mapping:** SSO does not currently support mapping user roles or permissions from your system to Delphi. All authenticated users will have standard user access within the embed.

**Workaround for Additional Data:** If your application requires additional user data within the Delphi context (e.g., for personalization or segmentation), you would need to manage this data within your own system and potentially link it to the user's email address. For advanced use cases, consider exploring Delphi's [API integrations](/integrate/external) for custom data synchronization, though this would be separate from the SSO authentication flow.

## Security Requirements and Best Practices {#security-requirements-and-best-practices}

Maintaining the security of your SSO integration is paramount. Delphi implements stringent measures and requires partners to adhere to best practices to protect user data and system integrity.

*   **Individual Request Review:** Every SSO request is reviewed individually by our security team. This allows us to understand your specific integration environment and ensure it meets our security standards.
*   **Secure Key Storage and Handling:**
    *   The secret key used to sign and verify SSO tokens must be stored securely within your application environment.
    *   **Best Practice:** Avoid hardcoding keys directly in your codebase. Utilize environment variables, secret management services (e.g., AWS Secrets Manager, Azure Key Vault, HashiCorp Vault), or secure configuration files.
    *   Ensure that only authorized personnel and processes have access to these keys.
    *   Implement key rotation policies as part of your security hygiene.
*   **Token Generation and Validation:**
    *   Ensure that tokens are generated with a strong cryptographic algorithm (e.g., HMAC-SHA256).
    *   Tokens should have a short expiration time to minimize the risk of replay attacks if intercepted.
    *   Validate all incoming tokens for integrity, expiration, and correct signature before processing.
*   **Monitoring and Compliance:**
    *   Delphi continuously monitors implementation compliance to ensure ongoing adherence to security requirements.
    *   We reserve the right to limit or revoke SSO access if security requirements are not met or if any vulnerabilities are detected in the integration.
*   **Developer Documentation:** For the most detailed security requirements, technical specifications, and implementation steps, refer to our dedicated [developer documentation for SSO integrations](/docs/integrations/sso/developer). This resource provides in-depth guidance for developers.

## Frequently Asked Questions (FAQ) {#frequently-asked-questions-faq}

Here are answers to some common questions regarding Delphi's Single Sign-On (SSO) functionality:

**How do users appear in my Audience?**
Users are automatically added to your Delphi Audience the very first time they successfully authenticate via SSO. There is no need for manual user creation, invitation, or pre-provisioning. Their email address, passed through the SSO token, becomes their unique identifier in your Audience.

**Can I pass additional user data through SSO?**
Currently, Delphi's SSO implementation only supports passing the user's email address for authentication and provisioning. Additional user fields such as first name, last name, or custom attributes are not supported through the SSO token at this time. If you require additional user data within Delphi, you may need to explore other integration methods or manage that data within your own system.

**What happens if SSO authentication fails?**
If the SSO authentication process fails (e.g., due to an invalid token, expired token, or incorrect signature), the Delphi embed session will revert to an anonymous, unauthenticated state. The behavior of the embed in this scenario will depend on your specific Delphi embed settings. For example, it might prompt the user to log in traditionally (if enabled) or limit access to certain features.

**Is there a limit to how many users can use SSO?**
There is no specific hard limit on the number of individual users who can authenticate via SSO. However, the overall usage and number of active users should align with the terms and limits of your Delphi plan, particularly the **Prodigy Yearly plan** which is required for SSO.

## Next Steps {#next-steps}

Ready to enhance your user experience with seamless Single Sign-On for your Delphi embed?

1.  **Submit Your Request:** Begin by submitting your SSO request through our [SSO settings page](https://www.delphi.ai/studio/*/settings/sso) in Delphi Studio.
2.  **Review Technical Guide:** Familiarize yourself with the technical requirements and implementation steps by reviewing our [technical implementation guide](https://github.com/delphi-ai/embed-sso-example).
3.  **Await Follow-Up:** Keep an eye on your email for a follow-up from our team with next steps and any necessary credentials upon approval.

Should you require any assistance or have further questions during the setup process, please do not hesitate to contact our support team at [support@delphi.ai](mailto:support@delphi.ai).


--------------------------------------------------------------------------------
title: "Thinkific - Delphi"
description: "This document outlines the process for integrating your Delphi Clone into a Thinkific online course platform. By embedding your Delphi Clone, you can provide students with an interactive, AI-powered c..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/thinkific"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Thinkific - Delphi

This document outlines the process for integrating your Delphi Clone into a Thinkific online course platform. By embedding your Delphi Clone, you can provide students with an interactive, AI-powered companion directly within their learning environment, offering instant answers to common questions, supplementary information, and personalized support.

Integrating your Delphi Clone with Thinkific transforms your course experience by making knowledge more accessible and engaging. Students can interact with your AI assistant to clarify concepts, review material, or get help with course-related queries without leaving the Thinkific platform, significantly enhancing their learning journey and reducing the burden on instructors for repetitive questions.

---

## [Overview](#overview)

The Thinkific integration allows you to embed a Delphi Clone directly into your online courses as a dedicated lesson or resource. This turns your AI assistant into an always-available course companion, providing students with immediate access to information derived from your Delphi's knowledge base. This is particularly useful for:

*   **Automated Q&A:** Answering frequently asked questions about course content, assignments, or logistics.
*   **Supplemental Learning:** Offering additional explanations, definitions, or examples.
*   **Personalized Support:** Guiding students through complex topics or troubleshooting common issues.
*   **Enhanced Engagement:** Providing an interactive element that keeps students engaged with the material.

## [Prerequisites](#prerequisites)

Before you begin the integration process, ensure you have the following:

*   **An active Delphi AI account** with at least one configured Delphi Clone instance.
*   **An active Thinkific account** with administrative access to your courses.
*   **The specific Thinkific course** where you intend to embed your Delphi Clone.
*   **Basic understanding** of both the Delphi Studio interface and the Thinkific course builder.

## [Step-by-Step Integration Guide](#step-by-step-integration-guide)

Follow these steps to successfully embed your Delphi Clone into your Thinkific course.

### [1. Configure Your Delphi Clone for Thinkific](#configure-your-delphi-clone-for-thinkific)

The first step is to prepare your Delphi Clone to be embedded on your Thinkific domain. This involves setting up the necessary permissions within the Delphi Studio.

1.  **Navigate to Website Integrations:**
    *   Log in to your [Delphi Clone Studio](https://www.delphi.ai/studio).
    *   From the left-hand navigation menu, under **Integrate My Delphi**, select **External**, and then click on **Thinkific**. Alternatively, you can go to **Access** and then **Website Integrations**.
2.  **Select Your Clone Instance:**
    *   Choose the specific Delphi Clone instance you wish to integrate with your Thinkific course from the available list.
3.  **Add Thinkific Domain to Allowed Websites:**
    *   At the top of the **Website Integrations** page, locate the **Allowed Websites** field.
    *   Enter your Thinkific school's domain name into this field. This is crucial for security, as it restricts where your Delphi Clone can be embedded, preventing unauthorized use.
    *   **Best Practice:** Use the exact domain provided by Thinkific for your school (e.g., `your-school-name.thinkific.com`). Do not include `https://` or any path information.
    *   Refer to the image below for an example of the "Allowed Websites" field:
        ![Allowed Websites Configuration](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-thinkific-1.png)
    *   For more details on security and data ownership, refer to our [Data Security & Ownership](/data-security-and-ownership) documentation.
4.  **Access the Thinkific Embed Guide:**
    *   Scroll to the bottom of the **Website Integrations** page.
    *   Select the **Thinkific Embed Guide** option. This will reveal the specific embed code tailored for Thinkific.

### [2. Obtain the Thinkific Embed Code](#obtain-the-thinkific-embed-code)

Within the **Thinkific Embed Guide** section (accessed in the previous step), you will find the unique embed code for your Delphi Clone.

1.  **Copy the Embed Code:**
    *   Locate the section titled **Thinkific Embed Code**.
    *   Copy the entire code snippet provided. This code is typically an `<iframe>` tag, which allows your Delphi Clone to be displayed within a web page on another domain.

### [3. Embed Your Delphi Clone in Thinkific](#embed-your-delphi-clone-in-thinkific)

Now, you will add a new lesson within your Thinkific course and paste the embed code.

1.  **Open Your Thinkific Course:**
    *   Log in to your Thinkific admin dashboard.
    *   Navigate to the specific course where you want to embed your Delphi Clone.
2.  **Create a New Lesson:**
    *   Within your chosen course, we recommend creating a dedicated lesson for your Delphi. This ensures clarity for students and keeps your course content organized. A good title might be "Questions? Ask my Delphi!" or "Your AI Course Assistant."
    *   Select `Add Lesson` within the desired module.
    *   From the lesson type options, choose `Multimedia`. This lesson type is designed to embed external content using a URL or embed code.
    *   Refer to the image below for selecting the Multimedia lesson type:
        ![Add Multimedia Lesson](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-thinkific-2.png)
3.  **Paste the Embed Code:**
    *   In the `Multimedia` lesson editor, you will find a field labeled **URL**.
    *   Paste the **Thinkific Embed Code** you copied from the Delphi Studio into this URL field.
    *   **Important:** Despite the field being labeled "URL," Thinkific's Multimedia lesson type is designed to accept `<iframe>` embed codes directly, which effectively provides the URL for the embedded content.
    *   Click `Save Lesson`.
    *   Refer to the image below for pasting the embed code:
        ![Paste Embed Code](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-thinkific-3.png)

Your Delphi Clone should now be successfully embedded within your Thinkific course!

## [Best Practices and Troubleshooting](#best-practices-and-troubleshooting)

To ensure a smooth and effective integration, consider the following best practices and common troubleshooting tips.

### [Best Practices](#best-practices)

*   **Clear Naming:** Give your Delphi lesson a clear and descriptive title (e.g., "Ask Your AI Assistant," "Course Q&A with Delphi," "Delphi AI Companion").
*   **Placement:** Consider placing the Delphi lesson at the beginning or end of each module, or in a dedicated "Resources" module, so students know where to find assistance.
*   **Student Instructions:** Add a brief text lesson *before* the Delphi lesson explaining what the Delphi is, how to use it, and what kind of questions it can answer.
*   **Regular Testing:** After embedding, always preview the lesson as a student to ensure the Delphi Clone loads correctly and functions as expected. Refer to [Testing](/build/testing) your Delphi for comprehensive testing strategies.
*   **Delphi Maintenance:** Regularly update your Delphi Clone's knowledge base to ensure it provides accurate and up-to-date information relevant to your course content.
*   **Performance:** While Delphi Clones are optimized for performance, embedding multiple instances on a single page or within very complex Thinkific layouts might impact loading times. Test thoroughly.

### [Troubleshooting](#troubleshooting)

*   **Delphi Clone Not Appearing/Loading:**
    *   **Check Allowed Websites:** Double-check that your exact Thinkific domain (e.g., `your-school-name.thinkific.com`) is correctly entered in the **Allowed Websites** field in Delphi Studio. A mismatch or typo will prevent the embed.
    *   **Correct Embed Code:** Ensure you copied the *entire* Thinkific Embed Code from Delphi Studio and pasted it correctly into the Thinkific Multimedia lesson's URL field.
    *   **Thinkific Lesson Type:** Verify that the lesson type in Thinkific is `Multimedia`. Other lesson types may not correctly render the embed code.
    *   **Browser Issues:** Try clearing your browser cache or using an incognito window to rule out local caching problems.
*   **Delphi Clone Not Responding:**
    *   **Delphi Instance Status:** Verify that your Delphi Clone instance is active and running in the Delphi Studio.
    *   **Network Connectivity:** Ensure there are no network issues preventing the Delphi Clone from communicating with its backend.
    *   **Knowledge Base:** If the Delphi isn't answering specific questions, its knowledge base might not contain the relevant information. Review and update its content.
*   **Styling Issues:**
    *   The embedded Delphi Clone's appearance is largely controlled by its configuration within Delphi Studio. Minor styling adjustments might be possible within Thinkific's custom CSS options if available, but major changes should be done in Delphi Studio.

## [Related Resources](#related-resources)

*   [Website Integrations](/integrate/website): Learn more about general website embedding options for your Delphi Clone.
*   [Instances](/build/instances): Manage and configure your different Delphi Clone instances.
*   [Testing](/build/testing): Best practices for testing your Delphi Clone's functionality.
*   [Data Security & Ownership](/data-security-and-ownership): Understand how Delphi handles your data and the importance of allowed domains.
*   [Kajabi Integration](/integrate/kajabi): See how Delphi integrates with another popular course platform.
*   [Mighty Networks Integration](/integrate/mighty): Explore integration with community platforms.


--------------------------------------------------------------------------------
title: "Telegram - Delphi"
description: "This page provides technical documentation for integrating your Delphi AI with Telegram, enabling seamless interaction with your users and communities directly within the Telegram platform."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/telegram"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Telegram - Delphi

This page provides technical documentation for integrating your Delphi AI with Telegram, enabling seamless interaction with your users and communities directly within the Telegram platform.

The Telegram integration allows your Delphi to function as a Telegram bot, facilitating one-on-one conversations or managing interactions within Telegram groups and channels. This expands your Delphi's reach, making it accessible to a wide audience on one of the world's most popular messaging applications, enhancing user engagement and support capabilities.

---

# Telegram Integration

Integrating your Delphi with Telegram allows it to operate as a dedicated Telegram bot, enabling direct communication with users and efficient management of community interactions. This guide provides a comprehensive overview of the setup process, configuration options, and best practices for leveraging your Delphi on Telegram.

## Integrating Delphi with Telegram {#integrating-delphi-with-telegram}

This section outlines the steps required to connect your Delphi instance to Telegram, transforming it into an interactive bot.

## Prerequisites {#prerequisites}

Before you begin the integration process, ensure you have the following:

*   **An active Delphi instance:** Your Delphi must be set up and ready to interact. For more information on setting up your Delphi, refer to the [Getting Started](/build/overview) guide.
*   **A Telegram account:** You will need a Telegram account to create and manage your bot.
*   **A Telegram Bot:** You must create a new bot through Telegram's BotFather. This process generates the unique API token required for integration.

## Step-by-Step Setup Guide {#step-by-step-setup-guide}

Follow these steps to integrate your Delphi with Telegram.

### 1. Create Your Telegram Bot {#create-your-telegram-bot}

The first step is to create a new bot using Telegram's official BotFather.

1.  Open Telegram and search for `@BotFather`.
2.  Start a chat with BotFather and send the `/newbot` command.
3.  Follow the prompts to choose a name and a unique username for your bot. The username must end with "bot" (e.g., `MyDelphiBot`).
4.  Upon successful creation, BotFather will provide you with an **HTTP API Token**. This token is crucial for connecting your Delphi to Telegram.
    *   **Best Practice:** Keep your API token secure and do not share it publicly. If compromised, you can revoke it via BotFather and generate a new one.
    *   For a detailed external guide on creating a Telegram Bot, refer to [this resource](https://www.siteguarding.com/en/how-to-get-telegram-bot-api-token).

### 2. Configure Telegram Integration in Delphi {#configure-telegram-integration-in-delphi}

Once you have your Telegram Bot API Token, you can configure the integration within your Delphi settings.

#### 2.1. Accessing the Integration Settings {#accessing-the-integration-settings}

1.  Log in to your Delphi Studio.
2.  Navigate to the **Integrate My Delphi** section in the sidebar.
3.  Under the **External** category, select **Telegram**.

#### 2.2. Entering Your Bot Token {#entering-your-bot-token}

1.  On the Telegram integration page, locate the field labeled "Telegram Bot Token".
2.  Paste the HTTP API Token you obtained from BotFather into this field.

    ![Telegram Token Input Field](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/integrate-telegram-1.png)

#### 2.3. Configuring Access Settings {#configuring-access-settings}

Define who can interact with your Delphi bot on Telegram using the "Access" settings.

*   **Public:**
    *   **Description:** Your Delphi bot will be accessible to anyone on Telegram who can find its username.
    *   **Use Case:** Ideal for public-facing bots, customer support, or general information dissemination where broad accessibility is desired.
*   **Specific Users:**
    *   **Description:** Only Telegram users whose usernames you explicitly list will be able to interact with your bot in 1-1 chats.
    *   **Configuration:** Enter the Telegram usernames (e.g., `@username1`, `@username2`) separated by commas.
    *   **Use Case:** Suitable for private access, internal team communication, or controlled beta testing.
*   **Specific Communities:**
    *   **Description:** Your Delphi bot will only respond within specific Telegram groups or channels.
    *   **Configuration:** You may need to add the bot to the desired group/channel first. Delphi typically identifies communities once the bot is added and interacted with.
    *   **Important Note:** When your Delphi bot is in a group or channel, it will **only respond when explicitly tagged** (e.g., `@YourDelphiBot What is your purpose?`). This prevents the bot from cluttering conversations with unsolicited responses.
    *   **Use Case:** Perfect for managing community FAQs, providing automated support in private groups, or facilitating discussions in a controlled environment.

#### 2.4. Defining Response Mode {#defining-response-mode}

Choose how your Delphi should respond to queries on Telegram.

*   **Text:**
    *   **Description:** Your Delphi will respond with standard text messages.
    *   **Use Case:** Most common and versatile, suitable for all types of information and interactions.
*   **Voice:**
    *   **Description:** Your Delphi will generate and send voice notes as responses.
    *   **Use Case:** Provides a more personal or natural interaction, useful for audio-based content, accessibility, or when users prefer listening over reading.
    *   **Considerations:** Voice notes may consume more data and might not be suitable for very long or complex responses.

    ![Telegram Settings for Access and Mode](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/telegram-settings.png)

#### 2.5. Saving and Activating {#saving-and-activating}

After configuring your token, access, and mode settings, ensure you **save your changes** within the Delphi interface. Your Delphi bot should now be active and ready to interact on Telegram according to your settings.

## Interacting with Your Delphi on Telegram {#interacting-with-your-delphi-on-telegram}

Once integrated, users can interact with your Delphi bot:

*   **Direct Chat:** Users can search for your bot's username (e.g., `@MyDelphiBot`) in Telegram and start a direct conversation.
*   **Group Chat:** If added to a group, users must explicitly mention or "tag" your bot's username (e.g., `@MyDelphiBot, tell me about your features.`) to receive a response.

## Best Practices and Troubleshooting {#best-practices-and-troubleshooting}

*   **Test Thoroughly:** After setup, test your bot's functionality across different access scenarios (public, specific users, groups) and response modes (text, voice) to ensure it behaves as expected.
*   **Monitor Performance:** Regularly check your Delphi's performance and response quality. If responses are not accurate or relevant, consider refining your Delphi's knowledge base or "Mind" as described in the [Improve clone](/user-experience/improve-clone) section.
*   **Security:** Never expose your Telegram Bot API Token publicly. If you suspect it has been compromised, immediately revoke it via BotFather and update it in Delphi.
*   **Group Etiquette:** Remind users in groups to tag the bot when they want a response to avoid confusion and ensure the bot only responds when intended.
*   **Troubleshooting:**
    *   **Bot not responding:**
        *   Verify the Telegram Bot API Token is correctly entered in Delphi.
        *   Check your "Access" settings to ensure the user or community is permitted to interact.
        *   Ensure the bot is online and has not been blocked by Telegram.
    *   **Incorrect or irrelevant responses:**
        *   Review your Delphi's training data and knowledge base. Refer to the [Mind](/build/mind) section for guidance on improving your Delphi's understanding.
    *   **Voice notes not generating/playing:**
        *   Ensure "Voice" mode is selected in Delphi settings.
        *   Check the user's Telegram app version for compatibility with voice notes.

## Related Resources {#related-resources}

*   [Integrate My Delphi](/integrate/website): Overview of all integration options for your Delphi.
*   [Communication](/user-experience/overview): Learn more about how your Delphi communicates with users.
*   [Improve clone](/user-experience/improve-clone): Tips and strategies for enhancing your Delphi's responses and overall performance.
*   [Instances](/build/instances): Manage different versions or deployments of your Delphi.


--------------------------------------------------------------------------------
title: "Data Security & Ownership - Delphi"
description: "This document outlines Delphi's comprehensive approach to data security and ownership, ensuring that your intellectual property remains private, secure, and entirely under your control. It details the..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/data-security-and-ownership"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Data Security & Ownership - Delphi

This document outlines Delphi's comprehensive approach to data security and ownership, ensuring that your intellectual property remains private, secure, and entirely under your control. It details the robust technical measures and policies in place to protect your valuable data throughout its lifecycle on the Delphi platform, from ingestion and processing to storage and eventual deletion.

Delphi is committed to transparency and accountability in its data handling practices. This guide provides a deeper dive into the security architecture and operational procedures that safeguard your Digital Mind, offering peace of mind that your proprietary knowledge is protected by industry-leading standards and continuous vigilance.

---

## Data Ownership and Control {#data-ownership-and-control}

At Delphi, the principle of data ownership is fundamental: **you retain full ownership of all content and intellectual property (IP) uploaded to create your Digital Mind.** This means your data is exclusively yours, and Delphi does not claim any rights to it. Our platform is designed to empower you with complete control over how your data is used, shared, and accessed.

**Key aspects of your data ownership and control include:**

*   **Exclusive IP Retention:** All documents, text, media, and other data you upload to train your Digital Mind remain your intellectual property. Delphi acts solely as a processor of this data, not an owner.
*   **Private Data Indexing:** Your training data is stored in a dedicated, private index within Delphi's secure infrastructure. This ensures that your proprietary information is logically isolated from other customers' data and is never commingled or used to train external, public, or general-purpose models. Your Digital Mind's knowledge base is built exclusively from your provided content.
*   **Granular Access Control:** You have full control over who can access and interact with your Digital Mind. This includes managing user permissions, integrating with your existing authentication systems (e.g., via [Single Sign-On (SSO)](/integrate/sso)), and defining how your Digital Mind can be leveraged by your users or integrated into your applications (e.g., via [Website Integration](/integrate/website) or [Phone Integration](/integrate/phone)).
*   **Data Portability and Deletion:** Should you decide to discontinue your use of Delphi, you maintain the right to export your data to an external platform or request its complete and irreversible deletion from our systems. This process ensures that you are never locked into the Delphi ecosystem and can manage your data's lifecycle according to your organizational policies. For more details on data export or deletion procedures, please contact our support team.

**Best Practice:** Regularly review your Digital Mind's access settings and user permissions to ensure only authorized individuals or systems can interact with your proprietary knowledge.

## Robust Security Measures {#robust-security-measures}

Delphi employs a multi-layered security approach, integrating advanced technical controls, rigorous operational processes, and continuous monitoring to protect customer data. Our security framework is designed to meet and exceed industry best practices, ensuring the confidentiality, integrity, and availability of your information. For the most up-to-date information on our compliance certifications, security systems, and privacy practices, please refer to our [Trust Center](https://trust.delphi.ai/), [Terms of Use](https://www.delphi.ai/terms-of-use), and [Privacy Policy](https://www.delphi.ai/privacy-policy).

### Data Protection {#data-protection}

Delphi implements strong cryptographic controls to protect your data at every stage.

*   **Encryption at Rest (Stored Data Protection):** All customer data stored within Delphi's infrastructure, including training data, configurations, and user interactions, is encrypted using **AES-256 encryption**. This is a symmetric-key encryption standard widely recognized for its strength and is compliant with FIPS 140-2. Data is stored on encrypted volumes and databases, with encryption keys managed securely through services like AWS Key Management Service (KMS). This ensures that even if unauthorized access to storage media were to occur, the data would remain unreadable.
*   **Encryption in Transit (Data Moving Protection):** Data exchanged between your devices, Delphi's servers, and integrated services is encrypted using **TLS 1.2+ (Transport Layer Security)**. This protocol establishes a secure, encrypted channel over the internet, preventing eavesdropping, tampering, and message forgery. All API endpoints, web interfaces, and internal service communications enforce TLS encryption.
*   **Daily Backups and Disaster Recovery:** To ensure data durability and business continuity, Delphi performs **daily backups** of all critical customer data. These backups are encrypted and stored in geographically diverse locations to protect against regional outages or catastrophic data loss events. Our disaster recovery plan includes defined Recovery Time Objectives (RTO) and Recovery Point Objectives (RPO) to minimize downtime and data loss in the event of a major incident, allowing for rapid restoration of services and data.

### Network Security {#network-security}

Our network architecture is designed with segmentation and perimeter defense to prevent unauthorized access and mitigate network-based threats.

*   **Firewalls and Access Control Lists (ACLs):** Network traffic is meticulously controlled using stateful firewalls and ACLs. These security barriers filter incoming and outgoing traffic based on predefined rules, allowing only necessary communications and blocking suspicious or unauthorized connections.
*   **Private Subnets and Data Isolation:** Customer data processing and storage environments are deployed within **private subnets** of our cloud infrastructure (e.g., Amazon Virtual Private Cloud - VPC). These private network segments are logically isolated from the public internet, meaning direct public access to sensitive data stores or processing instances is prevented. Access is only permitted through controlled, secure gateways.
*   **DDoS Protection (Distributed Denial of Service):** Delphi leverages leading DDoS mitigation services, including **Cloudflare** and **AWS Shield**, to protect against volumetric and application-layer DDoS attacks. These services automatically detect and filter malicious traffic, ensuring the availability and responsiveness of the Delphi platform even under attack.
*   **Web Application Firewall (WAF):** A Web Application Firewall (WAF) is deployed to monitor and filter HTTP/HTTPS traffic to and from our web applications. The WAF helps protect against common web vulnerabilities such as SQL injection, cross-site scripting (XSS), and other OWASP Top 10 threats, blocking malicious requests before they reach our application servers.

### Continuous Monitoring and Compliance {#continuous-monitoring-and-compliance}

Delphi maintains a proactive security posture through continuous monitoring, auditing, and adherence to global regulatory standards.

*   **Automated Security Monitoring:** We utilize advanced monitoring tools such as **Sentry.io, Axiom, and Logfire** for real-time logging, anomaly detection, and performance monitoring across our infrastructure and applications. These systems generate immediate alerts for unusual activities, potential security incidents, or system health issues, enabling our security team to respond promptly.
*   **Audit Logs and Accountability:** Comprehensive **audit logs** are maintained for all significant actions within our system, leveraging services like **AWS CloudTrail**. These logs record who accessed what, when, and from where, providing an immutable trail for forensic analysis, compliance verification, and accountability.
*   **Regulatory Compliance:** Delphi is committed to adhering to stringent global data protection and privacy regulations. Our security practices are aligned with and regularly audited against standards such as:
    *   **SOC 2 (Service Organization Control 2):** Demonstrates our commitment to managing customer data securely and maintaining the privacy, availability, processing integrity, and confidentiality of information.
    *   **GDPR (General Data Protection Regulation):** Ensures the protection of personal data and privacy for individuals within the European Union and European Economic Area.
    *   **CCPA (California Consumer Privacy Act):** Provides California consumers with rights regarding their personal information.
    *   We continuously review and update our practices to remain compliant with evolving regulatory landscapes.

### Application Security {#application-security}

Security is embedded throughout Delphi's software development lifecycle (SDLC).

*   **Penetration Testing:** Delphi engages independent, third-party security firms to conduct **annual penetration tests** of our platform. These ethical hacking exercises simulate real-world attacks to identify vulnerabilities in our applications, infrastructure, and configurations. Any identified weaknesses are prioritized and remediated promptly.
*   **Vulnerability Scanning and Management:** We employ automated tools like **Snyk** for continuous static and dynamic application security testing (SAST/DAST) and **AWS GuardDuty** for intelligent threat detection. These tools scan our codebase, dependencies, and infrastructure for known vulnerabilities, misconfigurations, and outdated components, ensuring that security patches and updates are applied proactively.

### Secure Access and Identity Management {#secure-access-and-identity-management}

Access to Delphi's systems and customer data is strictly controlled and managed.

*   **Role-Based Access Control (RBAC):** Internal access to Delphi's production systems and customer data is governed by a strict **Role-Based Access Control (RBAC)** model. Employees and system users are granted the minimum necessary permissions required to perform their job functions (principle of least privilege). Access rights are regularly reviewed and revoked upon role changes or termination.
*   **Credential Management:** Sensitive credentials, API keys, and secrets are securely stored and managed using dedicated services like **AWS Key Management Service (KMS)** and **1Password**. These systems ensure that sensitive information is encrypted at rest and in transit, and access is restricted to authorized personnel through strong authentication mechanisms.

### Incident Response and Business Continuity {#incident-response-and-business-continuity}

Delphi has a well-defined plan to address security incidents and ensure operational resilience.

*   **Incident Response Plan:** In the event of a security incident, Delphi follows a structured **Incident Response Plan**. This plan outlines clear procedures for detection, analysis, containment, eradication, recovery, and post-incident review. Our security team is on-call 24/7 to respond to alerts and mitigate potential threats rapidly.
*   **Root Cause Analysis:** After any security event, a thorough **Root Cause Analysis (RCA)** is conducted. The purpose of the RCA is to understand the underlying causes of the incident, identify lessons learned, and implement corrective and preventative actions to prevent recurrence and continuously improve our security posture.

---

## Related Resources

For further details on Delphi's commitment to security, privacy, and compliance, please refer to the following resources:

*   [**Trust Center**](https://trust.delphi.ai/)
*   [**Terms of Use**](https://www.delphi.ai/terms-of-use)
*   [**Privacy Policy**](https://www.delphi.ai/privacy-policy)


--------------------------------------------------------------------------------
title: "SMS Broadcasts - Delphi"
description: "This document provides comprehensive technical guidance on utilizing Delphi's SMS Broadcasts feature, enabling you to execute large-scale SMS campaigns and manage subsequent conversations efficiently."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/engage/smsbroadcasts"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# SMS Broadcasts - Delphi

This document provides comprehensive technical guidance on utilizing Delphi's SMS Broadcasts feature, enabling you to execute large-scale SMS campaigns and manage subsequent conversations efficiently.

SMS Broadcasts in Delphi empower you to engage your audience directly through text messaging at scale. This feature allows you to send mass SMS messages to your contact list, with the unique advantage of having your Delphi Clone automatically manage and respond to subsequent conversations. It serves as a powerful tool for various communication needs, including marketing campaigns, critical announcements, and proactive customer engagement.

Whether you are looking to integrate an existing mass SMS strategy or build one from the ground up, Delphi offers flexible options. You can seamlessly import existing phone numbers, contact lists, and tags, or leverage customizable plans to initiate your SMS strategy within the platform. For assistance with importing existing data, please contact [support@delphi.ai](mailto:support@delphi.ai).

---

## Sending SMS Broadcasts {#sending-sms-broadcasts}

To initiate a mass SMS campaign, follow these steps within the Delphi platform:

1.  **Navigate to Broadcasts:** From your Delphi dashboard, select the **Engage** tab, then click on **Broadcasts** in the left-hand navigation pane.
2.  **Create New Broadcast:** In the top right corner of the Broadcasts page, click the `Create New` button.
3.  **Configure Broadcast Details:**
    *   **Medium:** Select `Mobile` as the communication medium.
    *   **Name:** Assign a descriptive name to your SMS blast for easy identification later (e.g., "Holiday Sale Announcement," "Q3 Newsletter").
    *   **WhatsApp Inclusion:** If you wish to extend your broadcast to WhatsApp contacts, select the corresponding option at the bottom of the template. Note that WhatsApp broadcasts require the use of [Meta-approved templates](#whatsapp-templates).
4.  **Define Your Audience:**
    *   **To:** Specify your target audience. You can choose to send to your `Entire distribution`, users with `specific tags`, or a `list of individuals`.
    *   **Exclude:** To refine your audience further, add `specific tags` or `individuals` to the exclude line. Any group or individual not explicitly included in the "To:" field will not receive the SMS.
5.  **Compose Your Message:**
    *   Enter your message content in the provided text area.
    *   **Personalization:** Enhance engagement by adding personalization tags. Click the `{ }` icon at the bottom of the page to insert a tag (e.g., `{First Name}`). This will automatically address each recipient by their first name if available in your contact data.
    *   **Example:** "Hi {First Name}, exciting news from Delphi! Our new feature is live. Learn more here: [link]"

**Best Practice:** Before sending a broadcast to your entire audience, consider sending a test message to a small, controlled group or even yourself to verify formatting, links, and overall message clarity.

---

## Managing User Interactions {#managing-user-interactions}

After sending an SMS broadcast, Delphi provides robust tools to manage user responses and interactions, whether through automated tagging or manual intervention.

### User Tagging and Auto Replies {#user-tagging-auto-replies}

Automate user segmentation and responses based on conversation content with your Delphi Clone. This is particularly useful for qualifying leads, providing instant information, or directing users to specific resources.

1.  **Access Alerts:** Navigate to the **Engage** tab and select **Alerts**.
2.  **Add New Alert:** Click `Add Alert` in the top right corner.
3.  **Configure Alert Details:**
    *   **Trigger:** Set the `topic` or `keyword` that will activate the alert (e.g., "pricing," "support," "demo request").
    *   **Actions:**
        *   Ensure `Tag User` is selected. This will automatically assign a predefined tag to the user when the trigger is met.
        *   You can also activate `email notifications` for the alert, ensuring your team is informed of specific user interactions.
        *   Set an `autoresponse` for that particular tag at the bottom of the frame. This allows your Clone to immediately send a relevant message.
    *   **Tag Name:** Give the tag a clear, descriptive name (e.g., "Interest: Pricing," "Support Query"). If editing an existing tag, select it from the dropdown.
    *   **Create/Update Tag:** Click `Create Tag` (or `Update Tag` if editing).

**Example:** If a user replies to your broadcast mentioning "pricing," you can set an alert to automatically tag them as "Interest: Pricing" and send an autoresponse like, "Thanks for your interest in pricing! You can find detailed information here: [link to pricing page]."

**Best Practice:** Develop a clear tagging strategy to categorize users effectively. This improves lead qualification, personalization for future broadcasts, and overall CRM integration.

### Viewing Responses {#viewing-responses}

To monitor individual conversations and user responses to your SMS broadcasts:

*   Navigate to the **Engage** tab and select the **Audience** page. Here, you can view a chronological list of all conversations, including those initiated by your SMS broadcasts and subsequent user replies. For more details, refer to the [Audience/Conversations documentation](/engage/audience).

### Manually Responding to Users {#manually-responding-to-users}

While your Delphi Clone can handle automated responses, you may need to intervene manually for complex queries or to take over a conversation.

*   Within the **Audience** page, select the specific conversation you wish to manage. At the bottom of the conversation frame, type your message and click the arrow icon on the right to send. This allows you to directly engage with users and provide personalized support.

---

## Advanced Broadcast Features {#advanced-broadcast-features}

Delphi offers additional functionalities to optimize your SMS broadcast strategy.

### Schedule for Later {#schedule-for-later}

Plan your campaigns in advance by scheduling SMS broadcasts for a future date and time.

*   When creating a new broadcast, select your preferred date and time for delivery. This feature is invaluable for planning campaigns for the upcoming week or month, ensuring timely communication without manual intervention at the moment of sending.

### Turning Off Clone Responses {#turning-off-clone-responses}

In certain scenarios, you might want to send a one-way SMS broadcast without allowing your Delphi Clone to engage with replies. This is useful for simple announcements or when you prefer to handle all responses manually.

1.  **Access Phone Integrations:** Go to the **Integrate** tab and select **Phone Integrations**.
2.  **Edit Number Settings:** Click into the specific phone number card associated with your Delphi Clone.
3.  **Toggle Setting:** Locate and toggle `Pause Clone Responses` to the `On` position.

**Best Practice:** Use this feature judiciously. While it provides control for specific campaigns, allowing your Clone to engage can significantly reduce manual workload and improve response times for general inquiries. For more information on configuring your phone integrations, see the [Phone Integrations documentation](/integrate/phone).

### WhatsApp Templates {#whatsapp-templates}

To send Broadcasts to your audience over WhatsApp, you must adhere to Meta's strict guidelines by using a pre-approved template.

*   **Requirement:** All WhatsApp Broadcasts must utilize a Meta-approved message template. These templates are designed to prevent spam and ensure a high-quality user experience on the WhatsApp platform.
*   **Guidelines:** Learn more about how to create and submit a valid template by reviewing [Meta's WhatsApp Message Template Guidelines](https://developers.facebook.com/docs/whatsapp/message-templates/guidelines/).

---

## Understanding Broadcast Credits {#understanding-broadcast-credits}

Delphi's SMS Broadcasts operate on a credit system, distinct from standard message usage. Understanding this system is crucial for managing your communication budget.

*   **Segment Definition:** A Broadcast credit is equivalent to 1 segment. A single segment comprises 150 characters.
*   **Message Length:** Delphi allows you to send up to 3 segments (a total of 450 characters) within a single Broadcast SMS blast. Messages exceeding 150 characters will consume multiple segments.
*   **Credit Calculation:** The total number of credits used for a broadcast is calculated as:
    `Total Number of Segments` x `Total Number of Recipients`
    *   **Example:** Sending a 2-segment message (e.g., 200 characters) to 1,000 recipients will consume 2,000 broadcast credits (2 segments * 1,000 recipients).
*   **Credit Distinction:** Broadcast credits are separate and do not count towards your total standard message allowance.
*   **Purchasing Credits:** Additional Broadcast credits can be purchased at any time to support your campaign needs.

**Best Practice:** Plan your message content carefully to optimize segment usage. Concise messages can significantly reduce the number of credits consumed per broadcast.

---

**See Also:**
*   [Audience/Conversations](/engage/audience)
*   [Email Broadcasts](/engage/emailbroadcasts)
*   [Phone Integrations](/integrate/phone)
*   [Texting and Calling](/user-experience/sms-guide)


--------------------------------------------------------------------------------
title: "Content - Delphi"
description: "This document provides comprehensive technical guidance on managing the content that powers your Delphi AI. The 'Content' section within the Delphi Studio's 'Mind' tab is your central hub for uploadin..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/using-delphi/mind/content"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Content - Delphi

This document provides comprehensive technical guidance on managing the content that powers your Delphi AI. The "Content" section within the Delphi Studio's "Mind" tab is your central hub for uploading, organizing, and refining the knowledge base that shapes your Delphi's responses, personality, and expertise.

Effective content management is paramount for a high-performing Delphi. By carefully curating and structuring your data, you ensure your AI delivers accurate, relevant, and personalized interactions, reflecting your unique knowledge, style, and brand voice. This guide details the supported content types, the step-by-step upload process, and crucial post-upload adjustments to optimize your Delphi's performance.

---

## Understanding Content in Delphi {#understanding-content-in-delphi}

The content you upload forms the core of your Delphi's intelligence. It's how your AI learns about your specific domain, personal history, or organizational data, enabling it to provide informed and contextually appropriate responses. Without relevant content, your Delphi operates on general knowledge, which may not align with your specific needs.

### Why Content is Crucial {#why-content-is-crucial}

Uploading content directly trains your Delphi to:
*   **Reflect Your Knowledge:** Impart specific facts, figures, and proprietary information.
*   **Adopt Your Style and Expertise:** Learn from your written and spoken communication patterns.
*   **Provide Accurate and Personalized Responses:** Ensure answers are grounded in your provided data, not generic web knowledge.
*   **Maintain Brand Consistency:** Align all AI interactions with your established voice and messaging.

### Data Security and Ownership {#data-security-and-ownership}

Delphi prioritizes the security and ownership of your data. All content uploaded remains **100% yours**. Delphi ensures private storage, robust encryption, and complete control over how your content is used, accessed, or deleted. For a detailed overview of Delphi's data handling policies, refer to the [Data Security & Ownership](/data-security-and-ownership) documentation.

---

## The Content Upload Workflow {#the-content-upload-workflow}

The process of adding content to your Delphi is designed to be intuitive, yet provides granular control over how your data is processed and utilized. Follow these steps to effectively train your Delphi.

### Locating the "Add Content" Feature {#locating-the-add-content-feature}

1.  Open the Delphi Studio.
2.  Navigate to the **"Mind"** tab in the left-hand navigation menu.
3.  Click the **"Add Content"** orange button, typically located near the top right corner of the "Content" page.

### Step-by-Step Upload Process {#step-by-step-upload-process}

The content upload process involves several stages, from initial selection to final training.

#### Step 1: Initiating the Upload {#step-1-initiating-the-upload}

After clicking "Add Content," a modal window will appear, presenting various content source options. Select the tab corresponding to your content type (e.g., "Files," "Websites," "YouTube & Podcasts," "Social Media," "Notes Apps").

#### Step 2: Selecting Content Type and Source {#step-2-selecting-content-type-and-source}

Based on your chosen tab, you will be prompted to:
*   **Files:** Drag and drop files, browse your local system, or connect to cloud storage (Google Drive, Dropbox).
*   **Websites:** Paste individual URLs or upload a CSV file containing multiple URLs.
*   **YouTube & Podcasts:** Paste direct links to videos/episodes or search for content within the platform.
*   **Social Media:** Enter a Twitter handle or upload a ZIP archive for other platforms.
*   **Notes Apps:** Sign in to Notion or Evernote and select specific pages or notebooks.

For a complete list of supported file extensions and detailed guidance, refer to the [Supported Content Types and Best Practices](#supported-content-types-and-best-practices) section below.

#### Step 3: Pre-Processing Adjustments {#step-3-pre-processing-adjustments}

Before loading content into the final staging area, you may have options to configure initial settings:
*   **Syncing:** For dynamic sources like Google Drive, Notion, YouTube, podcasts, RSS feeds, or Twitter, toggle **"Keep Synced"** to enable automatic updates. This ensures your Delphi's knowledge remains current with changes in the source.
*   **Audio/Video Speaker Settings:** For audio/video content, choose whether to include **"Other Speakers"** or only **"Your Voice"** in the transcription and training. This is crucial for focusing on specific voices or including all dialogue.
*   **Accuracy Check:** Visually confirm that all selected files or links appear correctly in the upload queue before proceeding.

Once these initial adjustments are made and files are processed (indicated by a "Done" message), click **"Continue"** or **"Add"**.

#### Step 4: Loading Content to Staging Area {#step-4-loading-content-to-staging-area}

Clicking "Continue" or "Add" moves your selected content to a temporary "loading area." **Important:** At this stage, your Delphi is NOT yet trained on the content. This area serves as a final inspection and configuration point before the training process begins. You can access this area by clicking **"Content"** in the bottom left corner of the upload popup.

#### Step 5: Final Review and Configuration {#step-5-final-review-and-configuration}

In the loading area, you can make critical adjustments to each piece of content:
*   **Authorship:** Assign the original author of the content.
*   **Context:** Provide a brief description of the content's purpose or domain. This helps Delphi understand the relevance of the information.
*   **Citation URL:** Link back to the original source for attribution.
*   **Published Date:** Specify the date the content was created or published.
*   **Syncing Settings:** Reconfirm or adjust the "Keep Synced" toggle for applicable sources.
*   **Speaker Inclusion:** For audio/video, fine-tune which speakers' dialogue should be included.
*   **Instance Access:** **Crucially**, open the dropdown next to the "Finish Uploading" button and check the orange box for each specific Delphi **instance** that should be trained on this content. You can select one or multiple instances. For more on managing instances, see [Instances](/build/instances).
*   **Content Importance:** (If available) Assign a level of importance to the content. Higher importance means Delphi will prioritize this information in its responses.

#### Step 6: Initiating Training {#step-6-initiating-training}

After reviewing and configuring all settings, click **"Finish Uploading"**. This action initiates the training process, integrating the content into your selected Delphi instances' knowledge base. The time taken for training depends on the volume and complexity of the content.

#### Step 7: Post-Upload Management {#step-7-post-upload-management}

Even after content is uploaded and trained, you retain full control. You can edit, update, or delete content directly from the "Content" table in the Delphi Studio. This iterative refinement is key to maintaining an accurate and effective Delphi.

---

## Supported Content Types and Best Practices {#supported-content-types-and-best-practices}

Delphi supports a wide array of content formats, each processed uniquely to optimize your AI's understanding.

### Text-Based Documents (PDF, DOCX, TXT, CSV, JSON, HTML, etc.) {#text-based-documents}

Text documents are fundamental for imparting specific knowledge, policies, and detailed information.

*   **Supported Formats:**
    *   **Text-Based:** `.pdf`, `.docx`, `.doc`, `.txt`, `.md`, `.rtf`
    *   **Structured Data:** `.csv`, `.xlsx`, `.json`, `.jsonl`
    *   **Presentation & Script:** `.pptx`, `.srt`, `.html`, `.htm`, `.epub`
*   **Upload Methods:**
    *   **Drag and Drop:** Convenient for single or multiple files.
    *   **Select Files:** Browse your local file system.
    *   **Google Drive & Dropbox Integrations:** Connect your cloud storage accounts to import files directly. Google Drive files can be set to "Keep Synced."
    *   **Notion & Evernote Integrations:** Sign in and select specific pages or notebooks. Notion documents can also be synced.
*   **Processing Details:** Delphi extracts text, tables, and structured data from these files. It then indexes this information, making it searchable and retrievable for generating responses. For structured data like CSV or JSON, Delphi can understand relationships and extract specific data points.
*   **Best Practices:**
    *   **Clarity and Conciseness:** Write clearly and avoid jargon where possible.
    *   **Structured Formatting:** Use headings, bullet points, and clear paragraphs. For PDFs, ensure text is selectable (not just scanned images) for optimal extraction.
    *   **Chunking Information:** Break down very long documents into smaller, logically coherent sections if possible. This can improve retrieval accuracy.
    *   **Data Accuracy:** Ensure all facts, figures, and dates are correct.

### Web Content (Websites, RSS Feeds) {#web-content}

Web content allows your Delphi to learn from publicly available information, blogs, news articles, or internal web pages.

*   **Upload Methods:**
    *   **Individual URLs:** Paste direct links to specific web pages.
    *   **CSV of URLs:** Upload a file containing a list of URLs for bulk ingestion.
    *   **RSS Feeds:** Integrate RSS feeds to automatically pull new articles or updates from websites.
*   **Processing Details:** Delphi crawls the provided URLs, extracts the main content (text, images, links), and indexes it. For RSS feeds, it periodically checks for new entries and processes them.
*   **Best Practices:**
    *   **Valid URLs:** Ensure all URLs are active and accessible.
    *   **Clean Web Pages:** Content extraction is more effective on pages with clear main content areas and minimal dynamic or irrelevant elements (e.g., excessive ads, complex JavaScript widgets).
    *   **Sitemaps:** If providing a large number of URLs, ensure the website has a well-structured sitemap for better crawling.
    *   **"Keep Synced":** Utilize this feature for blogs, news sites, or frequently updated web resources to ensure your Delphi always has the latest information.

### Audio and Video Files (YouTube, Podcasts, MP3, MP4) {#audio-and-video-files}

Audio and video content allows your Delphi to learn from spoken words, presentations, and interviews, capturing nuances of your voice and communication style.

*   **Upload Methods:**
    *   **YouTube & Podcasts:** Paste direct links to YouTube videos or podcast episodes. You can also search within the platform.
    *   **Direct File Upload:** Upload `.mp3`, `.mp4`, or other supported audio/video formats directly via the "Files" tab.
*   **Processing Details:** Delphi transcribes the audio into text using advanced speech-to-text models. It can also perform speaker diarization to identify different speakers. This transcribed text is then indexed for training.
*   **Speaker Settings:**
    *   **"Your Voice":** Focuses training specifically on your voice, ideal for personal clones.
    *   **"Other Speakers":** Includes all spoken dialogue, useful for training on interviews, podcasts with multiple hosts, or meetings.
*   **Best Practices:**
    *   **Audio Quality:** Clear audio with minimal background noise significantly improves transcription accuracy. Use high-quality microphones when recording.
    *   **Clear Speech:** Articulate clearly and avoid speaking too quickly.
    *   **Content Relevance:** Ensure the spoken content is directly relevant to the knowledge you want to impart.
    *   **"Keep Synced":** For YouTube channels or podcasts, enable syncing to automatically ingest new episodes.

### Social Media (Twitter, other platforms via ZIP) {#social-media}

Social media content can provide insights into your public persona, communication style, and recent activities.

*   **Upload Methods:**
    *   **Twitter:** Enter your Twitter handle to import your public tweets.
    *   **Other Platforms:** For platforms like Instagram, Facebook, or LinkedIn, you may need to export your data (e.g., a ZIP archive of your posts) and upload it via the "Files" tab.
*   **Processing Details:** Delphi extracts text from posts, comments, and associated metadata. It focuses on the textual content for training.
*   **Best Practices:**
    *   **Public Data:** Be mindful of privacy. Only upload public data or data you explicitly wish to share with your Delphi.
    *   **Relevance:** Consider if your social media content is truly relevant for training your Delphi's core knowledge. Short, informal posts might be less impactful than structured documents.
    *   **"Keep Synced":** For Twitter, enable syncing to continuously update your Delphi with new tweets.

### Direct Input (Snippets & Notes) {#direct-input}

For quick additions, corrections, or specific instructions, Delphi allows direct text input.

*   **Purpose and Use Cases:** Ideal for:
    *   Adding specific facts or answers not covered elsewhere.
    *   Providing immediate corrections to Delphi's responses.
    *   Injecting short, critical pieces of information.
    *   Defining specific terms or acronyms.
*   **How to Add:** Typically found as a "Notes" or "Snippets" option within the "Add Content" modal, allowing you to type or paste text directly.
*   **Best Practices:**
    *   **Concise and Focused:** Keep snippets short and to the point.
    *   **Clear Language:** Use unambiguous language to avoid misinterpretation.
    *   **Prioritize:** Use this for high-impact, specific information rather than large volumes of text.

---

## Managing Uploaded Content {#managing-uploaded-content}

Once content is uploaded, the "Content" table in the Delphi Studio becomes your control panel for ongoing management and refinement.

### The Content Table {#the-content-table}

The "Content" table provides an overview of all your uploaded data. Key columns include:
*   **Title:** The name of the uploaded file or source.
*   **Type:** The content format (e.g., PDF, YouTube, Website).
*   **Status:** Indicates the processing state (e.g., "Processing," "Active," "Error").
*   **Last Updated:** The date the content was last modified or synced.
*   **Instances:** Which Delphi instances are trained on this specific content.
*   **Actions (Gear Icon):** Access to edit or delete content.

You can use the search bar and filters at the top of the table to quickly locate specific content.

### Editing Content (Gear Icon) {#editing-content-gear-icon}

Clicking the **gear icon** next to any content entry in the table opens an editing panel, allowing you to adjust its properties even after it has been uploaded and trained. Any changes made here will trigger a re-training of the affected Delphi instances.

*   **Context: Defining the Scope**
    *   **Purpose:** Provides a high-level summary or category for the content. This helps Delphi understand the general domain or topic of the information, improving its ability to retrieve relevant data during conversations.
    *   **Example:** For a document about "Company HR Policies," the context could be "Internal HR Documentation" or "Employee Benefits."
    *   **Best Practice:** Be specific but concise. A good context helps Delphi narrow down its search space for answers.

*   **Citation URL & Visibility: Source Attribution**
    *   **Purpose:** Allows you to link back to the original source of the information. "Citation Visibility" controls whether this URL is displayed to the end-user when Delphi provides an answer based on this content.
    *   **Example:** If you upload a blog post, the Citation URL would be the blog post's permalink. You might make it visible if you want users to verify sources.
    *   **Best Practice:** Always include a citation URL for external content. Control visibility based on whether you want to provide transparency or keep sources internal.

*   **Authorship: Crediting the Source**
    *   **Purpose:** Identifies the original author or creator of the content. This can be useful for internal tracking or for Delphi to attribute information correctly if its behavior is configured to do so.
    *   **Example:** "Dr. Jane Doe," "Marketing Department," "Delphi AI."
    *   **Best Practice:** Maintain consistent authorship for better organization.

*   **Published Date: Chronological Relevance**
    *   **Purpose:** Specifies when the content was created or published. This is crucial for Delphi to understand the recency of information, especially for time-sensitive queries.
    *   **Example:** "2023-10-26" for a recent news article.
    *   **Best Practice:** Ensure dates are accurate. Delphi can use this to prioritize newer information over older, potentially outdated content.

*   **Content Importance: Prioritizing Knowledge**
    *   **Purpose:** Assigns a weight to the content, influencing how readily Delphi uses it in its responses. Higher importance means Delphi will prioritize this information over less important content when generating answers.
    *   **Levels:** Typically ranges from Low to High (or similar scale).
    *   **Example:** Your company's core mission statement might be "High" importance, while a casual internal memo might be "Low."
    *   **Technical Detail:** This setting directly impacts Delphi's retrieval algorithms, guiding its attention to key information.
    *   **Best Practice:** Use this strategically. Over-assigning "High" importance to too much content can dilute its effect. Prioritize truly critical or frequently requested information.

*   **Instance Access: Tailoring Knowledge per Delphi**
    *   **Purpose:** Determines which specific Delphi instances (e.g., "Customer Support Delphi," "Internal HR Delphi") have access to and are trained on this particular piece of content.
    *   **Technical Detail:** This allows for highly customized knowledge bases for different AI applications, ensuring each Delphi only knows what it needs to.
    *   **Best Practice:** Carefully manage instance access to prevent information leakage or irrelevant responses from specific Delphi deployments. Refer to [Instances](/build/instances) for more details.

*   **Syncing: Keeping Content Up-to-Date**
    *   **Purpose:** For integrated sources (Google Drive, Notion, YouTube, RSS, Twitter), this toggle enables automatic updates. Delphi will periodically check the source for changes and re-train itself on new or modified content.
    *   **Best Practice:** Enable syncing for dynamic content sources that are frequently updated to ensure your Delphi's knowledge base remains current without manual intervention.

*   **Speaker Inclusion (for A/V):**
    *   **Purpose:** For audio/video files, this allows you to re-adjust whether only "Your Voice" or "Other Speakers" (all voices) are included in the transcription used for training.
    *   **Best Practice:** Review this setting if you find Delphi is either missing relevant information from other speakers or including irrelevant dialogue.

### Deleting Content {#deleting-content}

You can delete content from your Delphi's knowledge base via the gear icon's options.
*   **Impact:** Deleting content removes it from your Delphi's training data. This will trigger a re-training process for affected instances, and Delphi will no longer be able to reference that specific information.
*   **Process:** Select the content, click the gear icon, and choose the delete option. Confirm the deletion.
*   **Best Practice:** Only delete content that is outdated, incorrect, or no longer relevant. Deleting core content can significantly impact your Delphi's ability to respond.

### Content Statuses {#content-statuses}

Understanding content statuses helps you monitor the health of your knowledge base:
*   **Processing:** The content is currently being ingested, transcribed, or indexed.
*   **Active:** The content has been successfully processed and is actively being used to train your Delphi.
*   **Error:** An issue occurred during processing (e.g., file corruption, inaccessible URL). Review the error message and re-upload or correct the source.
*   **Pending Sync:** Content from a synced source is awaiting an update check or is currently being synced.

---

## Optimizing Your Delphi's Knowledge Base {#optimizing-your-delphis-knowledge-base}

Effective content management is an ongoing process.

### Content Strategy (Relevance, Accuracy, Diversity) {#content-strategy}

*   **Relevance:** Only upload content that is directly pertinent to your Delphi's intended function and target audience. Irrelevant data can dilute its focus.
*   **Accuracy:** Ensure all facts and figures are correct and up-to-date. Outdated or incorrect information will lead to erroneous responses.
*   **Diversity:** Provide a variety of content types (documents, videos, web pages) to give Delphi a comprehensive understanding from different perspectives and formats.

### Iterative Refinement {#iterative-refinement}

*   **Monitor Performance:** Regularly test your Delphi's responses using the [Testing](/build/testing) feature. Identify areas where responses are weak, inaccurate, or missing information.
*   **Add/Edit Content:** Based on testing, add new content to fill knowledge gaps or edit existing content for clarity and accuracy.
*   **Review Importance:** Adjust "Content Importance" settings as your Delphi evolves and priorities shift.

### Interaction with Behavior Settings {#interaction-with-behavior-settings}

The content you upload directly influences your Delphi's "Mind" and "Behavior" settings. For instance, if your content is formal, Delphi's behavior can be tuned to reflect a formal tone. Conversely, if your content is casual, you can adjust behavior settings to match. Explore the [Your Delphi's Behavior](/using-delphi/mind/behavior) documentation to fine-tune how your Delphi utilizes its knowledge.

### Testing Content Effectiveness {#testing-content-effectiveness}

After uploading and training new content, it's crucial to test how well your Delphi has integrated this knowledge. Use the [Testing](/build/testing) section in the Studio to ask questions directly related to the new content and evaluate the responses. This feedback loop is essential for continuous improvement.

---

## Troubleshooting Common Content Issues {#troubleshooting-common-content-issues}

### Upload Failures {#upload-failures}

*   **Check File Format:** Ensure the file extension is supported.
*   **File Size Limits:** Very large files might have upload limits. Consider splitting them or using cloud integrations.
*   **Network Issues:** A stable internet connection is required for uploads.
*   **Source Accessibility:** For URLs or cloud integrations, ensure Delphi has permission to access the source.

### Content Not Reflecting in Responses {#content-not-reflecting-in-responses}

*   **Training Complete?** Check the content status in the table; it must be "Active."
*   **Instance Access:** Verify that the content is assigned to the correct Delphi instance(s).
*   **Content Importance:** If the content has low importance, Delphi might prioritize other information.
*   **Context/Clarity:** Ensure the content is clear, well-formatted, and its context is accurately defined.
*   **Testing:** Use the [Testing](/build/testing) feature to ask very specific questions directly from the content to confirm its presence.

### Incorrect Information in Responses {#incorrect-information-in-responses}

*   **Source Content:** Double-check the original uploaded content for accuracy.
*   **Conflicting Information:** If multiple pieces of content contradict each other, Delphi might struggle to determine the correct answer. Prioritize or edit content to resolve conflicts.
*   **Context/Importance:** Adjust context or importance settings to guide Delphi towards the most authoritative information.
*   **Behavior Settings:** Review your Delphi's [Behavior](/using-delphi/mind/behavior) settings. Overly creative or conversational settings might lead to "hallucinations" or less factual responses.


--------------------------------------------------------------------------------
title: "Zoom - Delphi"
description: "This documentation outlines how to integrate your Delphi AI with Zoom, enabling it to participate in your virtual meetings."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/integrate/zoom"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Zoom - Delphi

This documentation outlines how to integrate your Delphi AI with Zoom, enabling it to participate in your virtual meetings.

The Delphi Zoom integration allows you to seamlessly bring your Delphi AI into any Zoom meeting, enhancing communication and information retrieval. Whether you need an instant AI participant for a live discussion or want to schedule your Delphi to join future calls, this integration provides a flexible solution.

Your Delphi can participate in Zoom meetings in various capacities, from a video avatar to a chat-only assistant, providing real-time responses and insights. This capability streamlines workflows by automating information delivery and support directly within your virtual meetings.

---

## Integrating Delphi with Zoom {#integrating-delphi-with-zoom}

The Delphi Zoom integration allows your AI to join Zoom meetings instantly or be scheduled for future sessions. This capability is managed entirely within your Delphi Studio account, requiring no additional software installation.

## Prerequisites {#prerequisites}

Before integrating your Delphi with Zoom, ensure you have:
*   An active Delphi Studio account. Log in at [www.delphi.ai/studio](https://www.delphi.ai/studio).
*   For scheduling Delphi to join future meetings, you will need a connected Google Calendar or Microsoft Outlook Calendar.

## Instant Join a Zoom Meeting {#instant-join-zoom}

To have your Delphi instantly join a live Zoom meeting:

1.  **Navigate to Studio:** Log in to your Delphi Studio account at [www.delphi.ai/studio](https://www.delphi.ai/studio).
2.  **Access Meetings Settings:** From the Studio dashboard, go to **Access** and then select **Meetings**.
3.  **Enter Meeting URL:** In the "Join a meeting now" input field, paste the full Zoom meeting URL.
    *   *Example URL:* `https://zoom.us/j/1234567890`
4.  **Choose Participation Mode:** Select how your Delphi should participate in the meeting:
    *   **Video Only:** Your Delphi's avatar will join the meeting visually, appearing as a participant with video enabled.
    *   **Chat Only:** Your Delphi will join the meeting but will only respond to messages in the Zoom chat.
        *   **Note:** For your Delphi to respond in chat-only mode, its name must be explicitly included in the chat message.
5.  **Initiate Join:** Click the appropriate button (e.g., "Join Meeting") to have your Delphi instantly enter the specified Zoom call.

    ![Instant Join Delphi to Zoom](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/instant-join.png)

    *Example for Chat Only Mode:* If your Delphi is named "Delphi Assistant," a chat message like "Delphi Assistant, what's the agenda for today?" would trigger a response.

## Schedule Delphi for Future Meetings {#schedule-future-meetings}

You can schedule your Delphi to automatically join upcoming Zoom meetings by connecting your calendar:

1.  **Navigate to Studio:** Log in to your Delphi Studio account at [www.delphi.ai/studio](https://www.delphi.ai/studio).
2.  **Access Meetings Settings:** From the Studio dashboard, go to **Access** and then select **Meetings**.
3.  **Connect Calendar:** Click on **Connected Calendars**. Follow the prompts to link your Google Calendar or Microsoft Outlook Calendar. This allows Delphi to access your meeting schedule.
4.  **Select Meeting:** Once your calendar is successfully connected, a list of your upcoming meetings will appear. Select the specific meeting you wish your Delphi to join.
5.  **Confirm Schedule:** Confirm your selection to schedule your Delphi to automatically join the chosen meeting at the designated time.

    ![Schedule Delphi to Join Zoom](https://mintlify.s3.us-west-1.amazonaws.com/delphi/images/schedule-join.png)

    *Best Practice:* Ensure your connected calendar is up-to-date with your latest meeting schedule to prevent any scheduling conflicts or missed appearances by your Delphi.

## Important Considerations and Best Practices {#important-considerations}

To ensure optimal performance and interaction with your Delphi in Zoom meetings, consider the following:

*   **No Installation Required:** The Delphi Zoom integration is entirely cloud-based and does not require any additional software or plugins to be installed on your computer. All functionality is managed directly within the Delphi Studio.
*   **Voice Trigger for Video Calls:** When your Delphi joins a meeting in "Video Only" mode, it primarily listens for the trigger word "Delphi" to respond to spoken queries.
    *   **Pronunciation:** For the best results, ensure clear pronunciation of "Delphi," typically sounding like "Delf-eye" rather than "Delf-ee."
    *   **Language Sensitivity:** While the trigger word works well in English, mixing different languages within a "Hey Delphi" trigger phrase may reduce its responsiveness. For optimal performance, ensure the audio is clear and the trigger word is pronounced distinctly.
*   **Chat-Only Trigger:** In "Chat Only" mode, your Delphi will only respond to messages in the Zoom chat that explicitly include its name. This prevents it from responding to every message in the chat and ensures targeted interactions.
*   **Data Security:** For information on how Delphi handles your data, including meeting content, please refer to our [Data Security & Ownership](/data-security-and-ownership) documentation.


--------------------------------------------------------------------------------
title: "Overview - Delphi"
description: "This document provides a comprehensive overview of the Delphi Studio's main dashboard, serving as your central hub for managing and interacting with your Delphi AI instance. This page is designed to o..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/build/overview"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Overview - Delphi

This document provides a comprehensive overview of the Delphi Studio's main dashboard, serving as your central hub for managing and interacting with your Delphi AI instance. This page is designed to offer quick access to essential features, navigation tools, and critical information, streamlining your workflow within the Delphi ecosystem.

The Overview page acts as a launchpad, enabling you to efficiently navigate various sections of the Studio, access support, and manage your Delphi's visibility. It is the first point of contact for many users, providing a snapshot of key functionalities and announcements to ensure a smooth and productive experience.

---

## Navigating Delphi Studio {#navigating-delphi-studio}

The Delphi Studio Overview page is designed for intuitive navigation and quick access to core functionalities. Understanding these navigation tools is key to efficiently managing your Delphi instance.

### Command Panel {#command-panel}

The Command Panel is a powerful search and navigation tool integrated directly into the Delphi Studio. It allows users to quickly find specific sections, features, or documentation without manually browsing through menus.

*   **Access:** Open the Command Panel by pressing `CTRL + K` (or `⌘K` on macOS) from any page within the Studio.
*   **Functionality:** Once opened, you can type keywords related to the feature or section you're looking for. For example, typing "content" will display options to navigate to the content management section, or "settings" to access your Delphi's configuration.
*   **Best Practice:** Utilize the Command Panel for rapid navigation, especially when you know the name of the section or feature you wish to access. This significantly reduces time spent clicking through menus.

### AI Assistant (CEO's Delphi) {#ai-assistant}

For immediate assistance and guidance, the Delphi Studio features an integrated AI assistant, often referred to as the "CEO's Delphi." This intelligent assistant is available 24/7 to help you with various aspects of building, refining, and integrating your Delphi.

*   **Availability:** The AI assistant is typically located in the bottom right corner of every page within the Studio.
*   **Purpose:** It can answer questions, provide step-by-step instructions, and offer troubleshooting tips. For instance, if you're encountering issues with [integrating your Delphi with a website](/integrate/website) or need clarification on [managing your content](/using-delphi/mind/content), the AI assistant can provide real-time support.
*   **Technical Detail:** The assistant leverages advanced natural language processing to understand your queries and provide relevant, context-aware responses, acting as a virtual expert on Delphi Studio functionalities.

### Notifications and Settings Access {#notifications-settings}

From the Overview page, you have direct access to your notifications and general Delphi settings.

*   **Notifications:** Keep track of important updates, system alerts, and activity related to your Delphi instances. Regularly checking notifications ensures you stay informed about any changes or actions required.
*   **Settings:** Access your Delphi's configuration options directly. This includes general settings, user management, and other customizable parameters. For detailed information on available configurations, refer to the [Settings documentation](/build/settings).
*   **Best Practice:** Periodically review your notifications to stay updated on your Delphi's performance and any system-wide announcements.

---

## Sharing Your Delphi {#sharing-your-delphi}

The Overview page provides a prominent "Share" option, allowing you to control the visibility and accessibility of your Delphi instance.

*   **Functionality:** Located in the top right corner of the page, the "Share" button enables you to:
    *   **Make your Delphi publicly accessible:** Generate a shareable link that allows anyone to interact with your Delphi.
    *   **Feature on Delphi's browse page:** Opt to have your Delphi listed on the public browse page, increasing its discoverability by new users looking for AI solutions.
*   **Technical Detail:** Enabling public access generates a unique URL for your Delphi, which can be embedded or shared directly. Featuring on the browse page involves a review process to ensure quality and relevance.
*   **Cross-reference:** For a comprehensive guide on sharing options, security considerations, and best practices for public deployment, refer to the [Sharing Your Delphi documentation](/sharing-your-delphi).

---

## Important Notice: Documentation Transition {#documentation-transition}

Please be aware that the Delphi documentation is undergoing a transition to a new platform.

*   **New Documentation Website:** The most up-to-date and comprehensive documentation is now available at [https://intercom.help/delphi-ai/en](https://intercom.help/delphi-ai/en).
*   **Current Website Status:** This current documentation website will remain accessible for a transitional period to ensure all customers can smoothly migrate to the new Studio and documentation platform. However, it will eventually be phased out.
*   **Recommendation:** We strongly recommend bookmarking and utilizing the new documentation website for all future reference and support needs to ensure you have access to the latest information and features.

---

## Best Practices for Using the Overview {#best-practices}

To maximize your efficiency and leverage the full potential of the Delphi Studio Overview page:

1.  **Familiarize Yourself with Navigation:** Spend a few minutes exploring the Command Panel and the location of the AI assistant. This initial investment will save significant time in the long run.
2.  **Utilize the AI Assistant:** Don't hesitate to use the CEO's Delphi for quick questions or guidance. It's an invaluable resource for both new and experienced users.
3.  **Manage Sharing Mindfully:** If you intend for your Delphi to be public, regularly check the "Share" settings and ensure your Delphi's content and behavior are appropriate for public consumption.
4.  **Stay Updated on Documentation:** Always refer to the [new documentation website](https://intercom.help/delphi-ai/en) for the most current information, guides, and troubleshooting tips. This ensures you are working with the latest best practices and feature explanations.


--------------------------------------------------------------------------------
title: "Alerts - Delphi"
description: "This documentation provides a comprehensive guide to the Alerts feature within Delphi, designed to help you effectively monitor and respond to key interactions with your Delphi Clone."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/engage/alerts"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Alerts - Delphi

This documentation provides a comprehensive guide to the Alerts feature within Delphi, designed to help you effectively monitor and respond to key interactions with your Delphi Clone.

## Alerts - Delphi

Delphi's Alerts feature empowers you to proactively monitor conversations your Delphi Clone has with its audience. This capability ensures that you are immediately notified via email when specific keywords or topics of interest are mentioned, allowing for timely follow-up and deeper engagement. It transforms your Clone from a passive information source into an active intelligence-gathering tool.

By setting up custom alerts, you can efficiently track critical mentions related to lead generation, customer feedback, support inquiries, or any other subject vital to your objectives. This real-time notification system helps you quickly identify opportunities, address concerns, and gain actionable insights directly from your audience's interactions.

## <a name="setting-up-alerts"></a>Setting Up Alerts

Configuring alerts for your Delphi Clone is a straightforward process designed to get you monitoring conversations quickly.

To set up a new alert:

1.  **Navigate to Alerts:** From your Delphi Studio dashboard, locate and click on the **Advanced** tab in the left-hand navigation menu. Within the Advanced section, select **Alerts**.
2.  **Add New Alert:** On the Alerts page, you will find an **'Add Alert'** button, typically positioned in the top right corner of the page. Click this button to initiate the alert creation process.
3.  **Define Keyword or Topic:** A prompt will appear, asking you to enter the specific keyword, phrase, or topic you wish Delphi to monitor in conversations.
    *   **Example:** If your Delphi Clone is used for lead generation, you might enter terms like "hire," "project proposal," or "looking for a solution."
    *   The interface for adding alerts is intuitive, similar to the "Analytics" image provided on the original page, where you input your desired monitoring terms.
4.  **Save Alert:** After entering your keyword(s), confirm your entry to save the alert. Delphi will immediately begin monitoring all new conversations your Clone has for these terms.

## <a name="how-alerts-work"></a>How Alerts Work

Once an alert is active, Delphi continuously monitors all interactions with your Clone. When a conversation contains a keyword or phrase that matches one of your configured alerts, the system triggers an immediate notification process:

*   **Email Notification:** You will receive an email at the address associated with your Delphi account. This email serves as a direct notification that a relevant interaction has occurred.
*   **Direct Link to Conversation:** Crucially, the notification email includes a direct link. Clicking this link will take you straight to the specific conversation within your Delphi Studio where the keyword was mentioned. This allows for immediate review of the context, enabling you to understand the full interaction and take appropriate action without delay.
*   **Conversation Access:** All conversations, including those that trigger alerts, are comprehensively logged and accessible for review within the **Audience/Conversations** section of your Delphi Studio. For more detailed information on navigating and managing these interactions, please refer to the [Audience and Conversations](/engage/audience) documentation.

## <a name="use-cases-and-best-practices"></a>Use Cases and Best Practices

Delphi Alerts are a powerful tool for extracting actionable insights from your Clone's interactions. Leveraging them effectively can significantly enhance your operational efficiency and responsiveness.

### Common Use Cases:

*   **Lead Generation:** Set alerts for terms indicating intent to purchase or engage, such as "pricing," "quote," "consultation," "need help with X," or "interested in Y." This allows for prompt follow-up with potential clients.
*   **Customer Support & Feedback:** Monitor for keywords related to issues, complaints, or suggestions, like "problem," "error," "bug," "feedback," "suggestion," or specific product/service names. This enables rapid response to customer needs and identification of areas for improvement.
*   **Product/Service Interest:** Track mentions of specific features, upcoming products, or competitor names to gauge market interest, identify trends, or understand competitive positioning.
*   **Compliance & Risk Management:** In regulated industries, alerts can be configured for sensitive terms or phrases that might indicate a compliance breach, a high-risk interaction, or a legal inquiry, prompting immediate review by relevant personnel.
*   **Content Improvement & FAQs:** Identify recurring questions or topics that your Clone struggles to answer, indicating gaps in your knowledge base or areas where your Clone's training data needs enhancement.

### Best Practices for Keyword Selection:

*   **Be Specific but Comprehensive:** Start with highly specific keywords or phrases directly relevant to your objective to minimize irrelevant notifications. However, also consider common synonyms and variations that users might employ.
    *   *Example:* For "customer complaint," also consider "dissatisfied," "unhappy," "issue with service," or "problem with product."
*   **Use Phrases for Precision:** Multi-word phrases (e.g., "technical support," "billing inquiry") can significantly improve the accuracy of your alerts by reducing false positives compared to single, common words.
*   **Iterate and Refine:** Regularly review the alerts you receive. If you're getting too many irrelevant notifications, refine your keywords to be more precise. Conversely, if you suspect you're missing important mentions, broaden your keywords or add more synonyms.
*   **Manage Alert Volume:** For high-volume Delphi Clones, be mindful of the number and breadth of alerts you set. An excessive number of alerts can lead to "alert fatigue," making it harder to identify truly critical interactions. Prioritize the most impactful keywords.
*   **Consider Case Sensitivity (if applicable):** While Delphi's alert system is generally robust, be aware of how it handles case sensitivity. It's often best to test a few variations.

## <a name="privacy-and-anonymization"></a>Privacy and Anonymization

When reviewing conversations triggered by alerts, particularly in sensitive industries or for privacy-conscious organizations, it may be necessary to anonymize user data. Delphi provides a setting to facilitate this:

*   **Anonymize Users:** If your operational requirements or organizational policies mandate that user identities remain confidential when viewing Clone interactions, you can enable the 'Anonymize Users' setting.
    *   To activate this feature, navigate to **Engage Preferences** within your Delphi Studio (typically found under the 'Engage' section).
    *   Enabling 'Anonymize Users' will hide the names and other identifying information of individuals who interact with your Clone, ensuring privacy while still allowing you to review the full content and context of the conversation.

It is a best practice to regularly review your privacy settings, especially if your Delphi Clone handles sensitive information or operates within regulated environments.

## <a name="related-resources"></a>Related Resources

*   [Audience and Conversations](/engage/audience): Learn how to view, manage, and analyze all interactions your Delphi Clone has had with your audience.
*   [Promote Products](/engage/promote): Discover how to leverage your Delphi Clone to actively promote products or services and drive engagement.
*   [Engage Preferences](/engage/preferences): Understand other settings related to user engagement, privacy, and the overall user experience within Delphi.


--------------------------------------------------------------------------------
title: "Welcome to Delphi - Delphi"
description: "This document provides technical documentation for the 'Welcome to Delphi' page, serving as the central hub and entry point for the Delphi documentation set. It outlines the page's structure, content,..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/home"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Welcome to Delphi - Delphi

This document provides technical documentation for the "Welcome to Delphi" page, serving as the central hub and entry point for the Delphi documentation set. It outlines the page's structure, content, and purpose, guiding users through the various resources available to understand, build, and integrate their digital Delphi clone.

The "Welcome to Delphi" page acts as a comprehensive index, offering quick access to essential guides, tutorials, best practices, and support channels. It is designed to provide both new and experienced users with a clear roadmap for navigating the extensive Delphi documentation, ensuring they can efficiently find the information needed to maximize their Delphi experience.

---

## Welcome to Delphi: An Overview

The "Welcome to Delphi" page (`https://docs.delphi.ai/home`) is the foundational page of the Delphi documentation, designed to introduce users to the platform and provide a structured pathway to all available resources. It serves as a high-level table of contents, categorizing documentation into logical sections to facilitate ease of navigation and information retrieval.

### Core Purpose

The primary purpose of this page is to:
*   **Introduce Delphi:** Briefly explain what Delphi is and its core value proposition (creating a digital version of oneself).
*   **Guide Navigation:** Provide clear links to major documentation categories, allowing users to quickly jump to relevant sections based on their needs (e.g., getting started, using features, integration, troubleshooting).
*   **Highlight Key Resources:** Point to essential support channels, video tutorials (upcoming), and inspirational content.
*   **Communicate Updates:** Inform users about important changes, such as the migration of the documentation platform.

## Navigating the Documentation

The "Welcome to Delphi" page organizes the documentation into several main categories, each addressing a specific aspect of the Delphi platform.

### Main Documentation Categories

The page features six primary sections, each linked to a dedicated overview page for more detailed content:

*   ### [Getting Started](/what-is-delphi)
    This section is designed for new users and those looking to quickly set up their Delphi. It covers the initial steps required to build a digital clone, emphasizing a streamlined onboarding process.
    *   **Content Focus:** Introduction to Delphi, initial setup, basic configuration, and the first steps to bringing a digital mind to life.
    *   **Technical Details:** Guides on data ingestion, initial model training, and basic persona definition.
    *   **Best Practices:** Recommended steps for efficient onboarding and initial content upload to ensure a robust foundation for your Delphi.
    *   **Cross-Reference:** See also [Introduction](/what-is-delphi) and [Onboarding](/onboarding) for detailed walkthroughs.

*   ### [Using Delphi](/using-delphi/section-overview)
    This comprehensive guide delves into every feature, setting, and capability of the Delphi platform. It is intended for users who want to explore and master the various functionalities available.
    *   **Content Focus:** Detailed explanations of the Delphi Studio interface, configuration options, advanced settings, and management of your digital clone.
    *   **Technical Details:** Information on `Mind` configuration (e.g., knowledge base, personality traits), `Advanced` settings (e.g., API integrations, custom behaviors), `Access` controls, `Instances` management, `Testing` methodologies, and `Settings` adjustments.
    *   **Best Practices:** Strategies for optimizing your Delphi's performance, ensuring accurate responses, and managing multiple instances effectively.
    *   **Cross-Reference:** Refer to [Getting Started (Build)](/build/overview), [Instances](/build/instances), [Testing](/build/testing), and [Settings](/build/settings) for in-depth information on specific features.

*   ### [Tailored Guides](/tailored-guides/section-overview)
    This section provides specialized guides crafted for specific professions, industries, or user goals. It offers curated advice and use-case examples to help users leverage Delphi effectively within their unique contexts.
    *   **Content Focus:** Industry-specific applications, best practices for particular roles (e.g., creators, educators, customer support), and advanced strategies for achieving specific objectives with Delphi.
    *   **Technical Details:** Examples of how different data types or integration patterns can be applied to achieve industry-specific outcomes.
    *   **Best Practices:** Recommendations for customizing your Delphi to meet professional demands and maximize ROI.

*   ### [Fast Fixes](/fast-fixes/section-overview)
    A quick-reference section designed to provide immediate answers to common questions and solutions for frequently encountered problems.
    *   **Content Focus:** Troubleshooting tips, FAQs, and concise solutions for common issues related to Delphi functionality, performance, or integration.
    *   **Technical Details:** Common error codes, diagnostic steps, and quick configuration adjustments.
    *   **Best Practices:** Before contacting support, consult this section for immediate resolutions to known problems.
    *   **Cross-Reference:** Includes topics like [Languages](/fast-fixes/language-related/languages) for language-related issues.

*   ### [Pro Tips](/pro-tips/section-overview)
    This section offers expert strategies and best practices to help users perfect their Delphi clone, optimize its performance, and enhance user interactions.
    *   **Content Focus:** Advanced techniques for refining your Delphi's persona, improving conversational flow, and leveraging hidden features for superior results.
    *   **Technical Details:** Insights into prompt engineering, data refinement, and advanced interaction patterns.
    *   **Best Practices:** Strategies for continuous improvement, A/B testing responses, and maintaining high-quality interactions.

*   ### [What's New](/whats-new/section-overview)
    Stay updated with the latest improvements, new features, and significant updates to the Delphi platform.
    *   **Content Focus:** Release notes, feature announcements, and deprecation notices.
    *   **Technical Details:** Information on new APIs, updated functionalities, and changes to existing features that may impact integrations or usage.
    *   **Best Practices:** Regularly review this section to ensure your Delphi implementation remains current and takes advantage of the latest capabilities.

### Supplemental Resources

Beyond the core documentation categories, the "Welcome to Delphi" page also highlights additional resources:

*   **Get Inspired:** A link to `https://www.delphi.ai/explore` showcasing how others are utilizing Delphi, providing real-world examples and use cases. This can be valuable for understanding the breadth of Delphi's applications.
*   **Delphi Academy (Coming Soon):** An upcoming video learning platform.
    *   **Delphi 101:** Step-by-step video walkthroughs for initial setup and confident usage.
    *   **Delphi Actions:** Videos focused on unlocking Delphi's full potential by crafting personalized user journeys with "Actions" (likely referring to automated responses or integrations triggered by specific user inputs).

### Support and Assistance

For users requiring direct assistance, the page provides clear channels for support:

*   **Ask Dara's Delphi:** A direct link to interact with the CEO's digital Delphi clone (`https://www.delphi.ai/dara`) for instant answers to common questions. This serves as a primary, AI-powered support channel.
*   **Email Us:** A direct email link to `support@delphi.ai` for more personalized or complex support inquiries.

## Important Notice: Documentation Transition

A critical announcement on this page indicates that the Delphi documentation is in the process of migrating to a new platform: `https://intercom.help/delphi-ai/en`. Users are advised that this current website will remain active until all customers have transitioned to the new studio. It is a best practice to bookmark the new documentation URL for future reference to ensure access to the most up-to-date information.

## Best Practices for Using This Page

*   **Utilize the Search Function:** The `⌘K` shortcut or the search bar at the top of the page is highly effective for quickly finding specific topics or keywords across the entire documentation set.
*   **Start with "Getting Started":** New users should begin with the "Getting Started" section to build a foundational understanding of Delphi.
*   **Explore "Using Delphi":** For in-depth feature exploration and configuration, the "Using Delphi" section is the primary resource.
*   **Check "What's New" Regularly:** To stay informed about platform updates and new features, periodically review the "What's New" section.
*   **Leverage Support Channels:** For immediate answers, try "Ask Dara's Delphi." For more complex issues, utilize the direct email support.

## Cross-References

This page serves as a gateway to numerous other pages within the Delphi documentation and external resources. Key internal links include:

*   **Introduction:** `/what-is-delphi`
*   **Onboarding:** `/onboarding`
*   **Sharing Your Delphi:** `/sharing-your-delphi`
*   **Data Security & Ownership:** `/data-security-and-ownership`
*   **Languages:** `/fast-fixes/language-related/languages`
*   **Getting Started (Build):** `/build/overview`
*   **Instances:** `/build/instances`
*   **Testing:** `/build/testing`
*   **Settings:** `/build/settings`
*   **Website Integration:** `/integrate/website`
*   **Phone Integration:** `/integrate/phone`
*   **Single Sign-On (SSO):** `/integrate/sso`
*   **Communication (User Experience):** `/user-experience/overview`
*   **Texting and Calling (SMS Guide):** `/user-experience/sms-guide`
*   **Improve Clone:** `/user-experience/improve-clone`
*   **Back to Studio:** `https://www.delphi.ai/studio` (External)
*   **Create a Delphi / Pricing:** `https://www.delphi.ai/pricing` (External)
*   **Explore (Inspiration):** `https://www.delphi.ai/explore` (External)
*   **Ask Dara's Delphi:** `https://www.delphi.ai/dara` (External)
*   **New Documentation Site:** `https://intercom.help/delphi-ai/en` (External)

These links ensure a cohesive and interconnected documentation experience, allowing users to seamlessly navigate between related topics.


--------------------------------------------------------------------------------
title: "Communication - Delphi"
description: "This documentation outlines the various communication methods and features available when interacting with a Delphi AI. It provides a comprehensive guide to initiating conversations via video, audio, ..."
last_updated: "July 10, 2025"
source: "https://docs.delphi.ai/user-experience/overview"
generated_by: "lapis trylapis.com"
--------------------------------------------------------------------------------

# Communication - Delphi

This documentation outlines the various communication methods and features available when interacting with a Delphi AI. It provides a comprehensive guide to initiating conversations via video, audio, or text, leveraging the Delphi Profile for context, and utilizing advanced features like real-time citations and message saving to enhance your user experience.

Understanding the communication functionalities is crucial for maximizing your engagement with a Delphi AI, enabling you to extract precise information, conduct in-depth discussions, and review interactions effectively. This guide covers the technical aspects and best practices for seamless and productive communication.

---

## [Overview](#overview)

The "Communication" section of Delphi's User Experience documentation provides a detailed guide on how users can interact with their Delphi AI. This includes various modalities such as video calls, voice calls, and text messaging, along with features designed to enrich the conversation, such as accessing the Delphi Profile, viewing real-time citations, and saving important messages. The goal is to facilitate natural, informative, and reviewable interactions with your AI expert.

## [Delphi Profile](#delphi-profile)

Every Delphi AI has an associated profile that serves as a foundational resource for users. This profile provides a comprehensive overview of the creator's background, accomplishments, and areas of expertise.

**Purpose:**
The Delphi Profile is designed to:
*   **Provide Context:** Offer insights into the AI's knowledge domain and the creator's professional background.
*   **Guide Interaction:** Help users formulate effective and relevant questions by understanding the AI's scope.
*   **Suggest Questions:** Offer a list of pre-defined questions to help users initiate conversations, especially when unsure how to start.

**Technical Details:**
The profile is accessible directly from the communication interface. It typically includes biographical information, areas of specialization, and potentially a list of suggested questions. This information is curated by the Delphi creator to ensure accuracy and relevance.

**Best Practice:**
Before initiating a complex conversation, review the Delphi Profile. This can significantly improve the quality and relevance of the AI's responses by allowing you to tailor your questions to its specific expertise.

## [Communication Methods](#communication-methods)

Delphi offers multiple channels for direct interaction, catering to different user preferences and scenarios.

### [Video Calling](#video-calling)

Video calling with a Delphi AI provides a highly interactive and immersive experience, akin to a live consultation with an expert.

**Functionality:**
*   **Initiation:** Click the **‘Video’ icon** within the Delphi interface to launch a new video session.
*   **Live Feedback:** Receive real-time visual and audio responses from the Delphi AI.
*   **Real-time Citations:** During the call, relevant citations appear dynamically, allowing you to see the sources of information as they are referenced.
*   **Post-Call Review:** After the conversation concludes, you can access detailed logs of the interaction and explore all cited sources for deeper understanding.

**Technical Details:**
The video calling feature leverages streaming technology to provide a synchronous communication channel. The system processes the AI's responses and overlays citations in real-time, enhancing transparency and verifiability. Call logs are stored for user review, including timestamps and conversational content.

**Best Practice:**
Utilize video calls for in-depth discussions where visual cues or real-time citation access are beneficial. Always review the call logs and citations afterward to consolidate information and explore referenced materials further.

### [Voice Calling](#voice-calling)

Voice calling offers a flexible and convenient way to engage with a Delphi AI, available across multiple platforms.

**Functionality:**
*   **Initiation:** Click the **‘Call’ icon** and select your preferred method:
    *   **On Delphi:** Direct audio call within the Delphi platform.
    *   **Via Phone:** Receive a call on your registered phone number.
    *   **Through WhatsApp:** Initiate a voice call via the WhatsApp application.
*   **Post-Call Review:** Similar to video calls, conversation logs are available for review, along with access to all cited sources.

**Technical Details:**
Voice calling integrates with telephony services and messaging platforms (like WhatsApp) to provide multi-channel access. The system transcribes the audio conversation to generate logs and identify citation points. This allows for a seamless transition from spoken interaction to textual review.

**Best Practice:**
Voice calls are ideal for quick queries or when you prefer an auditory interaction without the need for visual elements. Ensure your preferred calling method is configured correctly for a smooth experience. Reviewing logs is essential for capturing details that might be missed during a live audio conversation.

### [Messaging](#messaging)

Traditional text-based messaging provides a straightforward and asynchronous method for interacting with a Delphi AI.

**Functionality:**
*   **Initiation:** Click **‘Message’** to begin a text conversation.
*   **Suggested Questions:** You can also start a dialogue by selecting from a list of suggested questions, which can help prompt the AI effectively.
*   **Asynchronous Interaction:** Messages can be sent and reviewed at your convenience, making it suitable for less urgent queries or detailed written exchanges.

**Technical Details:**
The messaging interface operates like a standard chat application. Messages are processed by the Delphi AI, and responses are returned as text. This method is highly efficient for information retrieval and detailed written discussions.

**Best Practice:**
Use messaging for specific questions, detailed inquiries that benefit from written responses, or when you need to refer back to the conversation frequently. Leverage suggested questions to quickly get started or explore common topics.

## [Enhancing Your Interaction](#enhancing-your-interaction)

Delphi provides several features to enrich your communication experience and manage information effectively.

### [Viewing Citations](#viewing-citations)

Citations are a core feature of Delphi, providing transparency and verifiability for the AI's responses.

**Functionality:**
*   **Automatic Inclusion:** When a Delphi AI references external information to formulate a response, it automatically includes a citation.
*   **Interactive Access:** Simply click on the numbered citation link associated with the content you wish to investigate.
*   **Source Material Access:** Clicking a citation will display the original source materials, allowing you to access the complete document or webpage for a full understanding of the referenced information.

**Technical Details:**
Delphi's underlying knowledge model is designed to track and attribute information sources. When generating a response, the system identifies the specific pieces of information used and links them back to their original documents or web pages. This ensures that users can always verify the factual basis of the AI's statements.

**Best Practice:**
Always review citations for critical information or when you need to delve deeper into a topic. This practice helps validate the AI's responses and provides a pathway for further research.

### [Saving Messages](#saving-messages)

The ability to save messages allows users to bookmark important or insightful parts of their conversations for future reference.

**Functionality:**
*   **Bookmark:** Hover over any message within the conversation interface.
*   **Heart Icon:** Select the **heart icon** that appears on the right side of the message.
*   **Revisit:** Saved messages can be easily revisited, providing a personalized archive of key interactions.

**Technical Details:**
This feature typically involves storing a reference to the specific message in a user's profile or a dedicated "saved" section. This allows for quick retrieval without needing to scroll through entire conversation histories.

**Best Practice:**
Save messages that contain crucial information, actionable advice, or particularly insightful responses. This creates a personalized knowledge base that you can quickly refer back to, saving time and ensuring you don't lose valuable insights.

### [Additional Features](#additional-features)

Beyond the core communication methods, Delphi offers supplementary functionalities accessible through a dedicated menu.

**Functionality:**
*   **Access Menu:** Click the **three dots (...)** icon located in the top right corner of the communication page.
*   **Get a Text:** Select **‘Get a Text’** to receive a text message from the Delphi AI, initiating a conversation via SMS. This is particularly useful for mobile-centric interactions.
*   **Share Conversation:** Share the current conversation with others, facilitating collaboration or information dissemination.
*   **View Creator’s Social Media:** Access the social media profiles of the Delphi AI's creator, providing additional context or avenues for connection.

**Technical Details:**
The "three dots" menu serves as an overflow menu for less frequently used but valuable features. "Get a Text" integrates with SMS gateways. "Share Conversation" generates a shareable link or exports the conversation. Accessing social media links directly navigates to the creator's specified profiles.

**Best Practice:**
Explore the additional features to discover functionalities that can enhance your workflow. Use "Get a Text" for convenient mobile access, "Share Conversation" for collaborative efforts, and "View Creator's Social Media" for deeper engagement with the Delphi's source.

## [Best Practices for Effective Communication](#best-practices-for-effective-communication)

To maximize your interactions with a Delphi AI, consider the following best practices:

1.  **Start with the Profile:** Always review the Delphi Profile to understand its expertise and tailor your questions accordingly.
2.  **Choose the Right Modality:** Select video for detailed, interactive discussions with real-time citations; voice for quick, auditory exchanges; and messaging for asynchronous, detailed text-based queries.
3.  **Formulate Clear Questions:** Be specific and concise in your questions to help the AI provide the most accurate and relevant responses.
4.  **Leverage Citations:** Actively click and review citations to verify information and deepen your understanding of the AI's responses.
5.  **Save Key Information:** Utilize the "Save Message" feature to bookmark important insights, ensuring you can easily revisit valuable information.
6.  **Review Logs:** After video or voice calls, review the conversation logs to catch any missed details and explore cited sources.
7.  **Explore Additional Features:** Don't overlook the "three dots" menu for functionalities like "Get a Text" or "Share Conversation" that can enhance your overall experience.

## [Troubleshooting Common Communication Issues](#troubleshooting-common-communication-issues)

While Delphi aims for seamless communication, you might encounter occasional issues. Here are some common problems and their solutions:

*   **No Audio/Video During Calls:**
    *   **Check Permissions:** Ensure your browser or device has granted microphone and camera permissions to Delphi.
    *   **Internet Connection:** Verify a stable and strong internet connection.
    *   **Device Settings:** Check your system's audio input/output and camera settings.
*   **Citations Not Appearing:**
    *   **Content Relevance:** Citations only appear when the AI references external information. If the response is based on general knowledge or internal logic, no citation may be provided.
    *   **Refresh Page:** Sometimes a simple page refresh can resolve display issues.
*   **Messages Not Sending/Receiving:**
    *   **Internet Connection:** Confirm your internet connection is active.
    *   **Server Status:** Check Delphi's status page (if available) for any system-wide issues.
    *   **Browser Cache:** Clear your browser's cache and cookies, then try again.
*   **"Get a Text" Not Working:**
    *   **Phone Number Verification:** Ensure your phone number is correctly registered and verified in your Delphi account settings.
    *   **SMS Blocking:** Check if your phone or carrier is blocking messages from unknown numbers.

For persistent issues, refer to the [Delphi Support](/getting-started/support) resources or contact Delphi's technical support team.

## [Related Resources](#related-resources)

For further information on optimizing your Delphi experience, consider exploring these related documentation pages:

*   **[Texting and Calling](/user-experience/sms-guide):** Dive deeper into the specifics of SMS and phone-based interactions with your Delphi AI.
*   **[Improve Clone](/user-experience/improve-clone):** Learn how to refine and enhance the performance and communication capabilities of your Delphi AI.
*   **[Testing](/build/testing):** Understand the processes for testing your Delphi AI to ensure its responses and communication methods are functioning optimally.
*   **[Data Security & Ownership](/data-security-and-ownership):** Review information on how your communication data is handled, secured, and owned within the Delphi platform.
*   **[Onboarding](/onboarding):** Get started with setting up your Delphi and understanding initial communication configurations.


## Website Map

- [Build](https://docs.delphi.ai/build/overview): com/delphi/logo/light_mode.
    - [Settings - Delphi](https://docs.delphi.ai/build/settings): com/delphi/logo/light_mode.
    - [Testing - Delphi](https://docs.delphi.ai/build/testing): com/delphi/logo/light_mode.
    - [Delphi Video Avatar - Delphi](https://docs.delphi.ai/build/video): com/delphi/logo/light_mode.
    - [Voice - Delphi](https://docs.delphi.ai/build/voice): com/delphi/logo/light_mode.
- [Data Security And Ownership](https://docs.delphi.ai/data-security-and-ownership): com/delphi/logo/light_mode.
- [Engage](https://docs.delphi.ai/engage/alerts): com/delphi/logo/light_mode.
    - [Audience and Conversations - Delphi](https://docs.delphi.ai/engage/audience): com/delphi/logo/light_mode.
    - [Email Broadcasts - Delphi](https://docs.delphi.ai/engage/emailbroadcasts): com/delphi/logo/light_mode.
    - [Promote Products - Delphi](https://docs.delphi.ai/engage/promote): com/delphi/logo/light_mode.
    - [SMS Broadcasts - Delphi](https://docs.delphi.ai/engage/smsbroadcasts): com/delphi/logo/light_mode.
- [Fast Fixes](https://docs.delphi.ai/fast-fixes/language-related/languages): com/delphi/logo/light_mode.
- [Home](https://docs.delphi.ai/home): com/delphi/logo/light_mode.
  - [Welcome to Delphi - Delphi](https://docs.delphi.ai/home): com/delphi/logo/light_mode.
- [Integrate](https://docs.delphi.ai/integrate/kajabi): com/delphi/logo/light_mode.
    - [Mighty Networks - Delphi](https://docs.delphi.ai/integrate/mighty): com/delphi/logo/light_mode.
    - [Phone - Delphi](https://docs.delphi.ai/integrate/phone): com/delphi/logo/light_mode.
    - [Slack - Delphi](https://docs.delphi.ai/integrate/slack): com/delphi/logo/light_mode.
    - [Single Sign-On (SSO) - Delphi](https://docs.delphi.ai/integrate/sso): com/delphi/logo/light_mode.
    - [Telegram - Delphi](https://docs.delphi.ai/integrate/telegram): com/delphi/logo/light_mode.
- [Monetize](https://docs.delphi.ai/monetize/free): com/delphi/logo/light_mode.
    - [Memberships - Delphi](https://docs.delphi.ai/monetize/memberships): com/delphi/logo/light_mode.
    - [Pay-As-You-Go - Delphi](https://docs.delphi.ai/monetize/payg): com/delphi/logo/light_mode.
- [Sharing Your Delphi](https://docs.delphi.ai/sharing-your-delphi): com/delphi/logo/light_mode.
- [User Experience](https://docs.delphi.ai/user-experience/overview): com/delphi/logo/light_mode.
    - [Texting and Calling - Delphi](https://docs.delphi.ai/user-experience/sms-guide): com/delphi/logo/light_mode.
- [Using Delphi](https://docs.delphi.ai/using-delphi/mind/behavior): com/delphi/logo/light_mode.
    - [Content - Delphi](https://docs.delphi.ai/using-delphi/mind/content): com/delphi/logo/light_mode.
    - [Your Delphi Page - Delphi](https://docs.delphi.ai/using-delphi/mind/interface): com/delphi/logo/light_mode.
